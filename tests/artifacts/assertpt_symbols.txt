statement => (0,267) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})();\n"
  expression_statement => (0,267) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})();\n"
    expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
      assignment_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
        conditional_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
          logical_or_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
            logical_and_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
              bitwise_or_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                bitwise_xor_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                  bitwise_and_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                    equality_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                      relational_expression__in => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                        shift_expression => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                          additive_expression => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                            multiplicative_expression => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                              unary_expression => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                                postfix_expression => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                                  left_hand_side_expression => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                                    call_expression => (0,265) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})()"
                                      member_expression => (0,263) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})"
                                        primary_expression => (0,263) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})"
                                          cover_parenthesized_expression_and_arrow_parameter_list => (0,263) #"(function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n})"
                                            expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                              assignment_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                conditional_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                  logical_or_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                    logical_and_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                      bitwise_or_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                        bitwise_xor_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                          bitwise_and_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                            equality_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                              relational_expression__in => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                shift_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                  additive_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                    multiplicative_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                      unary_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                        postfix_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                          left_hand_side_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                            new_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                              member_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                                primary_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                                  function_expression => (1,262) #"function() {\n\n    // module scoped symbol\n    var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n\n}"
                                                                                    formal_parameters => (10,10) #""
                                                                                    function_body => (47,260) #"var key = Symbol(\"key\");\n\n    function MyClass(privateData) {\n        this[key] = privateData;\n    }\n\n    MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n"
                                                                                      statement__return => (47,72) #"var key = Symbol(\"key\");\n"
                                                                                        variable_statement => (47,72) #"var key = Symbol(\"key\");\n"
                                                                                          variable_declaration__in => (51,70) #"key = Symbol(\"key\")"
                                                                                            binding_identifier => (51,54) #"key"
                                                                                            initializer__in => (55,70) #"= Symbol(\"key\")"
                                                                                              assignment_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                conditional_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                  logical_or_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                    logical_and_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                      bitwise_or_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                        bitwise_xor_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                          bitwise_and_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                            equality_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                              relational_expression__in => (57,70) #"Symbol(\"key\")"
                                                                                                                shift_expression => (57,70) #"Symbol(\"key\")"
                                                                                                                  additive_expression => (57,70) #"Symbol(\"key\")"
                                                                                                                    multiplicative_expression => (57,70) #"Symbol(\"key\")"
                                                                                                                      unary_expression => (57,70) #"Symbol(\"key\")"
                                                                                                                        postfix_expression => (57,70) #"Symbol(\"key\")"
                                                                                                                          left_hand_side_expression => (57,70) #"Symbol(\"key\")"
                                                                                                                            call_expression => (57,70) #"Symbol(\"key\")"
                                                                                                                              member_expression => (57,63) #"Symbol"
                                                                                                                                primary_expression => (57,63) #"Symbol"
                                                                                                                                  identifier_reference => (57,63) #"Symbol"
                                                                                                                              arguments => (63,70) #"(\"key\")"
                                                                                                                                argument_list => (64,69) #"\"key\""
                                                                                                                                  assignment_expression__in => (64,69) #"\"key\""
                                                                                                                                    conditional_expression__in => (64,69) #"\"key\""
                                                                                                                                      logical_or_expression__in => (64,69) #"\"key\""
                                                                                                                                        logical_and_expression__in => (64,69) #"\"key\""
                                                                                                                                          bitwise_or_expression__in => (64,69) #"\"key\""
                                                                                                                                            bitwise_xor_expression__in => (64,69) #"\"key\""
                                                                                                                                              bitwise_and_expression__in => (64,69) #"\"key\""
                                                                                                                                                equality_expression__in => (64,69) #"\"key\""
                                                                                                                                                  relational_expression__in => (64,69) #"\"key\""
                                                                                                                                                    shift_expression => (64,69) #"\"key\""
                                                                                                                                                      additive_expression => (64,69) #"\"key\""
                                                                                                                                                        multiplicative_expression => (64,69) #"\"key\""
                                                                                                                                                          unary_expression => (64,69) #"\"key\""
                                                                                                                                                            postfix_expression => (64,69) #"\"key\""
                                                                                                                                                              left_hand_side_expression => (64,69) #"\"key\""
                                                                                                                                                                new_expression => (64,69) #"\"key\""
                                                                                                                                                                  member_expression => (64,69) #"\"key\""
                                                                                                                                                                    primary_expression => (64,69) #"\"key\""
                                                                                                                                                                      literal => (64,69) #"\"key\""
                                                                                                                                                                        string_literal => (64,69) #"\"key\""
                                                                                          smart_semicolon => (70,72) #";\n"
                                                                                      declaration => (77,147) #"function MyClass(privateData) {\n        this[key] = privateData;\n    }"
                                                                                        hoistable_declaration => (77,147) #"function MyClass(privateData) {\n        this[key] = privateData;\n    }"
                                                                                          function_declaration => (77,147) #"function MyClass(privateData) {\n        this[key] = privateData;\n    }"
                                                                                            binding_identifier => (86,93) #"MyClass"
                                                                                            formal_parameters => (94,105) #"privateData"
                                                                                              formal_parameter => (94,105) #"privateData"
                                                                                                binding_element => (94,105) #"privateData"
                                                                                                  single_name_binding => (94,105) #"privateData"
                                                                                                    binding_identifier => (94,105) #"privateData"
                                                                                            function_body => (117,146) #"this[key] = privateData;\n    "
                                                                                              statement__return => (117,142) #"this[key] = privateData;\n"
                                                                                                expression_statement => (117,142) #"this[key] = privateData;\n"
                                                                                                  expression__in => (117,140) #"this[key] = privateData"
                                                                                                    assignment_expression__in => (117,140) #"this[key] = privateData"
                                                                                                      left_hand_side_expression => (117,126) #"this[key]"
                                                                                                        new_expression => (117,126) #"this[key]"
                                                                                                          member_expression => (117,126) #"this[key]"
                                                                                                            primary_expression => (117,121) #"this"
                                                                                                              this_exp => (117,121) #"this"
                                                                                                            expression__in => (122,125) #"key"
                                                                                                              assignment_expression__in => (122,125) #"key"
                                                                                                                conditional_expression__in => (122,125) #"key"
                                                                                                                  logical_or_expression__in => (122,125) #"key"
                                                                                                                    logical_and_expression__in => (122,125) #"key"
                                                                                                                      bitwise_or_expression__in => (122,125) #"key"
                                                                                                                        bitwise_xor_expression__in => (122,125) #"key"
                                                                                                                          bitwise_and_expression__in => (122,125) #"key"
                                                                                                                            equality_expression__in => (122,125) #"key"
                                                                                                                              relational_expression__in => (122,125) #"key"
                                                                                                                                shift_expression => (122,125) #"key"
                                                                                                                                  additive_expression => (122,125) #"key"
                                                                                                                                    multiplicative_expression => (122,125) #"key"
                                                                                                                                      unary_expression => (122,125) #"key"
                                                                                                                                        postfix_expression => (122,125) #"key"
                                                                                                                                          left_hand_side_expression => (122,125) #"key"
                                                                                                                                            new_expression => (122,125) #"key"
                                                                                                                                              member_expression => (122,125) #"key"
                                                                                                                                                primary_expression => (122,125) #"key"
                                                                                                                                                  identifier_reference => (122,125) #"key"
                                                                                                      assignment_expression__in => (129,140) #"privateData"
                                                                                                        conditional_expression__in => (129,140) #"privateData"
                                                                                                          logical_or_expression__in => (129,140) #"privateData"
                                                                                                            logical_and_expression__in => (129,140) #"privateData"
                                                                                                              bitwise_or_expression__in => (129,140) #"privateData"
                                                                                                                bitwise_xor_expression__in => (129,140) #"privateData"
                                                                                                                  bitwise_and_expression__in => (129,140) #"privateData"
                                                                                                                    equality_expression__in => (129,140) #"privateData"
                                                                                                                      relational_expression__in => (129,140) #"privateData"
                                                                                                                        shift_expression => (129,140) #"privateData"
                                                                                                                          additive_expression => (129,140) #"privateData"
                                                                                                                            multiplicative_expression => (129,140) #"privateData"
                                                                                                                              unary_expression => (129,140) #"privateData"
                                                                                                                                postfix_expression => (129,140) #"privateData"
                                                                                                                                  left_hand_side_expression => (129,140) #"privateData"
                                                                                                                                    new_expression => (129,140) #"privateData"
                                                                                                                                      member_expression => (129,140) #"privateData"
                                                                                                                                        primary_expression => (129,140) #"privateData"
                                                                                                                                          identifier_reference => (129,140) #"privateData"
                                                                                                  smart_semicolon => (140,142) #";\n"
                                                                                      statement__return => (153,260) #"MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n"
                                                                                        expression_statement => (153,260) #"MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    };\n"
                                                                                          expression__in => (153,258) #"MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                            assignment_expression__in => (153,258) #"MyClass.prototype = {\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                              left_hand_side_expression => (153,170) #"MyClass.prototype"
                                                                                                new_expression => (153,170) #"MyClass.prototype"
                                                                                                  member_expression => (153,170) #"MyClass.prototype"
                                                                                                    primary_expression => (153,160) #"MyClass"
                                                                                                      identifier_reference => (153,160) #"MyClass"
                                                                                                    identifier_name => (161,170) #"prototype"
                                                                                              assignment_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                conditional_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                  logical_or_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                    logical_and_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                      bitwise_or_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                        bitwise_xor_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                          bitwise_and_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                            equality_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                              relational_expression__in => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                shift_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                  additive_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                    multiplicative_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                      unary_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                        postfix_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                          left_hand_side_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                            new_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                              member_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                                primary_expression => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                                  object_literal => (173,258) #"{\n        doStuff: function() {\n            console.log( this[key] );\n        }\n    }"
                                                                                                                                    property_definition_list => (183,252) #"doStuff: function() {\n            console.log( this[key] );\n        }"
                                                                                                                                      property_definition => (183,252) #"doStuff: function() {\n            console.log( this[key] );\n        }"
                                                                                                                                        property_name => (183,190) #"doStuff"
                                                                                                                                          literal_property_name => (183,190) #"doStuff"
                                                                                                                                            identifier_name => (183,190) #"doStuff"
                                                                                                                                        assignment_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                          conditional_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                            logical_or_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                              logical_and_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                bitwise_or_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                  bitwise_xor_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                    bitwise_and_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                      equality_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                        relational_expression__in => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                          shift_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                            additive_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                              multiplicative_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                unary_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                  postfix_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                    left_hand_side_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                      new_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                        member_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                          primary_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                            function_expression => (192,252) #"function() {\n            console.log( this[key] );\n        }"
                                                                                                                                                                              formal_parameters => (201,201) #""
                                                                                                                                                                              function_body => (217,251) #"console.log( this[key] );\n        "
                                                                                                                                                                                statement__return => (217,243) #"console.log( this[key] );\n"
                                                                                                                                                                                  expression_statement => (217,243) #"console.log( this[key] );\n"
                                                                                                                                                                                    expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                      assignment_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                        conditional_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                          logical_or_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                            logical_and_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                              bitwise_or_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                bitwise_xor_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                  bitwise_and_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                    equality_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                      relational_expression__in => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                        shift_expression => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                          additive_expression => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                            multiplicative_expression => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                              unary_expression => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                                postfix_expression => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                                  left_hand_side_expression => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                                    call_expression => (217,241) #"console.log( this[key] )"
                                                                                                                                                                                                                      member_expression => (217,228) #"console.log"
                                                                                                                                                                                                                        primary_expression => (217,224) #"console"
                                                                                                                                                                                                                          identifier_reference => (217,224) #"console"
                                                                                                                                                                                                                        identifier_name => (225,228) #"log"
                                                                                                                                                                                                                      arguments => (228,241) #"( this[key] )"
                                                                                                                                                                                                                        argument_list => (230,240) #"this[key] "
                                                                                                                                                                                                                          assignment_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                            conditional_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                              logical_or_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                                logical_and_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                                  bitwise_or_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                                    bitwise_xor_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                                      bitwise_and_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                                        equality_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                                          relational_expression__in => (230,240) #"this[key] "
                                                                                                                                                                                                                                            shift_expression => (230,240) #"this[key] "
                                                                                                                                                                                                                                              additive_expression => (230,240) #"this[key] "
                                                                                                                                                                                                                                                multiplicative_expression => (230,240) #"this[key] "
                                                                                                                                                                                                                                                  unary_expression => (230,240) #"this[key] "
                                                                                                                                                                                                                                                    postfix_expression => (230,240) #"this[key] "
                                                                                                                                                                                                                                                      left_hand_side_expression => (230,239) #"this[key]"
                                                                                                                                                                                                                                                        new_expression => (230,239) #"this[key]"
                                                                                                                                                                                                                                                          member_expression => (230,239) #"this[key]"
                                                                                                                                                                                                                                                            primary_expression => (230,234) #"this"
                                                                                                                                                                                                                                                              this_exp => (230,234) #"this"
                                                                                                                                                                                                                                                            expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                              assignment_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                conditional_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                  logical_or_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                    logical_and_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                      bitwise_or_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                        bitwise_xor_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                          bitwise_and_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                            equality_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                              relational_expression__in => (235,238) #"key"
                                                                                                                                                                                                                                                                                shift_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                  additive_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                    multiplicative_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                      unary_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                        postfix_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                          left_hand_side_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                            new_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                              member_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                                primary_expression => (235,238) #"key"
                                                                                                                                                                                                                                                                                                  identifier_reference => (235,238) #"key"
                                                                                                                                                                                    smart_semicolon => (241,243) #";\n"
                                                                                          smart_semicolon => (258,260) #";\n"
                                      arguments => (263,265) #"()"
    smart_semicolon => (265,267) #";\n"
statement => (268,297) #"var c = new MyClass(\"hello\")\n"
  variable_statement => (268,297) #"var c = new MyClass(\"hello\")\n"
    variable_declaration__in => (272,296) #"c = new MyClass(\"hello\")"
      binding_identifier => (272,273) #"c"
      initializer__in => (274,296) #"= new MyClass(\"hello\")"
        assignment_expression__in => (276,296) #"new MyClass(\"hello\")"
          conditional_expression__in => (276,296) #"new MyClass(\"hello\")"
            logical_or_expression__in => (276,296) #"new MyClass(\"hello\")"
              logical_and_expression__in => (276,296) #"new MyClass(\"hello\")"
                bitwise_or_expression__in => (276,296) #"new MyClass(\"hello\")"
                  bitwise_xor_expression__in => (276,296) #"new MyClass(\"hello\")"
                    bitwise_and_expression__in => (276,296) #"new MyClass(\"hello\")"
                      equality_expression__in => (276,296) #"new MyClass(\"hello\")"
                        relational_expression__in => (276,296) #"new MyClass(\"hello\")"
                          shift_expression => (276,296) #"new MyClass(\"hello\")"
                            additive_expression => (276,296) #"new MyClass(\"hello\")"
                              multiplicative_expression => (276,296) #"new MyClass(\"hello\")"
                                unary_expression => (276,296) #"new MyClass(\"hello\")"
                                  postfix_expression => (276,296) #"new MyClass(\"hello\")"
                                    left_hand_side_expression => (276,296) #"new MyClass(\"hello\")"
                                      new_expression => (276,296) #"new MyClass(\"hello\")"
                                        member_expression => (276,296) #"new MyClass(\"hello\")"
                                          member_expression => (280,287) #"MyClass"
                                            primary_expression => (280,287) #"MyClass"
                                              identifier_reference => (280,287) #"MyClass"
                                          arguments => (287,296) #"(\"hello\")"
                                            argument_list => (288,295) #"\"hello\""
                                              assignment_expression__in => (288,295) #"\"hello\""
                                                conditional_expression__in => (288,295) #"\"hello\""
                                                  logical_or_expression__in => (288,295) #"\"hello\""
                                                    logical_and_expression__in => (288,295) #"\"hello\""
                                                      bitwise_or_expression__in => (288,295) #"\"hello\""
                                                        bitwise_xor_expression__in => (288,295) #"\"hello\""
                                                          bitwise_and_expression__in => (288,295) #"\"hello\""
                                                            equality_expression__in => (288,295) #"\"hello\""
                                                              relational_expression__in => (288,295) #"\"hello\""
                                                                shift_expression => (288,295) #"\"hello\""
                                                                  additive_expression => (288,295) #"\"hello\""
                                                                    multiplicative_expression => (288,295) #"\"hello\""
                                                                      unary_expression => (288,295) #"\"hello\""
                                                                        postfix_expression => (288,295) #"\"hello\""
                                                                          left_hand_side_expression => (288,295) #"\"hello\""
                                                                            new_expression => (288,295) #"\"hello\""
                                                                              member_expression => (288,295) #"\"hello\""
                                                                                primary_expression => (288,295) #"\"hello\""
                                                                                  literal => (288,295) #"\"hello\""
                                                                                    string_literal => (288,295) #"\"hello\""
    smart_semicolon => (296,297) #"\n"
statement => (297,320) #"c[\"key\"] === undefined\n"
  expression_statement => (297,320) #"c[\"key\"] === undefined\n"
    expression__in => (297,319) #"c[\"key\"] === undefined"
      assignment_expression__in => (297,319) #"c[\"key\"] === undefined"
        conditional_expression__in => (297,319) #"c[\"key\"] === undefined"
          logical_or_expression__in => (297,319) #"c[\"key\"] === undefined"
            logical_and_expression__in => (297,319) #"c[\"key\"] === undefined"
              bitwise_or_expression__in => (297,319) #"c[\"key\"] === undefined"
                bitwise_xor_expression__in => (297,319) #"c[\"key\"] === undefined"
                  bitwise_and_expression__in => (297,319) #"c[\"key\"] === undefined"
                    equality_expression__in => (297,319) #"c[\"key\"] === undefined"
                      relational_expression__in => (297,306) #"c[\"key\"] "
                        shift_expression => (297,306) #"c[\"key\"] "
                          additive_expression => (297,306) #"c[\"key\"] "
                            multiplicative_expression => (297,306) #"c[\"key\"] "
                              unary_expression => (297,306) #"c[\"key\"] "
                                postfix_expression => (297,306) #"c[\"key\"] "
                                  left_hand_side_expression => (297,305) #"c[\"key\"]"
                                    new_expression => (297,305) #"c[\"key\"]"
                                      member_expression => (297,305) #"c[\"key\"]"
                                        primary_expression => (297,298) #"c"
                                          identifier_reference => (297,298) #"c"
                                        expression__in => (299,304) #"\"key\""
                                          assignment_expression__in => (299,304) #"\"key\""
                                            conditional_expression__in => (299,304) #"\"key\""
                                              logical_or_expression__in => (299,304) #"\"key\""
                                                logical_and_expression__in => (299,304) #"\"key\""
                                                  bitwise_or_expression__in => (299,304) #"\"key\""
                                                    bitwise_xor_expression__in => (299,304) #"\"key\""
                                                      bitwise_and_expression__in => (299,304) #"\"key\""
                                                        equality_expression__in => (299,304) #"\"key\""
                                                          relational_expression__in => (299,304) #"\"key\""
                                                            shift_expression => (299,304) #"\"key\""
                                                              additive_expression => (299,304) #"\"key\""
                                                                multiplicative_expression => (299,304) #"\"key\""
                                                                  unary_expression => (299,304) #"\"key\""
                                                                    postfix_expression => (299,304) #"\"key\""
                                                                      left_hand_side_expression => (299,304) #"\"key\""
                                                                        new_expression => (299,304) #"\"key\""
                                                                          member_expression => (299,304) #"\"key\""
                                                                            primary_expression => (299,304) #"\"key\""
                                                                              literal => (299,304) #"\"key\""
                                                                                string_literal => (299,304) #"\"key\""
                      equality_operator => (306,309) #"==="
                      relational_expression__in => (310,319) #"undefined"
                        shift_expression => (310,319) #"undefined"
                          additive_expression => (310,319) #"undefined"
                            multiplicative_expression => (310,319) #"undefined"
                              unary_expression => (310,319) #"undefined"
                                postfix_expression => (310,319) #"undefined"
                                  left_hand_side_expression => (310,319) #"undefined"
                                    new_expression => (310,319) #"undefined"
                                      member_expression => (310,319) #"undefined"
                                        primary_expression => (310,319) #"undefined"
                                          identifier_reference => (310,319) #"undefined"
    smart_semicolon => (319,320) #"\n"
