single_line_comment => (0,58) #"// When an argument is not passed (or passed as undefined)"
single_line_comment => (59,98) #"// in a function call the default value"
declaration => (99,194) #"function f(x, y=12) {\n    // y is 12 if not passed (or passed as undefined)\n    return x + y;\n}"
__hoistable_declaration => (99,194) #"function f(x, y=12) {\n    // y is 12 if not passed (or passed as undefined)\n    return x + y;\n}"
____function_declaration => (99,194) #"function f(x, y=12) {\n    // y is 12 if not passed (or passed as undefined)\n    return x + y;\n}"
______binding_identifier => (108,109) #"f"
______formal_parameters => (110,117) #"x, y=12"
________formal_parameter => (110,111) #"x"
__________binding_element => (110,111) #"x"
____________single_name_binding => (110,111) #"x"
______________binding_identifier => (110,111) #"x"
________formal_parameter => (113,117) #"y=12"
__________binding_element => (113,117) #"y=12"
____________single_name_binding => (113,117) #"y=12"
______________binding_identifier => (113,114) #"y"
______________initializer__in => (114,117) #"=12"
________________assignment_expression__in => (115,117) #"12"
__________________conditional_expression__in => (115,117) #"12"
____________________logical_or_expression__in => (115,117) #"12"
______________________logical_and_expression__in => (115,117) #"12"
________________________bitwise_or_expression__in => (115,117) #"12"
__________________________bitwise_xor_expression__in => (115,117) #"12"
____________________________bitwise_and_expression__in => (115,117) #"12"
______________________________equality_expression__in => (115,117) #"12"
________________________________relational_expression__in => (115,117) #"12"
__________________________________shift_expression => (115,117) #"12"
____________________________________additive_expression => (115,117) #"12"
______________________________________multiplicative_expression => (115,117) #"12"
________________________________________unary_expression => (115,117) #"12"
__________________________________________postfix_expression => (115,117) #"12"
____________________________________________left_hand_side_expression => (115,117) #"12"
______________________________________________new_expression => (115,117) #"12"
________________________________________________member_expression => (115,117) #"12"
__________________________________________________primary_expression => (115,117) #"12"
____________________________________________________literal => (115,117) #"12"
______________________________________________________numeric_literal => (115,117) #"12"
________________________________________________________decimal_literal => (115,117) #"12"
__________________________________________________________decimal_integer_literal => (115,117) #"12"
______function_body => (125,193) #"// y is 12 if not passed (or passed as undefined)\n    return x + y;\n"
________single_line_comment => (125,174) #"// y is 12 if not passed (or passed as undefined)"
________return_statement => (179,192) #"return x + y;"
__________expression__in => (186,191) #"x + y"
____________assignment_expression__in => (186,191) #"x + y"
______________conditional_expression__in => (186,191) #"x + y"
________________logical_or_expression__in => (186,191) #"x + y"
__________________logical_and_expression__in => (186,191) #"x + y"
____________________bitwise_or_expression__in => (186,191) #"x + y"
______________________bitwise_xor_expression__in => (186,191) #"x + y"
________________________bitwise_and_expression__in => (186,191) #"x + y"
__________________________equality_expression__in => (186,191) #"x + y"
____________________________relational_expression__in => (186,191) #"x + y"
______________________________shift_expression => (186,191) #"x + y"
________________________________additive_expression => (186,191) #"x + y"
__________________________________multiplicative_expression => (186,188) #"x "
____________________________________unary_expression => (186,188) #"x "
______________________________________postfix_expression => (186,188) #"x "
________________________________________left_hand_side_expression => (186,188) #"x "
__________________________________________new_expression => (186,188) #"x "
____________________________________________member_expression => (186,188) #"x "
______________________________________________primary_expression => (186,187) #"x"
________________________________________________identifier_reference => (186,187) #"x"
__________________________________multiplicative_expression => (190,191) #"y"
____________________________________unary_expression => (190,191) #"y"
______________________________________postfix_expression => (190,191) #"y"
________________________________________left_hand_side_expression => (190,191) #"y"
__________________________________________new_expression => (190,191) #"y"
____________________________________________member_expression => (190,191) #"y"
______________________________________________primary_expression => (190,191) #"y"
________________________________________________identifier_reference => (190,191) #"y"
__________smart_semicolon => (191,192) #";"
expression_statement => (196,216) #"console.log( f(3) );"
__expression__in => (196,215) #"console.log( f(3) )"
____assignment_expression__in => (196,215) #"console.log( f(3) )"
______conditional_expression__in => (196,215) #"console.log( f(3) )"
________logical_or_expression__in => (196,215) #"console.log( f(3) )"
__________logical_and_expression__in => (196,215) #"console.log( f(3) )"
____________bitwise_or_expression__in => (196,215) #"console.log( f(3) )"
______________bitwise_xor_expression__in => (196,215) #"console.log( f(3) )"
________________bitwise_and_expression__in => (196,215) #"console.log( f(3) )"
__________________equality_expression__in => (196,215) #"console.log( f(3) )"
____________________relational_expression__in => (196,215) #"console.log( f(3) )"
______________________shift_expression => (196,215) #"console.log( f(3) )"
________________________additive_expression => (196,215) #"console.log( f(3) )"
__________________________multiplicative_expression => (196,215) #"console.log( f(3) )"
____________________________unary_expression => (196,215) #"console.log( f(3) )"
______________________________postfix_expression => (196,215) #"console.log( f(3) )"
________________________________left_hand_side_expression => (196,215) #"console.log( f(3) )"
__________________________________call_expression => (196,215) #"console.log( f(3) )"
____________________________________member_expression => (196,207) #"console.log"
______________________________________primary_expression => (196,203) #"console"
________________________________________identifier_reference => (196,203) #"console"
______________________________________identifier_name => (204,207) #"log"
____________________________________arguments => (207,215) #"( f(3) )"
______________________________________argument_list => (209,214) #"f(3) "
________________________________________assignment_expression__in => (209,214) #"f(3) "
__________________________________________conditional_expression__in => (209,214) #"f(3) "
____________________________________________logical_or_expression__in => (209,214) #"f(3) "
______________________________________________logical_and_expression__in => (209,214) #"f(3) "
________________________________________________bitwise_or_expression__in => (209,214) #"f(3) "
__________________________________________________bitwise_xor_expression__in => (209,214) #"f(3) "
____________________________________________________bitwise_and_expression__in => (209,214) #"f(3) "
______________________________________________________equality_expression__in => (209,214) #"f(3) "
________________________________________________________relational_expression__in => (209,214) #"f(3) "
__________________________________________________________shift_expression => (209,214) #"f(3) "
____________________________________________________________additive_expression => (209,214) #"f(3) "
______________________________________________________________multiplicative_expression => (209,214) #"f(3) "
________________________________________________________________unary_expression => (209,214) #"f(3) "
__________________________________________________________________postfix_expression => (209,214) #"f(3) "
____________________________________________________________________left_hand_side_expression => (209,214) #"f(3) "
______________________________________________________________________call_expression => (209,214) #"f(3) "
________________________________________________________________________member_expression => (209,210) #"f"
__________________________________________________________________________primary_expression => (209,210) #"f"
____________________________________________________________________________identifier_reference => (209,210) #"f"
________________________________________________________________________arguments => (210,213) #"(3)"
__________________________________________________________________________argument_list => (211,212) #"3"
____________________________________________________________________________assignment_expression__in => (211,212) #"3"
______________________________________________________________________________conditional_expression__in => (211,212) #"3"
________________________________________________________________________________logical_or_expression__in => (211,212) #"3"
__________________________________________________________________________________logical_and_expression__in => (211,212) #"3"
____________________________________________________________________________________bitwise_or_expression__in => (211,212) #"3"
______________________________________________________________________________________bitwise_xor_expression__in => (211,212) #"3"
________________________________________________________________________________________bitwise_and_expression__in => (211,212) #"3"
__________________________________________________________________________________________equality_expression__in => (211,212) #"3"
____________________________________________________________________________________________relational_expression__in => (211,212) #"3"
______________________________________________________________________________________________shift_expression => (211,212) #"3"
________________________________________________________________________________________________additive_expression => (211,212) #"3"
__________________________________________________________________________________________________multiplicative_expression => (211,212) #"3"
____________________________________________________________________________________________________unary_expression => (211,212) #"3"
______________________________________________________________________________________________________postfix_expression => (211,212) #"3"
________________________________________________________________________________________________________left_hand_side_expression => (211,212) #"3"
__________________________________________________________________________________________________________new_expression => (211,212) #"3"
____________________________________________________________________________________________________________member_expression => (211,212) #"3"
______________________________________________________________________________________________________________primary_expression => (211,212) #"3"
________________________________________________________________________________________________________________literal => (211,212) #"3"
__________________________________________________________________________________________________________________numeric_literal => (211,212) #"3"
____________________________________________________________________________________________________________________decimal_literal => (211,212) #"3"
______________________________________________________________________________________________________________________decimal_integer_literal => (211,212) #"3"
__smart_semicolon => (215,216) #";"
single_line_comment => (218,298) #"// The remaining passed arguments can be bound through the rest argument (...)Id"
declaration => (299,368) #"function g(x, ...y) {\n    // y is an Array\n    return x * y.length;\n}"
__hoistable_declaration => (299,368) #"function g(x, ...y) {\n    // y is an Array\n    return x * y.length;\n}"
____function_declaration => (299,368) #"function g(x, ...y) {\n    // y is an Array\n    return x * y.length;\n}"
______binding_identifier => (308,309) #"g"
______formal_parameters => (310,317) #"x, ...y"
________formal_parameter => (310,311) #"x"
__________binding_element => (310,311) #"x"
____________single_name_binding => (310,311) #"x"
______________binding_identifier => (310,311) #"x"
________function_rest_parameter => (313,317) #"...y"
__________binding_rest_element => (313,317) #"...y"
____________binding_identifier => (316,317) #"y"
______function_body => (325,367) #"// y is an Array\n    return x * y.length;\n"
________single_line_comment => (325,341) #"// y is an Array"
________return_statement => (346,366) #"return x * y.length;"
__________expression__in => (353,365) #"x * y.length"
____________assignment_expression__in => (353,365) #"x * y.length"
______________conditional_expression__in => (353,365) #"x * y.length"
________________logical_or_expression__in => (353,365) #"x * y.length"
__________________logical_and_expression__in => (353,365) #"x * y.length"
____________________bitwise_or_expression__in => (353,365) #"x * y.length"
______________________bitwise_xor_expression__in => (353,365) #"x * y.length"
________________________bitwise_and_expression__in => (353,365) #"x * y.length"
__________________________equality_expression__in => (353,365) #"x * y.length"
____________________________relational_expression__in => (353,365) #"x * y.length"
______________________________shift_expression => (353,365) #"x * y.length"
________________________________additive_expression => (353,365) #"x * y.length"
__________________________________multiplicative_expression => (353,365) #"x * y.length"
____________________________________unary_expression => (353,355) #"x "
______________________________________postfix_expression => (353,355) #"x "
________________________________________left_hand_side_expression => (353,355) #"x "
__________________________________________new_expression => (353,355) #"x "
____________________________________________member_expression => (353,355) #"x "
______________________________________________primary_expression => (353,354) #"x"
________________________________________________identifier_reference => (353,354) #"x"
____________________________________multiplicative_operator => (355,356) #"*"
____________________________________unary_expression => (357,365) #"y.length"
______________________________________postfix_expression => (357,365) #"y.length"
________________________________________left_hand_side_expression => (357,365) #"y.length"
__________________________________________new_expression => (357,365) #"y.length"
____________________________________________member_expression => (357,365) #"y.length"
______________________________________________primary_expression => (357,358) #"y"
________________________________________________identifier_reference => (357,358) #"y"
______________________________________________identifier_name => (359,365) #"length"
__________smart_semicolon => (365,366) #";"
expression_statement => (370,405) #"console.log( g(3, \"hello\", true) );"
__expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
____assignment_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
______conditional_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
________logical_or_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
__________logical_and_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
____________bitwise_or_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
______________bitwise_xor_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
________________bitwise_and_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
__________________equality_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
____________________relational_expression__in => (370,404) #"console.log( g(3, \"hello\", true) )"
______________________shift_expression => (370,404) #"console.log( g(3, \"hello\", true) )"
________________________additive_expression => (370,404) #"console.log( g(3, \"hello\", true) )"
__________________________multiplicative_expression => (370,404) #"console.log( g(3, \"hello\", true) )"
____________________________unary_expression => (370,404) #"console.log( g(3, \"hello\", true) )"
______________________________postfix_expression => (370,404) #"console.log( g(3, \"hello\", true) )"
________________________________left_hand_side_expression => (370,404) #"console.log( g(3, \"hello\", true) )"
__________________________________call_expression => (370,404) #"console.log( g(3, \"hello\", true) )"
____________________________________member_expression => (370,381) #"console.log"
______________________________________primary_expression => (370,377) #"console"
________________________________________identifier_reference => (370,377) #"console"
______________________________________identifier_name => (378,381) #"log"
____________________________________arguments => (381,404) #"( g(3, \"hello\", true) )"
______________________________________argument_list => (383,403) #"g(3, \"hello\", true) "
________________________________________assignment_expression__in => (383,403) #"g(3, \"hello\", true) "
__________________________________________conditional_expression__in => (383,403) #"g(3, \"hello\", true) "
____________________________________________logical_or_expression__in => (383,403) #"g(3, \"hello\", true) "
______________________________________________logical_and_expression__in => (383,403) #"g(3, \"hello\", true) "
________________________________________________bitwise_or_expression__in => (383,403) #"g(3, \"hello\", true) "
__________________________________________________bitwise_xor_expression__in => (383,403) #"g(3, \"hello\", true) "
____________________________________________________bitwise_and_expression__in => (383,403) #"g(3, \"hello\", true) "
______________________________________________________equality_expression__in => (383,403) #"g(3, \"hello\", true) "
________________________________________________________relational_expression__in => (383,403) #"g(3, \"hello\", true) "
__________________________________________________________shift_expression => (383,403) #"g(3, \"hello\", true) "
____________________________________________________________additive_expression => (383,403) #"g(3, \"hello\", true) "
______________________________________________________________multiplicative_expression => (383,403) #"g(3, \"hello\", true) "
________________________________________________________________unary_expression => (383,403) #"g(3, \"hello\", true) "
__________________________________________________________________postfix_expression => (383,403) #"g(3, \"hello\", true) "
____________________________________________________________________left_hand_side_expression => (383,403) #"g(3, \"hello\", true) "
______________________________________________________________________call_expression => (383,403) #"g(3, \"hello\", true) "
________________________________________________________________________member_expression => (383,384) #"g"
__________________________________________________________________________primary_expression => (383,384) #"g"
____________________________________________________________________________identifier_reference => (383,384) #"g"
________________________________________________________________________arguments => (384,402) #"(3, \"hello\", true)"
__________________________________________________________________________argument_list => (385,401) #"3, \"hello\", true"
____________________________________________________________________________assignment_expression__in => (385,386) #"3"
______________________________________________________________________________conditional_expression__in => (385,386) #"3"
________________________________________________________________________________logical_or_expression__in => (385,386) #"3"
__________________________________________________________________________________logical_and_expression__in => (385,386) #"3"
____________________________________________________________________________________bitwise_or_expression__in => (385,386) #"3"
______________________________________________________________________________________bitwise_xor_expression__in => (385,386) #"3"
________________________________________________________________________________________bitwise_and_expression__in => (385,386) #"3"
__________________________________________________________________________________________equality_expression__in => (385,386) #"3"
____________________________________________________________________________________________relational_expression__in => (385,386) #"3"
______________________________________________________________________________________________shift_expression => (385,386) #"3"
________________________________________________________________________________________________additive_expression => (385,386) #"3"
__________________________________________________________________________________________________multiplicative_expression => (385,386) #"3"
____________________________________________________________________________________________________unary_expression => (385,386) #"3"
______________________________________________________________________________________________________postfix_expression => (385,386) #"3"
________________________________________________________________________________________________________left_hand_side_expression => (385,386) #"3"
__________________________________________________________________________________________________________new_expression => (385,386) #"3"
____________________________________________________________________________________________________________member_expression => (385,386) #"3"
______________________________________________________________________________________________________________primary_expression => (385,386) #"3"
________________________________________________________________________________________________________________literal => (385,386) #"3"
__________________________________________________________________________________________________________________numeric_literal => (385,386) #"3"
____________________________________________________________________________________________________________________decimal_literal => (385,386) #"3"
______________________________________________________________________________________________________________________decimal_integer_literal => (385,386) #"3"
____________________________________________________________________________assignment_expression__in => (388,395) #"\"hello\""
______________________________________________________________________________conditional_expression__in => (388,395) #"\"hello\""
________________________________________________________________________________logical_or_expression__in => (388,395) #"\"hello\""
__________________________________________________________________________________logical_and_expression__in => (388,395) #"\"hello\""
____________________________________________________________________________________bitwise_or_expression__in => (388,395) #"\"hello\""
______________________________________________________________________________________bitwise_xor_expression__in => (388,395) #"\"hello\""
________________________________________________________________________________________bitwise_and_expression__in => (388,395) #"\"hello\""
__________________________________________________________________________________________equality_expression__in => (388,395) #"\"hello\""
____________________________________________________________________________________________relational_expression__in => (388,395) #"\"hello\""
______________________________________________________________________________________________shift_expression => (388,395) #"\"hello\""
________________________________________________________________________________________________additive_expression => (388,395) #"\"hello\""
__________________________________________________________________________________________________multiplicative_expression => (388,395) #"\"hello\""
____________________________________________________________________________________________________unary_expression => (388,395) #"\"hello\""
______________________________________________________________________________________________________postfix_expression => (388,395) #"\"hello\""
________________________________________________________________________________________________________left_hand_side_expression => (388,395) #"\"hello\""
__________________________________________________________________________________________________________new_expression => (388,395) #"\"hello\""
____________________________________________________________________________________________________________member_expression => (388,395) #"\"hello\""
______________________________________________________________________________________________________________primary_expression => (388,395) #"\"hello\""
________________________________________________________________________________________________________________literal => (388,395) #"\"hello\""
__________________________________________________________________________________________________________________string_literal => (388,395) #"\"hello\""
____________________________________________________________________________assignment_expression__in => (397,401) #"true"
______________________________________________________________________________conditional_expression__in => (397,401) #"true"
________________________________________________________________________________logical_or_expression__in => (397,401) #"true"
__________________________________________________________________________________logical_and_expression__in => (397,401) #"true"
____________________________________________________________________________________bitwise_or_expression__in => (397,401) #"true"
______________________________________________________________________________________bitwise_xor_expression__in => (397,401) #"true"
________________________________________________________________________________________bitwise_and_expression__in => (397,401) #"true"
__________________________________________________________________________________________equality_expression__in => (397,401) #"true"
____________________________________________________________________________________________relational_expression__in => (397,401) #"true"
______________________________________________________________________________________________shift_expression => (397,401) #"true"
________________________________________________________________________________________________additive_expression => (397,401) #"true"
__________________________________________________________________________________________________multiplicative_expression => (397,401) #"true"
____________________________________________________________________________________________________unary_expression => (397,401) #"true"
______________________________________________________________________________________________________postfix_expression => (397,401) #"true"
________________________________________________________________________________________________________left_hand_side_expression => (397,401) #"true"
__________________________________________________________________________________________________________new_expression => (397,401) #"true"
____________________________________________________________________________________________________________member_expression => (397,401) #"true"
______________________________________________________________________________________________________________primary_expression => (397,401) #"true"
________________________________________________________________________________________________________________literal => (397,401) #"true"
__________________________________________________________________________________________________________________boolean_literal => (397,401) #"true"
__smart_semicolon => (404,405) #";"
declaration => (407,452) #"function h(x, y, z) {\n    return x + y + z;\n}"
__hoistable_declaration => (407,452) #"function h(x, y, z) {\n    return x + y + z;\n}"
____function_declaration => (407,452) #"function h(x, y, z) {\n    return x + y + z;\n}"
______binding_identifier => (416,417) #"h"
______formal_parameters => (418,425) #"x, y, z"
________formal_parameter => (418,419) #"x"
__________binding_element => (418,419) #"x"
____________single_name_binding => (418,419) #"x"
______________binding_identifier => (418,419) #"x"
________formal_parameter => (421,422) #"y"
__________binding_element => (421,422) #"y"
____________single_name_binding => (421,422) #"y"
______________binding_identifier => (421,422) #"y"
________formal_parameter => (424,425) #"z"
__________binding_element => (424,425) #"z"
____________single_name_binding => (424,425) #"z"
______________binding_identifier => (424,425) #"z"
______function_body => (433,451) #"return x + y + z;\n"
________return_statement => (433,450) #"return x + y + z;"
__________expression__in => (440,449) #"x + y + z"
____________assignment_expression__in => (440,449) #"x + y + z"
______________conditional_expression__in => (440,449) #"x + y + z"
________________logical_or_expression__in => (440,449) #"x + y + z"
__________________logical_and_expression__in => (440,449) #"x + y + z"
____________________bitwise_or_expression__in => (440,449) #"x + y + z"
______________________bitwise_xor_expression__in => (440,449) #"x + y + z"
________________________bitwise_and_expression__in => (440,449) #"x + y + z"
__________________________equality_expression__in => (440,449) #"x + y + z"
____________________________relational_expression__in => (440,449) #"x + y + z"
______________________________shift_expression => (440,449) #"x + y + z"
________________________________additive_expression => (440,449) #"x + y + z"
__________________________________multiplicative_expression => (440,442) #"x "
____________________________________unary_expression => (440,442) #"x "
______________________________________postfix_expression => (440,442) #"x "
________________________________________left_hand_side_expression => (440,442) #"x "
__________________________________________new_expression => (440,442) #"x "
____________________________________________member_expression => (440,442) #"x "
______________________________________________primary_expression => (440,441) #"x"
________________________________________________identifier_reference => (440,441) #"x"
__________________________________multiplicative_expression => (444,446) #"y "
____________________________________unary_expression => (444,446) #"y "
______________________________________postfix_expression => (444,446) #"y "
________________________________________left_hand_side_expression => (444,446) #"y "
__________________________________________new_expression => (444,446) #"y "
____________________________________________member_expression => (444,446) #"y "
______________________________________________primary_expression => (444,445) #"y"
________________________________________________identifier_reference => (444,445) #"y"
__________________________________multiplicative_expression => (448,449) #"z"
____________________________________unary_expression => (448,449) #"z"
______________________________________postfix_expression => (448,449) #"z"
________________________________________left_hand_side_expression => (448,449) #"z"
__________________________________________new_expression => (448,449) #"z"
____________________________________________member_expression => (448,449) #"z"
______________________________________________primary_expression => (448,449) #"z"
________________________________________________identifier_reference => (448,449) #"z"
__________smart_semicolon => (449,450) #";"
single_line_comment => (454,501) #"// The spread operator can be used to pass each"
single_line_comment => (502,547) #"// element of an array as a separate argument"
expression_statement => (548,583) #"console.log( h(...[1,2,3],4,5,6) );"
__expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
____assignment_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
______conditional_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
________logical_or_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
__________logical_and_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
____________bitwise_or_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
______________bitwise_xor_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
________________bitwise_and_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
__________________equality_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
____________________relational_expression__in => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
______________________shift_expression => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
________________________additive_expression => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
__________________________multiplicative_expression => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
____________________________unary_expression => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
______________________________postfix_expression => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
________________________________left_hand_side_expression => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
__________________________________call_expression => (548,582) #"console.log( h(...[1,2,3],4,5,6) )"
____________________________________member_expression => (548,559) #"console.log"
______________________________________primary_expression => (548,555) #"console"
________________________________________identifier_reference => (548,555) #"console"
______________________________________identifier_name => (556,559) #"log"
____________________________________arguments => (559,582) #"( h(...[1,2,3],4,5,6) )"
______________________________________argument_list => (561,581) #"h(...[1,2,3],4,5,6) "
________________________________________assignment_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
__________________________________________conditional_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
____________________________________________logical_or_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
______________________________________________logical_and_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
________________________________________________bitwise_or_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
__________________________________________________bitwise_xor_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
____________________________________________________bitwise_and_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
______________________________________________________equality_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
________________________________________________________relational_expression__in => (561,581) #"h(...[1,2,3],4,5,6) "
__________________________________________________________shift_expression => (561,581) #"h(...[1,2,3],4,5,6) "
____________________________________________________________additive_expression => (561,581) #"h(...[1,2,3],4,5,6) "
______________________________________________________________multiplicative_expression => (561,581) #"h(...[1,2,3],4,5,6) "
________________________________________________________________unary_expression => (561,581) #"h(...[1,2,3],4,5,6) "
__________________________________________________________________postfix_expression => (561,581) #"h(...[1,2,3],4,5,6) "
____________________________________________________________________left_hand_side_expression => (561,581) #"h(...[1,2,3],4,5,6) "
______________________________________________________________________call_expression => (561,581) #"h(...[1,2,3],4,5,6) "
________________________________________________________________________member_expression => (561,562) #"h"
__________________________________________________________________________primary_expression => (561,562) #"h"
____________________________________________________________________________identifier_reference => (561,562) #"h"
________________________________________________________________________arguments => (562,580) #"(...[1,2,3],4,5,6)"
__________________________________________________________________________argument_list => (563,579) #"...[1,2,3],4,5,6"
____________________________________________________________________________assignment_expression__in => (566,573) #"[1,2,3]"
______________________________________________________________________________conditional_expression__in => (566,573) #"[1,2,3]"
________________________________________________________________________________logical_or_expression__in => (566,573) #"[1,2,3]"
__________________________________________________________________________________logical_and_expression__in => (566,573) #"[1,2,3]"
____________________________________________________________________________________bitwise_or_expression__in => (566,573) #"[1,2,3]"
______________________________________________________________________________________bitwise_xor_expression__in => (566,573) #"[1,2,3]"
________________________________________________________________________________________bitwise_and_expression__in => (566,573) #"[1,2,3]"
__________________________________________________________________________________________equality_expression__in => (566,573) #"[1,2,3]"
____________________________________________________________________________________________relational_expression__in => (566,573) #"[1,2,3]"
______________________________________________________________________________________________shift_expression => (566,573) #"[1,2,3]"
________________________________________________________________________________________________additive_expression => (566,573) #"[1,2,3]"
__________________________________________________________________________________________________multiplicative_expression => (566,573) #"[1,2,3]"
____________________________________________________________________________________________________unary_expression => (566,573) #"[1,2,3]"
______________________________________________________________________________________________________postfix_expression => (566,573) #"[1,2,3]"
________________________________________________________________________________________________________left_hand_side_expression => (566,573) #"[1,2,3]"
__________________________________________________________________________________________________________new_expression => (566,573) #"[1,2,3]"
____________________________________________________________________________________________________________member_expression => (566,573) #"[1,2,3]"
______________________________________________________________________________________________________________primary_expression => (566,573) #"[1,2,3]"
________________________________________________________________________________________________________________array_literal => (566,573) #"[1,2,3]"
__________________________________________________________________________________________________________________assignment_expression__in => (567,568) #"1"
____________________________________________________________________________________________________________________conditional_expression__in => (567,568) #"1"
______________________________________________________________________________________________________________________logical_or_expression__in => (567,568) #"1"
________________________________________________________________________________________________________________________logical_and_expression__in => (567,568) #"1"
__________________________________________________________________________________________________________________________bitwise_or_expression__in => (567,568) #"1"
____________________________________________________________________________________________________________________________bitwise_xor_expression__in => (567,568) #"1"
______________________________________________________________________________________________________________________________bitwise_and_expression__in => (567,568) #"1"
________________________________________________________________________________________________________________________________equality_expression__in => (567,568) #"1"
__________________________________________________________________________________________________________________________________relational_expression__in => (567,568) #"1"
____________________________________________________________________________________________________________________________________shift_expression => (567,568) #"1"
______________________________________________________________________________________________________________________________________additive_expression => (567,568) #"1"
________________________________________________________________________________________________________________________________________multiplicative_expression => (567,568) #"1"
__________________________________________________________________________________________________________________________________________unary_expression => (567,568) #"1"
____________________________________________________________________________________________________________________________________________postfix_expression => (567,568) #"1"
______________________________________________________________________________________________________________________________________________left_hand_side_expression => (567,568) #"1"
________________________________________________________________________________________________________________________________________________new_expression => (567,568) #"1"
__________________________________________________________________________________________________________________________________________________member_expression => (567,568) #"1"
____________________________________________________________________________________________________________________________________________________primary_expression => (567,568) #"1"
______________________________________________________________________________________________________________________________________________________literal => (567,568) #"1"
________________________________________________________________________________________________________________________________________________________numeric_literal => (567,568) #"1"
__________________________________________________________________________________________________________________________________________________________decimal_literal => (567,568) #"1"
____________________________________________________________________________________________________________________________________________________________decimal_integer_literal => (567,568) #"1"
__________________________________________________________________________________________________________________assignment_expression__in => (569,570) #"2"
____________________________________________________________________________________________________________________conditional_expression__in => (569,570) #"2"
______________________________________________________________________________________________________________________logical_or_expression__in => (569,570) #"2"
________________________________________________________________________________________________________________________logical_and_expression__in => (569,570) #"2"
__________________________________________________________________________________________________________________________bitwise_or_expression__in => (569,570) #"2"
____________________________________________________________________________________________________________________________bitwise_xor_expression__in => (569,570) #"2"
______________________________________________________________________________________________________________________________bitwise_and_expression__in => (569,570) #"2"
________________________________________________________________________________________________________________________________equality_expression__in => (569,570) #"2"
__________________________________________________________________________________________________________________________________relational_expression__in => (569,570) #"2"
____________________________________________________________________________________________________________________________________shift_expression => (569,570) #"2"
______________________________________________________________________________________________________________________________________additive_expression => (569,570) #"2"
________________________________________________________________________________________________________________________________________multiplicative_expression => (569,570) #"2"
__________________________________________________________________________________________________________________________________________unary_expression => (569,570) #"2"
____________________________________________________________________________________________________________________________________________postfix_expression => (569,570) #"2"
______________________________________________________________________________________________________________________________________________left_hand_side_expression => (569,570) #"2"
________________________________________________________________________________________________________________________________________________new_expression => (569,570) #"2"
__________________________________________________________________________________________________________________________________________________member_expression => (569,570) #"2"
____________________________________________________________________________________________________________________________________________________primary_expression => (569,570) #"2"
______________________________________________________________________________________________________________________________________________________literal => (569,570) #"2"
________________________________________________________________________________________________________________________________________________________numeric_literal => (569,570) #"2"
__________________________________________________________________________________________________________________________________________________________decimal_literal => (569,570) #"2"
____________________________________________________________________________________________________________________________________________________________decimal_integer_literal => (569,570) #"2"
__________________________________________________________________________________________________________________assignment_expression__in => (571,572) #"3"
____________________________________________________________________________________________________________________conditional_expression__in => (571,572) #"3"
______________________________________________________________________________________________________________________logical_or_expression__in => (571,572) #"3"
________________________________________________________________________________________________________________________logical_and_expression__in => (571,572) #"3"
__________________________________________________________________________________________________________________________bitwise_or_expression__in => (571,572) #"3"
____________________________________________________________________________________________________________________________bitwise_xor_expression__in => (571,572) #"3"
______________________________________________________________________________________________________________________________bitwise_and_expression__in => (571,572) #"3"
________________________________________________________________________________________________________________________________equality_expression__in => (571,572) #"3"
__________________________________________________________________________________________________________________________________relational_expression__in => (571,572) #"3"
____________________________________________________________________________________________________________________________________shift_expression => (571,572) #"3"
______________________________________________________________________________________________________________________________________additive_expression => (571,572) #"3"
________________________________________________________________________________________________________________________________________multiplicative_expression => (571,572) #"3"
__________________________________________________________________________________________________________________________________________unary_expression => (571,572) #"3"
____________________________________________________________________________________________________________________________________________postfix_expression => (571,572) #"3"
______________________________________________________________________________________________________________________________________________left_hand_side_expression => (571,572) #"3"
________________________________________________________________________________________________________________________________________________new_expression => (571,572) #"3"
__________________________________________________________________________________________________________________________________________________member_expression => (571,572) #"3"
____________________________________________________________________________________________________________________________________________________primary_expression => (571,572) #"3"
______________________________________________________________________________________________________________________________________________________literal => (571,572) #"3"
________________________________________________________________________________________________________________________________________________________numeric_literal => (571,572) #"3"
__________________________________________________________________________________________________________________________________________________________decimal_literal => (571,572) #"3"
____________________________________________________________________________________________________________________________________________________________decimal_integer_literal => (571,572) #"3"
____________________________________________________________________________assignment_expression__in => (574,575) #"4"
______________________________________________________________________________conditional_expression__in => (574,575) #"4"
________________________________________________________________________________logical_or_expression__in => (574,575) #"4"
__________________________________________________________________________________logical_and_expression__in => (574,575) #"4"
____________________________________________________________________________________bitwise_or_expression__in => (574,575) #"4"
______________________________________________________________________________________bitwise_xor_expression__in => (574,575) #"4"
________________________________________________________________________________________bitwise_and_expression__in => (574,575) #"4"
__________________________________________________________________________________________equality_expression__in => (574,575) #"4"
____________________________________________________________________________________________relational_expression__in => (574,575) #"4"
______________________________________________________________________________________________shift_expression => (574,575) #"4"
________________________________________________________________________________________________additive_expression => (574,575) #"4"
__________________________________________________________________________________________________multiplicative_expression => (574,575) #"4"
____________________________________________________________________________________________________unary_expression => (574,575) #"4"
______________________________________________________________________________________________________postfix_expression => (574,575) #"4"
________________________________________________________________________________________________________left_hand_side_expression => (574,575) #"4"
__________________________________________________________________________________________________________new_expression => (574,575) #"4"
____________________________________________________________________________________________________________member_expression => (574,575) #"4"
______________________________________________________________________________________________________________primary_expression => (574,575) #"4"
________________________________________________________________________________________________________________literal => (574,575) #"4"
__________________________________________________________________________________________________________________numeric_literal => (574,575) #"4"
____________________________________________________________________________________________________________________decimal_literal => (574,575) #"4"
______________________________________________________________________________________________________________________decimal_integer_literal => (574,575) #"4"
____________________________________________________________________________assignment_expression__in => (576,577) #"5"
______________________________________________________________________________conditional_expression__in => (576,577) #"5"
________________________________________________________________________________logical_or_expression__in => (576,577) #"5"
__________________________________________________________________________________logical_and_expression__in => (576,577) #"5"
____________________________________________________________________________________bitwise_or_expression__in => (576,577) #"5"
______________________________________________________________________________________bitwise_xor_expression__in => (576,577) #"5"
________________________________________________________________________________________bitwise_and_expression__in => (576,577) #"5"
__________________________________________________________________________________________equality_expression__in => (576,577) #"5"
____________________________________________________________________________________________relational_expression__in => (576,577) #"5"
______________________________________________________________________________________________shift_expression => (576,577) #"5"
________________________________________________________________________________________________additive_expression => (576,577) #"5"
__________________________________________________________________________________________________multiplicative_expression => (576,577) #"5"
____________________________________________________________________________________________________unary_expression => (576,577) #"5"
______________________________________________________________________________________________________postfix_expression => (576,577) #"5"
________________________________________________________________________________________________________left_hand_side_expression => (576,577) #"5"
__________________________________________________________________________________________________________new_expression => (576,577) #"5"
____________________________________________________________________________________________________________member_expression => (576,577) #"5"
______________________________________________________________________________________________________________primary_expression => (576,577) #"5"
________________________________________________________________________________________________________________literal => (576,577) #"5"
__________________________________________________________________________________________________________________numeric_literal => (576,577) #"5"
____________________________________________________________________________________________________________________decimal_literal => (576,577) #"5"
______________________________________________________________________________________________________________________decimal_integer_literal => (576,577) #"5"
____________________________________________________________________________assignment_expression__in => (578,579) #"6"
______________________________________________________________________________conditional_expression__in => (578,579) #"6"
________________________________________________________________________________logical_or_expression__in => (578,579) #"6"
__________________________________________________________________________________logical_and_expression__in => (578,579) #"6"
____________________________________________________________________________________bitwise_or_expression__in => (578,579) #"6"
______________________________________________________________________________________bitwise_xor_expression__in => (578,579) #"6"
________________________________________________________________________________________bitwise_and_expression__in => (578,579) #"6"
__________________________________________________________________________________________equality_expression__in => (578,579) #"6"
____________________________________________________________________________________________relational_expression__in => (578,579) #"6"
______________________________________________________________________________________________shift_expression => (578,579) #"6"
________________________________________________________________________________________________additive_expression => (578,579) #"6"
__________________________________________________________________________________________________multiplicative_expression => (578,579) #"6"
____________________________________________________________________________________________________unary_expression => (578,579) #"6"
______________________________________________________________________________________________________postfix_expression => (578,579) #"6"
________________________________________________________________________________________________________left_hand_side_expression => (578,579) #"6"
__________________________________________________________________________________________________________new_expression => (578,579) #"6"
____________________________________________________________________________________________________________member_expression => (578,579) #"6"
______________________________________________________________________________________________________________primary_expression => (578,579) #"6"
________________________________________________________________________________________________________________literal => (578,579) #"6"
__________________________________________________________________________________________________________________numeric_literal => (578,579) #"6"
____________________________________________________________________________________________________________________decimal_literal => (578,579) #"6"
______________________________________________________________________________________________________________________decimal_integer_literal => (578,579) #"6"
__smart_semicolon => (582,583) #";"
single_line_comment => (584,636) #"// The spread operator can also be used with Strings"
expression_statement => (637,674) #"console.log( Math.max( ...\"1234\" ) );"
__expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
____assignment_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
______conditional_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
________logical_or_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
__________logical_and_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
____________bitwise_or_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
______________bitwise_xor_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
________________bitwise_and_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
__________________equality_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
____________________relational_expression__in => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
______________________shift_expression => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
________________________additive_expression => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
__________________________multiplicative_expression => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
____________________________unary_expression => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
______________________________postfix_expression => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
________________________________left_hand_side_expression => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
__________________________________call_expression => (637,673) #"console.log( Math.max( ...\"1234\" ) )"
____________________________________member_expression => (637,648) #"console.log"
______________________________________primary_expression => (637,644) #"console"
________________________________________identifier_reference => (637,644) #"console"
______________________________________identifier_name => (645,648) #"log"
____________________________________arguments => (648,673) #"( Math.max( ...\"1234\" ) )"
______________________________________argument_list => (650,672) #"Math.max( ...\"1234\" ) "
________________________________________assignment_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
__________________________________________conditional_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
____________________________________________logical_or_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
______________________________________________logical_and_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
________________________________________________bitwise_or_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
__________________________________________________bitwise_xor_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
____________________________________________________bitwise_and_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
______________________________________________________equality_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
________________________________________________________relational_expression__in => (650,672) #"Math.max( ...\"1234\" ) "
__________________________________________________________shift_expression => (650,672) #"Math.max( ...\"1234\" ) "
____________________________________________________________additive_expression => (650,672) #"Math.max( ...\"1234\" ) "
______________________________________________________________multiplicative_expression => (650,672) #"Math.max( ...\"1234\" ) "
________________________________________________________________unary_expression => (650,672) #"Math.max( ...\"1234\" ) "
__________________________________________________________________postfix_expression => (650,672) #"Math.max( ...\"1234\" ) "
____________________________________________________________________left_hand_side_expression => (650,672) #"Math.max( ...\"1234\" ) "
______________________________________________________________________call_expression => (650,672) #"Math.max( ...\"1234\" ) "
________________________________________________________________________member_expression => (650,658) #"Math.max"
__________________________________________________________________________primary_expression => (650,654) #"Math"
____________________________________________________________________________identifier_reference => (650,654) #"Math"
__________________________________________________________________________identifier_name => (655,658) #"max"
________________________________________________________________________arguments => (658,671) #"( ...\"1234\" )"
__________________________________________________________________________argument_list => (660,670) #"...\"1234\" "
____________________________________________________________________________assignment_expression__in => (663,670) #"\"1234\" "
______________________________________________________________________________conditional_expression__in => (663,670) #"\"1234\" "
________________________________________________________________________________logical_or_expression__in => (663,670) #"\"1234\" "
__________________________________________________________________________________logical_and_expression__in => (663,670) #"\"1234\" "
____________________________________________________________________________________bitwise_or_expression__in => (663,670) #"\"1234\" "
______________________________________________________________________________________bitwise_xor_expression__in => (663,670) #"\"1234\" "
________________________________________________________________________________________bitwise_and_expression__in => (663,670) #"\"1234\" "
__________________________________________________________________________________________equality_expression__in => (663,670) #"\"1234\" "
____________________________________________________________________________________________relational_expression__in => (663,670) #"\"1234\" "
______________________________________________________________________________________________shift_expression => (663,670) #"\"1234\" "
________________________________________________________________________________________________additive_expression => (663,670) #"\"1234\" "
__________________________________________________________________________________________________multiplicative_expression => (663,670) #"\"1234\" "
____________________________________________________________________________________________________unary_expression => (663,670) #"\"1234\" "
______________________________________________________________________________________________________postfix_expression => (663,670) #"\"1234\" "
________________________________________________________________________________________________________left_hand_side_expression => (663,670) #"\"1234\" "
__________________________________________________________________________________________________________new_expression => (663,670) #"\"1234\" "
____________________________________________________________________________________________________________member_expression => (663,670) #"\"1234\" "
______________________________________________________________________________________________________________primary_expression => (663,669) #"\"1234\""
________________________________________________________________________________________________________________literal => (663,669) #"\"1234\""
__________________________________________________________________________________________________________________string_literal => (663,669) #"\"1234\""
__smart_semicolon => (673,674) #";"
