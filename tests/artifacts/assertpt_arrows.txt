variable_statement => (0,42) #"var evens = [2,4,6,8,10],\n    fives = [];\n"
__variable_declaration__in => (4,24) #"evens = [2,4,6,8,10]"
____binding_identifier => (4,9) #"evens"
____initializer__in => (10,24) #"= [2,4,6,8,10]"
______assignment_expression__in => (12,24) #"[2,4,6,8,10]"
________conditional_expression__in => (12,24) #"[2,4,6,8,10]"
__________logical_or_expression__in => (12,24) #"[2,4,6,8,10]"
____________logical_and_expression__in => (12,24) #"[2,4,6,8,10]"
______________bitwise_or_expression__in => (12,24) #"[2,4,6,8,10]"
________________bitwise_xor_expression__in => (12,24) #"[2,4,6,8,10]"
__________________bitwise_and_expression__in => (12,24) #"[2,4,6,8,10]"
____________________equality_expression__in => (12,24) #"[2,4,6,8,10]"
______________________relational_expression__in => (12,24) #"[2,4,6,8,10]"
________________________shift_expression => (12,24) #"[2,4,6,8,10]"
__________________________additive_expression => (12,24) #"[2,4,6,8,10]"
____________________________multiplicative_expression => (12,24) #"[2,4,6,8,10]"
______________________________unary_expression => (12,24) #"[2,4,6,8,10]"
________________________________postfix_expression => (12,24) #"[2,4,6,8,10]"
__________________________________left_hand_side_expression => (12,24) #"[2,4,6,8,10]"
____________________________________new_expression => (12,24) #"[2,4,6,8,10]"
______________________________________member_expression => (12,24) #"[2,4,6,8,10]"
________________________________________primary_expression => (12,24) #"[2,4,6,8,10]"
__________________________________________array_literal => (12,24) #"[2,4,6,8,10]"
____________________________________________assignment_expression__in => (13,14) #"2"
______________________________________________conditional_expression__in => (13,14) #"2"
________________________________________________logical_or_expression__in => (13,14) #"2"
__________________________________________________logical_and_expression__in => (13,14) #"2"
____________________________________________________bitwise_or_expression__in => (13,14) #"2"
______________________________________________________bitwise_xor_expression__in => (13,14) #"2"
________________________________________________________bitwise_and_expression__in => (13,14) #"2"
__________________________________________________________equality_expression__in => (13,14) #"2"
____________________________________________________________relational_expression__in => (13,14) #"2"
______________________________________________________________shift_expression => (13,14) #"2"
________________________________________________________________additive_expression => (13,14) #"2"
__________________________________________________________________multiplicative_expression => (13,14) #"2"
____________________________________________________________________unary_expression => (13,14) #"2"
______________________________________________________________________postfix_expression => (13,14) #"2"
________________________________________________________________________left_hand_side_expression => (13,14) #"2"
__________________________________________________________________________new_expression => (13,14) #"2"
____________________________________________________________________________member_expression => (13,14) #"2"
______________________________________________________________________________primary_expression => (13,14) #"2"
________________________________________________________________________________literal => (13,14) #"2"
__________________________________________________________________________________numeric_literal => (13,14) #"2"
____________________________________________________________________________________decimal_literal => (13,14) #"2"
______________________________________________________________________________________decimal_integer_literal => (13,14) #"2"
____________________________________________assignment_expression__in => (15,16) #"4"
______________________________________________conditional_expression__in => (15,16) #"4"
________________________________________________logical_or_expression__in => (15,16) #"4"
__________________________________________________logical_and_expression__in => (15,16) #"4"
____________________________________________________bitwise_or_expression__in => (15,16) #"4"
______________________________________________________bitwise_xor_expression__in => (15,16) #"4"
________________________________________________________bitwise_and_expression__in => (15,16) #"4"
__________________________________________________________equality_expression__in => (15,16) #"4"
____________________________________________________________relational_expression__in => (15,16) #"4"
______________________________________________________________shift_expression => (15,16) #"4"
________________________________________________________________additive_expression => (15,16) #"4"
__________________________________________________________________multiplicative_expression => (15,16) #"4"
____________________________________________________________________unary_expression => (15,16) #"4"
______________________________________________________________________postfix_expression => (15,16) #"4"
________________________________________________________________________left_hand_side_expression => (15,16) #"4"
__________________________________________________________________________new_expression => (15,16) #"4"
____________________________________________________________________________member_expression => (15,16) #"4"
______________________________________________________________________________primary_expression => (15,16) #"4"
________________________________________________________________________________literal => (15,16) #"4"
__________________________________________________________________________________numeric_literal => (15,16) #"4"
____________________________________________________________________________________decimal_literal => (15,16) #"4"
______________________________________________________________________________________decimal_integer_literal => (15,16) #"4"
____________________________________________assignment_expression__in => (17,18) #"6"
______________________________________________conditional_expression__in => (17,18) #"6"
________________________________________________logical_or_expression__in => (17,18) #"6"
__________________________________________________logical_and_expression__in => (17,18) #"6"
____________________________________________________bitwise_or_expression__in => (17,18) #"6"
______________________________________________________bitwise_xor_expression__in => (17,18) #"6"
________________________________________________________bitwise_and_expression__in => (17,18) #"6"
__________________________________________________________equality_expression__in => (17,18) #"6"
____________________________________________________________relational_expression__in => (17,18) #"6"
______________________________________________________________shift_expression => (17,18) #"6"
________________________________________________________________additive_expression => (17,18) #"6"
__________________________________________________________________multiplicative_expression => (17,18) #"6"
____________________________________________________________________unary_expression => (17,18) #"6"
______________________________________________________________________postfix_expression => (17,18) #"6"
________________________________________________________________________left_hand_side_expression => (17,18) #"6"
__________________________________________________________________________new_expression => (17,18) #"6"
____________________________________________________________________________member_expression => (17,18) #"6"
______________________________________________________________________________primary_expression => (17,18) #"6"
________________________________________________________________________________literal => (17,18) #"6"
__________________________________________________________________________________numeric_literal => (17,18) #"6"
____________________________________________________________________________________decimal_literal => (17,18) #"6"
______________________________________________________________________________________decimal_integer_literal => (17,18) #"6"
____________________________________________assignment_expression__in => (19,20) #"8"
______________________________________________conditional_expression__in => (19,20) #"8"
________________________________________________logical_or_expression__in => (19,20) #"8"
__________________________________________________logical_and_expression__in => (19,20) #"8"
____________________________________________________bitwise_or_expression__in => (19,20) #"8"
______________________________________________________bitwise_xor_expression__in => (19,20) #"8"
________________________________________________________bitwise_and_expression__in => (19,20) #"8"
__________________________________________________________equality_expression__in => (19,20) #"8"
____________________________________________________________relational_expression__in => (19,20) #"8"
______________________________________________________________shift_expression => (19,20) #"8"
________________________________________________________________additive_expression => (19,20) #"8"
__________________________________________________________________multiplicative_expression => (19,20) #"8"
____________________________________________________________________unary_expression => (19,20) #"8"
______________________________________________________________________postfix_expression => (19,20) #"8"
________________________________________________________________________left_hand_side_expression => (19,20) #"8"
__________________________________________________________________________new_expression => (19,20) #"8"
____________________________________________________________________________member_expression => (19,20) #"8"
______________________________________________________________________________primary_expression => (19,20) #"8"
________________________________________________________________________________literal => (19,20) #"8"
__________________________________________________________________________________numeric_literal => (19,20) #"8"
____________________________________________________________________________________decimal_literal => (19,20) #"8"
______________________________________________________________________________________decimal_integer_literal => (19,20) #"8"
____________________________________________assignment_expression__in => (21,23) #"10"
______________________________________________conditional_expression__in => (21,23) #"10"
________________________________________________logical_or_expression__in => (21,23) #"10"
__________________________________________________logical_and_expression__in => (21,23) #"10"
____________________________________________________bitwise_or_expression__in => (21,23) #"10"
______________________________________________________bitwise_xor_expression__in => (21,23) #"10"
________________________________________________________bitwise_and_expression__in => (21,23) #"10"
__________________________________________________________equality_expression__in => (21,23) #"10"
____________________________________________________________relational_expression__in => (21,23) #"10"
______________________________________________________________shift_expression => (21,23) #"10"
________________________________________________________________additive_expression => (21,23) #"10"
__________________________________________________________________multiplicative_expression => (21,23) #"10"
____________________________________________________________________unary_expression => (21,23) #"10"
______________________________________________________________________postfix_expression => (21,23) #"10"
________________________________________________________________________left_hand_side_expression => (21,23) #"10"
__________________________________________________________________________new_expression => (21,23) #"10"
____________________________________________________________________________member_expression => (21,23) #"10"
______________________________________________________________________________primary_expression => (21,23) #"10"
________________________________________________________________________________literal => (21,23) #"10"
__________________________________________________________________________________numeric_literal => (21,23) #"10"
____________________________________________________________________________________decimal_literal => (21,23) #"10"
______________________________________________________________________________________decimal_integer_literal => (21,23) #"10"
__variable_declaration__in => (30,40) #"fives = []"
____binding_identifier => (30,35) #"fives"
____initializer__in => (36,40) #"= []"
______assignment_expression__in => (38,40) #"[]"
________conditional_expression__in => (38,40) #"[]"
__________logical_or_expression__in => (38,40) #"[]"
____________logical_and_expression__in => (38,40) #"[]"
______________bitwise_or_expression__in => (38,40) #"[]"
________________bitwise_xor_expression__in => (38,40) #"[]"
__________________bitwise_and_expression__in => (38,40) #"[]"
____________________equality_expression__in => (38,40) #"[]"
______________________relational_expression__in => (38,40) #"[]"
________________________shift_expression => (38,40) #"[]"
__________________________additive_expression => (38,40) #"[]"
____________________________multiplicative_expression => (38,40) #"[]"
______________________________unary_expression => (38,40) #"[]"
________________________________postfix_expression => (38,40) #"[]"
__________________________________left_hand_side_expression => (38,40) #"[]"
____________________________________new_expression => (38,40) #"[]"
______________________________________member_expression => (38,40) #"[]"
________________________________________primary_expression => (38,40) #"[]"
__________________________________________array_literal => (38,40) #"[]"
__smart_semicolon => (40,42) #";\n"
variable_statement => (64,98) #"var odds = evens.map(v => v + 1);\n"
__variable_declaration__in => (68,96) #"odds = evens.map(v => v + 1)"
____binding_identifier => (68,72) #"odds"
____initializer__in => (73,96) #"= evens.map(v => v + 1)"
______assignment_expression__in => (75,96) #"evens.map(v => v + 1)"
________conditional_expression__in => (75,96) #"evens.map(v => v + 1)"
__________logical_or_expression__in => (75,96) #"evens.map(v => v + 1)"
____________logical_and_expression__in => (75,96) #"evens.map(v => v + 1)"
______________bitwise_or_expression__in => (75,96) #"evens.map(v => v + 1)"
________________bitwise_xor_expression__in => (75,96) #"evens.map(v => v + 1)"
__________________bitwise_and_expression__in => (75,96) #"evens.map(v => v + 1)"
____________________equality_expression__in => (75,96) #"evens.map(v => v + 1)"
______________________relational_expression__in => (75,96) #"evens.map(v => v + 1)"
________________________shift_expression => (75,96) #"evens.map(v => v + 1)"
__________________________additive_expression => (75,96) #"evens.map(v => v + 1)"
____________________________multiplicative_expression => (75,96) #"evens.map(v => v + 1)"
______________________________unary_expression => (75,96) #"evens.map(v => v + 1)"
________________________________postfix_expression => (75,96) #"evens.map(v => v + 1)"
__________________________________left_hand_side_expression => (75,96) #"evens.map(v => v + 1)"
____________________________________call_expression => (75,96) #"evens.map(v => v + 1)"
______________________________________member_expression => (75,84) #"evens.map"
________________________________________primary_expression => (75,80) #"evens"
__________________________________________identifier_reference => (75,80) #"evens"
________________________________________identifier_name => (81,84) #"map"
______________________________________arguments => (84,96) #"(v => v + 1)"
________________________________________argument_list => (85,95) #"v => v + 1"
__________________________________________assignment_expression__in => (85,95) #"v => v + 1"
____________________________________________arrow_function__in => (85,95) #"v => v + 1"
______________________________________________arrow_parameters => (85,86) #"v"
________________________________________________binding_identifier => (85,86) #"v"
______________________________________________concise_body__in => (90,95) #"v + 1"
________________________________________________assignment_expression__in => (90,95) #"v + 1"
__________________________________________________conditional_expression__in => (90,95) #"v + 1"
____________________________________________________logical_or_expression__in => (90,95) #"v + 1"
______________________________________________________logical_and_expression__in => (90,95) #"v + 1"
________________________________________________________bitwise_or_expression__in => (90,95) #"v + 1"
__________________________________________________________bitwise_xor_expression__in => (90,95) #"v + 1"
____________________________________________________________bitwise_and_expression__in => (90,95) #"v + 1"
______________________________________________________________equality_expression__in => (90,95) #"v + 1"
________________________________________________________________relational_expression__in => (90,95) #"v + 1"
__________________________________________________________________shift_expression => (90,95) #"v + 1"
____________________________________________________________________additive_expression => (90,95) #"v + 1"
______________________________________________________________________multiplicative_expression => (90,92) #"v "
________________________________________________________________________unary_expression => (90,92) #"v "
__________________________________________________________________________postfix_expression => (90,92) #"v "
____________________________________________________________________________left_hand_side_expression => (90,92) #"v "
______________________________________________________________________________new_expression => (90,92) #"v "
________________________________________________________________________________member_expression => (90,92) #"v "
__________________________________________________________________________________primary_expression => (90,91) #"v"
____________________________________________________________________________________identifier_reference => (90,91) #"v"
______________________________________________________________________additive_operator => (92,93) #"+"
______________________________________________________________________multiplicative_expression => (94,95) #"1"
________________________________________________________________________unary_expression => (94,95) #"1"
__________________________________________________________________________postfix_expression => (94,95) #"1"
____________________________________________________________________________left_hand_side_expression => (94,95) #"1"
______________________________________________________________________________new_expression => (94,95) #"1"
________________________________________________________________________________member_expression => (94,95) #"1"
__________________________________________________________________________________primary_expression => (94,95) #"1"
____________________________________________________________________________________literal => (94,95) #"1"
______________________________________________________________________________________numeric_literal => (94,95) #"1"
________________________________________________________________________________________decimal_literal => (94,95) #"1"
__________________________________________________________________________________________decimal_integer_literal => (94,95) #"1"
__smart_semicolon => (96,98) #";\n"
variable_statement => (98,137) #"var nums = evens.map((v, i) => v + i);\n"
__variable_declaration__in => (102,135) #"nums = evens.map((v, i) => v + i)"
____binding_identifier => (102,106) #"nums"
____initializer__in => (107,135) #"= evens.map((v, i) => v + i)"
______assignment_expression__in => (109,135) #"evens.map((v, i) => v + i)"
________conditional_expression__in => (109,135) #"evens.map((v, i) => v + i)"
__________logical_or_expression__in => (109,135) #"evens.map((v, i) => v + i)"
____________logical_and_expression__in => (109,135) #"evens.map((v, i) => v + i)"
______________bitwise_or_expression__in => (109,135) #"evens.map((v, i) => v + i)"
________________bitwise_xor_expression__in => (109,135) #"evens.map((v, i) => v + i)"
__________________bitwise_and_expression__in => (109,135) #"evens.map((v, i) => v + i)"
____________________equality_expression__in => (109,135) #"evens.map((v, i) => v + i)"
______________________relational_expression__in => (109,135) #"evens.map((v, i) => v + i)"
________________________shift_expression => (109,135) #"evens.map((v, i) => v + i)"
__________________________additive_expression => (109,135) #"evens.map((v, i) => v + i)"
____________________________multiplicative_expression => (109,135) #"evens.map((v, i) => v + i)"
______________________________unary_expression => (109,135) #"evens.map((v, i) => v + i)"
________________________________postfix_expression => (109,135) #"evens.map((v, i) => v + i)"
__________________________________left_hand_side_expression => (109,135) #"evens.map((v, i) => v + i)"
____________________________________call_expression => (109,135) #"evens.map((v, i) => v + i)"
______________________________________member_expression => (109,118) #"evens.map"
________________________________________primary_expression => (109,114) #"evens"
__________________________________________identifier_reference => (109,114) #"evens"
________________________________________identifier_name => (115,118) #"map"
______________________________________arguments => (118,135) #"((v, i) => v + i)"
________________________________________argument_list => (119,134) #"(v, i) => v + i"
__________________________________________assignment_expression__in => (119,134) #"(v, i) => v + i"
____________________________________________arrow_function__in => (119,134) #"(v, i) => v + i"
______________________________________________arrow_parameters => (119,125) #"(v, i)"
________________________________________________cover_parenthesized_expression_and_arrow_parameter_list => (119,125) #"(v, i)"
__________________________________________________expression__in => (120,124) #"v, i"
____________________________________________________assignment_expression__in => (120,121) #"v"
______________________________________________________conditional_expression__in => (120,121) #"v"
________________________________________________________logical_or_expression__in => (120,121) #"v"
__________________________________________________________logical_and_expression__in => (120,121) #"v"
____________________________________________________________bitwise_or_expression__in => (120,121) #"v"
______________________________________________________________bitwise_xor_expression__in => (120,121) #"v"
________________________________________________________________bitwise_and_expression__in => (120,121) #"v"
__________________________________________________________________equality_expression__in => (120,121) #"v"
____________________________________________________________________relational_expression__in => (120,121) #"v"
______________________________________________________________________shift_expression => (120,121) #"v"
________________________________________________________________________additive_expression => (120,121) #"v"
__________________________________________________________________________multiplicative_expression => (120,121) #"v"
____________________________________________________________________________unary_expression => (120,121) #"v"
______________________________________________________________________________postfix_expression => (120,121) #"v"
________________________________________________________________________________left_hand_side_expression => (120,121) #"v"
__________________________________________________________________________________new_expression => (120,121) #"v"
____________________________________________________________________________________member_expression => (120,121) #"v"
______________________________________________________________________________________primary_expression => (120,121) #"v"
________________________________________________________________________________________identifier_reference => (120,121) #"v"
____________________________________________________assignment_expression__in => (123,124) #"i"
______________________________________________________conditional_expression__in => (123,124) #"i"
________________________________________________________logical_or_expression__in => (123,124) #"i"
__________________________________________________________logical_and_expression__in => (123,124) #"i"
____________________________________________________________bitwise_or_expression__in => (123,124) #"i"
______________________________________________________________bitwise_xor_expression__in => (123,124) #"i"
________________________________________________________________bitwise_and_expression__in => (123,124) #"i"
__________________________________________________________________equality_expression__in => (123,124) #"i"
____________________________________________________________________relational_expression__in => (123,124) #"i"
______________________________________________________________________shift_expression => (123,124) #"i"
________________________________________________________________________additive_expression => (123,124) #"i"
__________________________________________________________________________multiplicative_expression => (123,124) #"i"
____________________________________________________________________________unary_expression => (123,124) #"i"
______________________________________________________________________________postfix_expression => (123,124) #"i"
________________________________________________________________________________left_hand_side_expression => (123,124) #"i"
__________________________________________________________________________________new_expression => (123,124) #"i"
____________________________________________________________________________________member_expression => (123,124) #"i"
______________________________________________________________________________________primary_expression => (123,124) #"i"
________________________________________________________________________________________identifier_reference => (123,124) #"i"
______________________________________________concise_body__in => (129,134) #"v + i"
________________________________________________assignment_expression__in => (129,134) #"v + i"
__________________________________________________conditional_expression__in => (129,134) #"v + i"
____________________________________________________logical_or_expression__in => (129,134) #"v + i"
______________________________________________________logical_and_expression__in => (129,134) #"v + i"
________________________________________________________bitwise_or_expression__in => (129,134) #"v + i"
__________________________________________________________bitwise_xor_expression__in => (129,134) #"v + i"
____________________________________________________________bitwise_and_expression__in => (129,134) #"v + i"
______________________________________________________________equality_expression__in => (129,134) #"v + i"
________________________________________________________________relational_expression__in => (129,134) #"v + i"
__________________________________________________________________shift_expression => (129,134) #"v + i"
____________________________________________________________________additive_expression => (129,134) #"v + i"
______________________________________________________________________multiplicative_expression => (129,131) #"v "
________________________________________________________________________unary_expression => (129,131) #"v "
__________________________________________________________________________postfix_expression => (129,131) #"v "
____________________________________________________________________________left_hand_side_expression => (129,131) #"v "
______________________________________________________________________________new_expression => (129,131) #"v "
________________________________________________________________________________member_expression => (129,131) #"v "
__________________________________________________________________________________primary_expression => (129,130) #"v"
____________________________________________________________________________________identifier_reference => (129,130) #"v"
______________________________________________________________________additive_operator => (131,132) #"+"
______________________________________________________________________multiplicative_expression => (133,134) #"i"
________________________________________________________________________unary_expression => (133,134) #"i"
__________________________________________________________________________postfix_expression => (133,134) #"i"
____________________________________________________________________________left_hand_side_expression => (133,134) #"i"
______________________________________________________________________________new_expression => (133,134) #"i"
________________________________________________________________________________member_expression => (133,134) #"i"
__________________________________________________________________________________primary_expression => (133,134) #"i"
____________________________________________________________________________________identifier_reference => (133,134) #"i"
__smart_semicolon => (135,137) #";\n"
expression_statement => (138,157) #"console.log(odds);\n"
__expression__in => (138,155) #"console.log(odds)"
____assignment_expression__in => (138,155) #"console.log(odds)"
______conditional_expression__in => (138,155) #"console.log(odds)"
________logical_or_expression__in => (138,155) #"console.log(odds)"
__________logical_and_expression__in => (138,155) #"console.log(odds)"
____________bitwise_or_expression__in => (138,155) #"console.log(odds)"
______________bitwise_xor_expression__in => (138,155) #"console.log(odds)"
________________bitwise_and_expression__in => (138,155) #"console.log(odds)"
__________________equality_expression__in => (138,155) #"console.log(odds)"
____________________relational_expression__in => (138,155) #"console.log(odds)"
______________________shift_expression => (138,155) #"console.log(odds)"
________________________additive_expression => (138,155) #"console.log(odds)"
__________________________multiplicative_expression => (138,155) #"console.log(odds)"
____________________________unary_expression => (138,155) #"console.log(odds)"
______________________________postfix_expression => (138,155) #"console.log(odds)"
________________________________left_hand_side_expression => (138,155) #"console.log(odds)"
__________________________________call_expression => (138,155) #"console.log(odds)"
____________________________________member_expression => (138,149) #"console.log"
______________________________________primary_expression => (138,145) #"console"
________________________________________identifier_reference => (138,145) #"console"
______________________________________identifier_name => (146,149) #"log"
____________________________________arguments => (149,155) #"(odds)"
______________________________________argument_list => (150,154) #"odds"
________________________________________assignment_expression__in => (150,154) #"odds"
__________________________________________conditional_expression__in => (150,154) #"odds"
____________________________________________logical_or_expression__in => (150,154) #"odds"
______________________________________________logical_and_expression__in => (150,154) #"odds"
________________________________________________bitwise_or_expression__in => (150,154) #"odds"
__________________________________________________bitwise_xor_expression__in => (150,154) #"odds"
____________________________________________________bitwise_and_expression__in => (150,154) #"odds"
______________________________________________________equality_expression__in => (150,154) #"odds"
________________________________________________________relational_expression__in => (150,154) #"odds"
__________________________________________________________shift_expression => (150,154) #"odds"
____________________________________________________________additive_expression => (150,154) #"odds"
______________________________________________________________multiplicative_expression => (150,154) #"odds"
________________________________________________________________unary_expression => (150,154) #"odds"
__________________________________________________________________postfix_expression => (150,154) #"odds"
____________________________________________________________________left_hand_side_expression => (150,154) #"odds"
______________________________________________________________________new_expression => (150,154) #"odds"
________________________________________________________________________member_expression => (150,154) #"odds"
__________________________________________________________________________primary_expression => (150,154) #"odds"
____________________________________________________________________________identifier_reference => (150,154) #"odds"
__smart_semicolon => (155,157) #";\n"
expression_statement => (157,176) #"console.log(nums);\n"
__expression__in => (157,174) #"console.log(nums)"
____assignment_expression__in => (157,174) #"console.log(nums)"
______conditional_expression__in => (157,174) #"console.log(nums)"
________logical_or_expression__in => (157,174) #"console.log(nums)"
__________logical_and_expression__in => (157,174) #"console.log(nums)"
____________bitwise_or_expression__in => (157,174) #"console.log(nums)"
______________bitwise_xor_expression__in => (157,174) #"console.log(nums)"
________________bitwise_and_expression__in => (157,174) #"console.log(nums)"
__________________equality_expression__in => (157,174) #"console.log(nums)"
____________________relational_expression__in => (157,174) #"console.log(nums)"
______________________shift_expression => (157,174) #"console.log(nums)"
________________________additive_expression => (157,174) #"console.log(nums)"
__________________________multiplicative_expression => (157,174) #"console.log(nums)"
____________________________unary_expression => (157,174) #"console.log(nums)"
______________________________postfix_expression => (157,174) #"console.log(nums)"
________________________________left_hand_side_expression => (157,174) #"console.log(nums)"
__________________________________call_expression => (157,174) #"console.log(nums)"
____________________________________member_expression => (157,168) #"console.log"
______________________________________primary_expression => (157,164) #"console"
________________________________________identifier_reference => (157,164) #"console"
______________________________________identifier_name => (165,168) #"log"
____________________________________arguments => (168,174) #"(nums)"
______________________________________argument_list => (169,173) #"nums"
________________________________________assignment_expression__in => (169,173) #"nums"
__________________________________________conditional_expression__in => (169,173) #"nums"
____________________________________________logical_or_expression__in => (169,173) #"nums"
______________________________________________logical_and_expression__in => (169,173) #"nums"
________________________________________________bitwise_or_expression__in => (169,173) #"nums"
__________________________________________________bitwise_xor_expression__in => (169,173) #"nums"
____________________________________________________bitwise_and_expression__in => (169,173) #"nums"
______________________________________________________equality_expression__in => (169,173) #"nums"
________________________________________________________relational_expression__in => (169,173) #"nums"
__________________________________________________________shift_expression => (169,173) #"nums"
____________________________________________________________additive_expression => (169,173) #"nums"
______________________________________________________________multiplicative_expression => (169,173) #"nums"
________________________________________________________________unary_expression => (169,173) #"nums"
__________________________________________________________________postfix_expression => (169,173) #"nums"
____________________________________________________________________left_hand_side_expression => (169,173) #"nums"
______________________________________________________________________new_expression => (169,173) #"nums"
________________________________________________________________________member_expression => (169,173) #"nums"
__________________________________________________________________________primary_expression => (169,173) #"nums"
____________________________________________________________________________identifier_reference => (169,173) #"nums"
__smart_semicolon => (174,176) #";\n"
expression_statement => (197,257) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n});\n"
__expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
____assignment_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
______conditional_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
________logical_or_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
__________logical_and_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
____________bitwise_or_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
______________bitwise_xor_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
________________bitwise_and_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
__________________equality_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
____________________relational_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
______________________shift_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
________________________additive_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
__________________________multiplicative_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
____________________________unary_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
______________________________postfix_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
________________________________left_hand_side_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
__________________________________call_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
____________________________________member_expression => (197,209) #"nums.forEach"
______________________________________primary_expression => (197,201) #"nums"
________________________________________identifier_reference => (197,201) #"nums"
______________________________________identifier_name => (202,209) #"forEach"
____________________________________arguments => (209,255) #"(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
______________________________________argument_list => (210,254) #"v => {\n    if (v % 5 === 0) fives.push(v);\n}"
________________________________________assignment_expression__in => (210,254) #"v => {\n    if (v % 5 === 0) fives.push(v);\n}"
__________________________________________arrow_function__in => (210,254) #"v => {\n    if (v % 5 === 0) fives.push(v);\n}"
____________________________________________arrow_parameters => (210,211) #"v"
______________________________________________binding_identifier => (210,211) #"v"
____________________________________________concise_body__in => (215,254) #"{\n    if (v % 5 === 0) fives.push(v);\n}"
______________________________________________function_body => (216,253) #"\n    if (v % 5 === 0) fives.push(v);\n"
________________________________________________if_statement__return => (221,253) #"if (v % 5 === 0) fives.push(v);\n"
__________________________________________________expression__in => (225,236) #"v % 5 === 0"
____________________________________________________assignment_expression__in => (225,236) #"v % 5 === 0"
______________________________________________________conditional_expression__in => (225,236) #"v % 5 === 0"
________________________________________________________logical_or_expression__in => (225,236) #"v % 5 === 0"
__________________________________________________________logical_and_expression__in => (225,236) #"v % 5 === 0"
____________________________________________________________bitwise_or_expression__in => (225,236) #"v % 5 === 0"
______________________________________________________________bitwise_xor_expression__in => (225,236) #"v % 5 === 0"
________________________________________________________________bitwise_and_expression__in => (225,236) #"v % 5 === 0"
__________________________________________________________________equality_expression__in => (225,236) #"v % 5 === 0"
____________________________________________________________________relational_expression__in => (225,231) #"v % 5 "
______________________________________________________________________shift_expression => (225,231) #"v % 5 "
________________________________________________________________________additive_expression => (225,231) #"v % 5 "
__________________________________________________________________________multiplicative_expression => (225,231) #"v % 5 "
____________________________________________________________________________unary_expression => (225,227) #"v "
______________________________________________________________________________postfix_expression => (225,227) #"v "
________________________________________________________________________________left_hand_side_expression => (225,227) #"v "
__________________________________________________________________________________new_expression => (225,227) #"v "
____________________________________________________________________________________member_expression => (225,227) #"v "
______________________________________________________________________________________primary_expression => (225,226) #"v"
________________________________________________________________________________________identifier_reference => (225,226) #"v"
____________________________________________________________________________multiplicative_operator => (227,228) #"%"
____________________________________________________________________________unary_expression => (229,231) #"5 "
______________________________________________________________________________postfix_expression => (229,231) #"5 "
________________________________________________________________________________left_hand_side_expression => (229,231) #"5 "
__________________________________________________________________________________new_expression => (229,231) #"5 "
____________________________________________________________________________________member_expression => (229,231) #"5 "
______________________________________________________________________________________primary_expression => (229,230) #"5"
________________________________________________________________________________________literal => (229,230) #"5"
__________________________________________________________________________________________numeric_literal => (229,230) #"5"
____________________________________________________________________________________________decimal_literal => (229,230) #"5"
______________________________________________________________________________________________decimal_integer_literal => (229,230) #"5"
____________________________________________________________________equality_operator => (231,234) #"==="
____________________________________________________________________relational_expression__in => (235,236) #"0"
______________________________________________________________________shift_expression => (235,236) #"0"
________________________________________________________________________additive_expression => (235,236) #"0"
__________________________________________________________________________multiplicative_expression => (235,236) #"0"
____________________________________________________________________________unary_expression => (235,236) #"0"
______________________________________________________________________________postfix_expression => (235,236) #"0"
________________________________________________________________________________left_hand_side_expression => (235,236) #"0"
__________________________________________________________________________________new_expression => (235,236) #"0"
____________________________________________________________________________________member_expression => (235,236) #"0"
______________________________________________________________________________________primary_expression => (235,236) #"0"
________________________________________________________________________________________literal => (235,236) #"0"
__________________________________________________________________________________________numeric_literal => (235,236) #"0"
____________________________________________________________________________________________decimal_literal => (235,236) #"0"
______________________________________________________________________________________________decimal_integer_literal => (235,236) #"0"
__________________________________________________expression_statement => (238,253) #"fives.push(v);\n"
____________________________________________________expression__in => (238,251) #"fives.push(v)"
______________________________________________________assignment_expression__in => (238,251) #"fives.push(v)"
________________________________________________________conditional_expression__in => (238,251) #"fives.push(v)"
__________________________________________________________logical_or_expression__in => (238,251) #"fives.push(v)"
____________________________________________________________logical_and_expression__in => (238,251) #"fives.push(v)"
______________________________________________________________bitwise_or_expression__in => (238,251) #"fives.push(v)"
________________________________________________________________bitwise_xor_expression__in => (238,251) #"fives.push(v)"
__________________________________________________________________bitwise_and_expression__in => (238,251) #"fives.push(v)"
____________________________________________________________________equality_expression__in => (238,251) #"fives.push(v)"
______________________________________________________________________relational_expression__in => (238,251) #"fives.push(v)"
________________________________________________________________________shift_expression => (238,251) #"fives.push(v)"
__________________________________________________________________________additive_expression => (238,251) #"fives.push(v)"
____________________________________________________________________________multiplicative_expression => (238,251) #"fives.push(v)"
______________________________________________________________________________unary_expression => (238,251) #"fives.push(v)"
________________________________________________________________________________postfix_expression => (238,251) #"fives.push(v)"
__________________________________________________________________________________left_hand_side_expression => (238,251) #"fives.push(v)"
____________________________________________________________________________________call_expression => (238,251) #"fives.push(v)"
______________________________________________________________________________________member_expression => (238,248) #"fives.push"
________________________________________________________________________________________primary_expression => (238,243) #"fives"
__________________________________________________________________________________________identifier_reference => (238,243) #"fives"
________________________________________________________________________________________identifier_name => (244,248) #"push"
______________________________________________________________________________________arguments => (248,251) #"(v)"
________________________________________________________________________________________argument_list => (249,250) #"v"
__________________________________________________________________________________________assignment_expression__in => (249,250) #"v"
____________________________________________________________________________________________conditional_expression__in => (249,250) #"v"
______________________________________________________________________________________________logical_or_expression__in => (249,250) #"v"
________________________________________________________________________________________________logical_and_expression__in => (249,250) #"v"
__________________________________________________________________________________________________bitwise_or_expression__in => (249,250) #"v"
____________________________________________________________________________________________________bitwise_xor_expression__in => (249,250) #"v"
______________________________________________________________________________________________________bitwise_and_expression__in => (249,250) #"v"
________________________________________________________________________________________________________equality_expression__in => (249,250) #"v"
__________________________________________________________________________________________________________relational_expression__in => (249,250) #"v"
____________________________________________________________________________________________________________shift_expression => (249,250) #"v"
______________________________________________________________________________________________________________additive_expression => (249,250) #"v"
________________________________________________________________________________________________________________multiplicative_expression => (249,250) #"v"
__________________________________________________________________________________________________________________unary_expression => (249,250) #"v"
____________________________________________________________________________________________________________________postfix_expression => (249,250) #"v"
______________________________________________________________________________________________________________________left_hand_side_expression => (249,250) #"v"
________________________________________________________________________________________________________________________new_expression => (249,250) #"v"
__________________________________________________________________________________________________________________________member_expression => (249,250) #"v"
____________________________________________________________________________________________________________________________primary_expression => (249,250) #"v"
______________________________________________________________________________________________________________________________identifier_reference => (249,250) #"v"
____________________________________________________smart_semicolon => (251,253) #";\n"
__smart_semicolon => (255,257) #";\n"
declaration => (313,382) #"function thisBinding() {\n    return () => console.log(this.string);\n}"
__hoistable_declaration => (313,382) #"function thisBinding() {\n    return () => console.log(this.string);\n}"
____function_declaration => (313,382) #"function thisBinding() {\n    return () => console.log(this.string);\n}"
______binding_identifier => (322,333) #"thisBinding"
______formal_parameters => (334,334) #""
______function_body => (342,381) #"return () => console.log(this.string);\n"
________return_statement => (342,381) #"return () => console.log(this.string);\n"
__________expression__in => (349,379) #"() => console.log(this.string)"
____________assignment_expression__in => (349,379) #"() => console.log(this.string)"
______________arrow_function__in => (349,379) #"() => console.log(this.string)"
________________arrow_parameters => (349,351) #"()"
__________________cover_parenthesized_expression_and_arrow_parameter_list => (349,351) #"()"
________________concise_body__in => (355,379) #"console.log(this.string)"
__________________assignment_expression__in => (355,379) #"console.log(this.string)"
____________________conditional_expression__in => (355,379) #"console.log(this.string)"
______________________logical_or_expression__in => (355,379) #"console.log(this.string)"
________________________logical_and_expression__in => (355,379) #"console.log(this.string)"
__________________________bitwise_or_expression__in => (355,379) #"console.log(this.string)"
____________________________bitwise_xor_expression__in => (355,379) #"console.log(this.string)"
______________________________bitwise_and_expression__in => (355,379) #"console.log(this.string)"
________________________________equality_expression__in => (355,379) #"console.log(this.string)"
__________________________________relational_expression__in => (355,379) #"console.log(this.string)"
____________________________________shift_expression => (355,379) #"console.log(this.string)"
______________________________________additive_expression => (355,379) #"console.log(this.string)"
________________________________________multiplicative_expression => (355,379) #"console.log(this.string)"
__________________________________________unary_expression => (355,379) #"console.log(this.string)"
____________________________________________postfix_expression => (355,379) #"console.log(this.string)"
______________________________________________left_hand_side_expression => (355,379) #"console.log(this.string)"
________________________________________________call_expression => (355,379) #"console.log(this.string)"
__________________________________________________member_expression => (355,366) #"console.log"
____________________________________________________primary_expression => (355,362) #"console"
______________________________________________________identifier_reference => (355,362) #"console"
____________________________________________________identifier_name => (363,366) #"log"
__________________________________________________arguments => (366,379) #"(this.string)"
____________________________________________________argument_list => (367,378) #"this.string"
______________________________________________________assignment_expression__in => (367,378) #"this.string"
________________________________________________________conditional_expression__in => (367,378) #"this.string"
__________________________________________________________logical_or_expression__in => (367,378) #"this.string"
____________________________________________________________logical_and_expression__in => (367,378) #"this.string"
______________________________________________________________bitwise_or_expression__in => (367,378) #"this.string"
________________________________________________________________bitwise_xor_expression__in => (367,378) #"this.string"
__________________________________________________________________bitwise_and_expression__in => (367,378) #"this.string"
____________________________________________________________________equality_expression__in => (367,378) #"this.string"
______________________________________________________________________relational_expression__in => (367,378) #"this.string"
________________________________________________________________________shift_expression => (367,378) #"this.string"
__________________________________________________________________________additive_expression => (367,378) #"this.string"
____________________________________________________________________________multiplicative_expression => (367,378) #"this.string"
______________________________________________________________________________unary_expression => (367,378) #"this.string"
________________________________________________________________________________postfix_expression => (367,378) #"this.string"
__________________________________________________________________________________left_hand_side_expression => (367,378) #"this.string"
____________________________________________________________________________________new_expression => (367,378) #"this.string"
______________________________________________________________________________________member_expression => (367,378) #"this.string"
________________________________________________________________________________________primary_expression => (367,371) #"this"
__________________________________________________________________________________________this_exp => (367,371) #"this"
________________________________________________________________________________________identifier_name => (372,378) #"string"
__________smart_semicolon => (379,381) #";\n"
expression_statement => (384,425) #"thisBinding.call({ string: \'bound\' })();\n"
__expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
____assignment_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
______conditional_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
________logical_or_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
__________logical_and_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
____________bitwise_or_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
______________bitwise_xor_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
________________bitwise_and_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
__________________equality_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
____________________relational_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
______________________shift_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
________________________additive_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
__________________________multiplicative_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
____________________________unary_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
______________________________postfix_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
________________________________left_hand_side_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
__________________________________call_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
____________________________________member_expression => (384,400) #"thisBinding.call"
______________________________________primary_expression => (384,395) #"thisBinding"
________________________________________identifier_reference => (384,395) #"thisBinding"
______________________________________identifier_name => (396,400) #"call"
____________________________________arguments => (400,421) #"({ string: \'bound\' })"
______________________________________argument_list => (401,420) #"{ string: \'bound\' }"
________________________________________assignment_expression__in => (401,420) #"{ string: \'bound\' }"
__________________________________________conditional_expression__in => (401,420) #"{ string: \'bound\' }"
____________________________________________logical_or_expression__in => (401,420) #"{ string: \'bound\' }"
______________________________________________logical_and_expression__in => (401,420) #"{ string: \'bound\' }"
________________________________________________bitwise_or_expression__in => (401,420) #"{ string: \'bound\' }"
__________________________________________________bitwise_xor_expression__in => (401,420) #"{ string: \'bound\' }"
____________________________________________________bitwise_and_expression__in => (401,420) #"{ string: \'bound\' }"
______________________________________________________equality_expression__in => (401,420) #"{ string: \'bound\' }"
________________________________________________________relational_expression__in => (401,420) #"{ string: \'bound\' }"
__________________________________________________________shift_expression => (401,420) #"{ string: \'bound\' }"
____________________________________________________________additive_expression => (401,420) #"{ string: \'bound\' }"
______________________________________________________________multiplicative_expression => (401,420) #"{ string: \'bound\' }"
________________________________________________________________unary_expression => (401,420) #"{ string: \'bound\' }"
__________________________________________________________________postfix_expression => (401,420) #"{ string: \'bound\' }"
____________________________________________________________________left_hand_side_expression => (401,420) #"{ string: \'bound\' }"
______________________________________________________________________new_expression => (401,420) #"{ string: \'bound\' }"
________________________________________________________________________member_expression => (401,420) #"{ string: \'bound\' }"
__________________________________________________________________________primary_expression => (401,420) #"{ string: \'bound\' }"
____________________________________________________________________________object_literal => (401,420) #"{ string: \'bound\' }"
______________________________________________________________________________property_definition_list => (403,419) #"string: \'bound\' "
________________________________________________________________________________property_definition => (403,419) #"string: \'bound\' "
__________________________________________________________________________________property_name => (403,409) #"string"
____________________________________________________________________________________literal_property_name => (403,409) #"string"
______________________________________________________________________________________identifier_name => (403,409) #"string"
__________________________________________________________________________________assignment_expression__in => (411,419) #"\'bound\' "
____________________________________________________________________________________conditional_expression__in => (411,419) #"\'bound\' "
______________________________________________________________________________________logical_or_expression__in => (411,419) #"\'bound\' "
________________________________________________________________________________________logical_and_expression__in => (411,419) #"\'bound\' "
__________________________________________________________________________________________bitwise_or_expression__in => (411,419) #"\'bound\' "
____________________________________________________________________________________________bitwise_xor_expression__in => (411,419) #"\'bound\' "
______________________________________________________________________________________________bitwise_and_expression__in => (411,419) #"\'bound\' "
________________________________________________________________________________________________equality_expression__in => (411,419) #"\'bound\' "
__________________________________________________________________________________________________relational_expression__in => (411,419) #"\'bound\' "
____________________________________________________________________________________________________shift_expression => (411,419) #"\'bound\' "
______________________________________________________________________________________________________additive_expression => (411,419) #"\'bound\' "
________________________________________________________________________________________________________multiplicative_expression => (411,419) #"\'bound\' "
__________________________________________________________________________________________________________unary_expression => (411,419) #"\'bound\' "
____________________________________________________________________________________________________________postfix_expression => (411,419) #"\'bound\' "
______________________________________________________________________________________________________________left_hand_side_expression => (411,419) #"\'bound\' "
________________________________________________________________________________________________________________new_expression => (411,419) #"\'bound\' "
__________________________________________________________________________________________________________________member_expression => (411,419) #"\'bound\' "
____________________________________________________________________________________________________________________primary_expression => (411,418) #"\'bound\'"
______________________________________________________________________________________________________________________literal => (411,418) #"\'bound\'"
________________________________________________________________________________________________________________________string_literal => (411,418) #"\'bound\'"
____________________________________arguments => (421,423) #"()"
__smart_semicolon => (423,425) #";\n"
declaration => (457,517) #"function args() {\n    return () => console.log(arguments);\n}"
__hoistable_declaration => (457,517) #"function args() {\n    return () => console.log(arguments);\n}"
____function_declaration => (457,517) #"function args() {\n    return () => console.log(arguments);\n}"
______binding_identifier => (466,470) #"args"
______formal_parameters => (471,471) #""
______function_body => (479,516) #"return () => console.log(arguments);\n"
________return_statement => (479,516) #"return () => console.log(arguments);\n"
__________expression__in => (486,514) #"() => console.log(arguments)"
____________assignment_expression__in => (486,514) #"() => console.log(arguments)"
______________arrow_function__in => (486,514) #"() => console.log(arguments)"
________________arrow_parameters => (486,488) #"()"
__________________cover_parenthesized_expression_and_arrow_parameter_list => (486,488) #"()"
________________concise_body__in => (492,514) #"console.log(arguments)"
__________________assignment_expression__in => (492,514) #"console.log(arguments)"
____________________conditional_expression__in => (492,514) #"console.log(arguments)"
______________________logical_or_expression__in => (492,514) #"console.log(arguments)"
________________________logical_and_expression__in => (492,514) #"console.log(arguments)"
__________________________bitwise_or_expression__in => (492,514) #"console.log(arguments)"
____________________________bitwise_xor_expression__in => (492,514) #"console.log(arguments)"
______________________________bitwise_and_expression__in => (492,514) #"console.log(arguments)"
________________________________equality_expression__in => (492,514) #"console.log(arguments)"
__________________________________relational_expression__in => (492,514) #"console.log(arguments)"
____________________________________shift_expression => (492,514) #"console.log(arguments)"
______________________________________additive_expression => (492,514) #"console.log(arguments)"
________________________________________multiplicative_expression => (492,514) #"console.log(arguments)"
__________________________________________unary_expression => (492,514) #"console.log(arguments)"
____________________________________________postfix_expression => (492,514) #"console.log(arguments)"
______________________________________________left_hand_side_expression => (492,514) #"console.log(arguments)"
________________________________________________call_expression => (492,514) #"console.log(arguments)"
__________________________________________________member_expression => (492,503) #"console.log"
____________________________________________________primary_expression => (492,499) #"console"
______________________________________________________identifier_reference => (492,499) #"console"
____________________________________________________identifier_name => (500,503) #"log"
__________________________________________________arguments => (503,514) #"(arguments)"
____________________________________________________argument_list => (504,513) #"arguments"
______________________________________________________assignment_expression__in => (504,513) #"arguments"
________________________________________________________conditional_expression__in => (504,513) #"arguments"
__________________________________________________________logical_or_expression__in => (504,513) #"arguments"
____________________________________________________________logical_and_expression__in => (504,513) #"arguments"
______________________________________________________________bitwise_or_expression__in => (504,513) #"arguments"
________________________________________________________________bitwise_xor_expression__in => (504,513) #"arguments"
__________________________________________________________________bitwise_and_expression__in => (504,513) #"arguments"
____________________________________________________________________equality_expression__in => (504,513) #"arguments"
______________________________________________________________________relational_expression__in => (504,513) #"arguments"
________________________________________________________________________shift_expression => (504,513) #"arguments"
__________________________________________________________________________additive_expression => (504,513) #"arguments"
____________________________________________________________________________multiplicative_expression => (504,513) #"arguments"
______________________________________________________________________________unary_expression => (504,513) #"arguments"
________________________________________________________________________________postfix_expression => (504,513) #"arguments"
__________________________________________________________________________________left_hand_side_expression => (504,513) #"arguments"
____________________________________________________________________________________new_expression => (504,513) #"arguments"
______________________________________________________________________________________member_expression => (504,513) #"arguments"
________________________________________________________________________________________primary_expression => (504,513) #"arguments"
__________________________________________________________________________________________identifier_reference => (504,513) #"arguments"
__________smart_semicolon => (514,516) #";\n"
expression_statement => (519,542) #"args(\'arg1\',\'arg2\')();\n"
__expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
____assignment_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
______conditional_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
________logical_or_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
__________logical_and_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
____________bitwise_or_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
______________bitwise_xor_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
________________bitwise_and_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
__________________equality_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
____________________relational_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
______________________shift_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
________________________additive_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
__________________________multiplicative_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
____________________________unary_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
______________________________postfix_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
________________________________left_hand_side_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
__________________________________call_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
____________________________________member_expression => (519,523) #"args"
______________________________________primary_expression => (519,523) #"args"
________________________________________identifier_reference => (519,523) #"args"
____________________________________arguments => (523,538) #"(\'arg1\',\'arg2\')"
______________________________________argument_list => (524,537) #"\'arg1\',\'arg2\'"
________________________________________assignment_expression__in => (524,530) #"\'arg1\'"
__________________________________________conditional_expression__in => (524,530) #"\'arg1\'"
____________________________________________logical_or_expression__in => (524,530) #"\'arg1\'"
______________________________________________logical_and_expression__in => (524,530) #"\'arg1\'"
________________________________________________bitwise_or_expression__in => (524,530) #"\'arg1\'"
__________________________________________________bitwise_xor_expression__in => (524,530) #"\'arg1\'"
____________________________________________________bitwise_and_expression__in => (524,530) #"\'arg1\'"
______________________________________________________equality_expression__in => (524,530) #"\'arg1\'"
________________________________________________________relational_expression__in => (524,530) #"\'arg1\'"
__________________________________________________________shift_expression => (524,530) #"\'arg1\'"
____________________________________________________________additive_expression => (524,530) #"\'arg1\'"
______________________________________________________________multiplicative_expression => (524,530) #"\'arg1\'"
________________________________________________________________unary_expression => (524,530) #"\'arg1\'"
__________________________________________________________________postfix_expression => (524,530) #"\'arg1\'"
____________________________________________________________________left_hand_side_expression => (524,530) #"\'arg1\'"
______________________________________________________________________new_expression => (524,530) #"\'arg1\'"
________________________________________________________________________member_expression => (524,530) #"\'arg1\'"
__________________________________________________________________________primary_expression => (524,530) #"\'arg1\'"
____________________________________________________________________________literal => (524,530) #"\'arg1\'"
______________________________________________________________________________string_literal => (524,530) #"\'arg1\'"
________________________________________assignment_expression__in => (531,537) #"\'arg2\'"
__________________________________________conditional_expression__in => (531,537) #"\'arg2\'"
____________________________________________logical_or_expression__in => (531,537) #"\'arg2\'"
______________________________________________logical_and_expression__in => (531,537) #"\'arg2\'"
________________________________________________bitwise_or_expression__in => (531,537) #"\'arg2\'"
__________________________________________________bitwise_xor_expression__in => (531,537) #"\'arg2\'"
____________________________________________________bitwise_and_expression__in => (531,537) #"\'arg2\'"
______________________________________________________equality_expression__in => (531,537) #"\'arg2\'"
________________________________________________________relational_expression__in => (531,537) #"\'arg2\'"
__________________________________________________________shift_expression => (531,537) #"\'arg2\'"
____________________________________________________________additive_expression => (531,537) #"\'arg2\'"
______________________________________________________________multiplicative_expression => (531,537) #"\'arg2\'"
________________________________________________________________unary_expression => (531,537) #"\'arg2\'"
__________________________________________________________________postfix_expression => (531,537) #"\'arg2\'"
____________________________________________________________________left_hand_side_expression => (531,537) #"\'arg2\'"
______________________________________________________________________new_expression => (531,537) #"\'arg2\'"
________________________________________________________________________member_expression => (531,537) #"\'arg2\'"
__________________________________________________________________________primary_expression => (531,537) #"\'arg2\'"
____________________________________________________________________________literal => (531,537) #"\'arg2\'"
______________________________________________________________________________string_literal => (531,537) #"\'arg2\'"
____________________________________arguments => (538,540) #"()"
__smart_semicolon => (540,542) #";\n"
