statement => (0,42) #"var evens = [2,4,6,8,10],\n    fives = [];\n"
  variable_statement => (0,42) #"var evens = [2,4,6,8,10],\n    fives = [];\n"
    variable_declaration__in => (4,24) #"evens = [2,4,6,8,10]"
      binding_identifier => (4,9) #"evens"
      initializer__in => (10,24) #"= [2,4,6,8,10]"
        assignment_expression__in => (12,24) #"[2,4,6,8,10]"
          conditional_expression__in => (12,24) #"[2,4,6,8,10]"
            logical_or_expression__in => (12,24) #"[2,4,6,8,10]"
              logical_and_expression__in => (12,24) #"[2,4,6,8,10]"
                bitwise_or_expression__in => (12,24) #"[2,4,6,8,10]"
                  bitwise_xor_expression__in => (12,24) #"[2,4,6,8,10]"
                    bitwise_and_expression__in => (12,24) #"[2,4,6,8,10]"
                      equality_expression__in => (12,24) #"[2,4,6,8,10]"
                        relational_expression__in => (12,24) #"[2,4,6,8,10]"
                          shift_expression => (12,24) #"[2,4,6,8,10]"
                            additive_expression => (12,24) #"[2,4,6,8,10]"
                              multiplicative_expression => (12,24) #"[2,4,6,8,10]"
                                unary_expression => (12,24) #"[2,4,6,8,10]"
                                  postfix_expression => (12,24) #"[2,4,6,8,10]"
                                    left_hand_side_expression => (12,24) #"[2,4,6,8,10]"
                                      new_expression => (12,24) #"[2,4,6,8,10]"
                                        member_expression => (12,24) #"[2,4,6,8,10]"
                                          primary_expression => (12,24) #"[2,4,6,8,10]"
                                            array_literal => (12,24) #"[2,4,6,8,10]"
                                              assignment_expression__in => (13,14) #"2"
                                                conditional_expression__in => (13,14) #"2"
                                                  logical_or_expression__in => (13,14) #"2"
                                                    logical_and_expression__in => (13,14) #"2"
                                                      bitwise_or_expression__in => (13,14) #"2"
                                                        bitwise_xor_expression__in => (13,14) #"2"
                                                          bitwise_and_expression__in => (13,14) #"2"
                                                            equality_expression__in => (13,14) #"2"
                                                              relational_expression__in => (13,14) #"2"
                                                                shift_expression => (13,14) #"2"
                                                                  additive_expression => (13,14) #"2"
                                                                    multiplicative_expression => (13,14) #"2"
                                                                      unary_expression => (13,14) #"2"
                                                                        postfix_expression => (13,14) #"2"
                                                                          left_hand_side_expression => (13,14) #"2"
                                                                            new_expression => (13,14) #"2"
                                                                              member_expression => (13,14) #"2"
                                                                                primary_expression => (13,14) #"2"
                                                                                  literal => (13,14) #"2"
                                                                                    numeric_literal => (13,14) #"2"
                                                                                      decimal_literal => (13,14) #"2"
                                                                                        decimal_integer_literal => (13,14) #"2"
                                              assignment_expression__in => (15,16) #"4"
                                                conditional_expression__in => (15,16) #"4"
                                                  logical_or_expression__in => (15,16) #"4"
                                                    logical_and_expression__in => (15,16) #"4"
                                                      bitwise_or_expression__in => (15,16) #"4"
                                                        bitwise_xor_expression__in => (15,16) #"4"
                                                          bitwise_and_expression__in => (15,16) #"4"
                                                            equality_expression__in => (15,16) #"4"
                                                              relational_expression__in => (15,16) #"4"
                                                                shift_expression => (15,16) #"4"
                                                                  additive_expression => (15,16) #"4"
                                                                    multiplicative_expression => (15,16) #"4"
                                                                      unary_expression => (15,16) #"4"
                                                                        postfix_expression => (15,16) #"4"
                                                                          left_hand_side_expression => (15,16) #"4"
                                                                            new_expression => (15,16) #"4"
                                                                              member_expression => (15,16) #"4"
                                                                                primary_expression => (15,16) #"4"
                                                                                  literal => (15,16) #"4"
                                                                                    numeric_literal => (15,16) #"4"
                                                                                      decimal_literal => (15,16) #"4"
                                                                                        decimal_integer_literal => (15,16) #"4"
                                              assignment_expression__in => (17,18) #"6"
                                                conditional_expression__in => (17,18) #"6"
                                                  logical_or_expression__in => (17,18) #"6"
                                                    logical_and_expression__in => (17,18) #"6"
                                                      bitwise_or_expression__in => (17,18) #"6"
                                                        bitwise_xor_expression__in => (17,18) #"6"
                                                          bitwise_and_expression__in => (17,18) #"6"
                                                            equality_expression__in => (17,18) #"6"
                                                              relational_expression__in => (17,18) #"6"
                                                                shift_expression => (17,18) #"6"
                                                                  additive_expression => (17,18) #"6"
                                                                    multiplicative_expression => (17,18) #"6"
                                                                      unary_expression => (17,18) #"6"
                                                                        postfix_expression => (17,18) #"6"
                                                                          left_hand_side_expression => (17,18) #"6"
                                                                            new_expression => (17,18) #"6"
                                                                              member_expression => (17,18) #"6"
                                                                                primary_expression => (17,18) #"6"
                                                                                  literal => (17,18) #"6"
                                                                                    numeric_literal => (17,18) #"6"
                                                                                      decimal_literal => (17,18) #"6"
                                                                                        decimal_integer_literal => (17,18) #"6"
                                              assignment_expression__in => (19,20) #"8"
                                                conditional_expression__in => (19,20) #"8"
                                                  logical_or_expression__in => (19,20) #"8"
                                                    logical_and_expression__in => (19,20) #"8"
                                                      bitwise_or_expression__in => (19,20) #"8"
                                                        bitwise_xor_expression__in => (19,20) #"8"
                                                          bitwise_and_expression__in => (19,20) #"8"
                                                            equality_expression__in => (19,20) #"8"
                                                              relational_expression__in => (19,20) #"8"
                                                                shift_expression => (19,20) #"8"
                                                                  additive_expression => (19,20) #"8"
                                                                    multiplicative_expression => (19,20) #"8"
                                                                      unary_expression => (19,20) #"8"
                                                                        postfix_expression => (19,20) #"8"
                                                                          left_hand_side_expression => (19,20) #"8"
                                                                            new_expression => (19,20) #"8"
                                                                              member_expression => (19,20) #"8"
                                                                                primary_expression => (19,20) #"8"
                                                                                  literal => (19,20) #"8"
                                                                                    numeric_literal => (19,20) #"8"
                                                                                      decimal_literal => (19,20) #"8"
                                                                                        decimal_integer_literal => (19,20) #"8"
                                              assignment_expression__in => (21,23) #"10"
                                                conditional_expression__in => (21,23) #"10"
                                                  logical_or_expression__in => (21,23) #"10"
                                                    logical_and_expression__in => (21,23) #"10"
                                                      bitwise_or_expression__in => (21,23) #"10"
                                                        bitwise_xor_expression__in => (21,23) #"10"
                                                          bitwise_and_expression__in => (21,23) #"10"
                                                            equality_expression__in => (21,23) #"10"
                                                              relational_expression__in => (21,23) #"10"
                                                                shift_expression => (21,23) #"10"
                                                                  additive_expression => (21,23) #"10"
                                                                    multiplicative_expression => (21,23) #"10"
                                                                      unary_expression => (21,23) #"10"
                                                                        postfix_expression => (21,23) #"10"
                                                                          left_hand_side_expression => (21,23) #"10"
                                                                            new_expression => (21,23) #"10"
                                                                              member_expression => (21,23) #"10"
                                                                                primary_expression => (21,23) #"10"
                                                                                  literal => (21,23) #"10"
                                                                                    numeric_literal => (21,23) #"10"
                                                                                      decimal_literal => (21,23) #"10"
                                                                                        decimal_integer_literal => (21,23) #"10"
    variable_declaration__in => (30,40) #"fives = []"
      binding_identifier => (30,35) #"fives"
      initializer__in => (36,40) #"= []"
        assignment_expression__in => (38,40) #"[]"
          conditional_expression__in => (38,40) #"[]"
            logical_or_expression__in => (38,40) #"[]"
              logical_and_expression__in => (38,40) #"[]"
                bitwise_or_expression__in => (38,40) #"[]"
                  bitwise_xor_expression__in => (38,40) #"[]"
                    bitwise_and_expression__in => (38,40) #"[]"
                      equality_expression__in => (38,40) #"[]"
                        relational_expression__in => (38,40) #"[]"
                          shift_expression => (38,40) #"[]"
                            additive_expression => (38,40) #"[]"
                              multiplicative_expression => (38,40) #"[]"
                                unary_expression => (38,40) #"[]"
                                  postfix_expression => (38,40) #"[]"
                                    left_hand_side_expression => (38,40) #"[]"
                                      new_expression => (38,40) #"[]"
                                        member_expression => (38,40) #"[]"
                                          primary_expression => (38,40) #"[]"
                                            array_literal => (38,40) #"[]"
    smart_semicolon => (40,42) #";\n"
statement => (64,98) #"var odds = evens.map(v => v + 1);\n"
  variable_statement => (64,98) #"var odds = evens.map(v => v + 1);\n"
    variable_declaration__in => (68,96) #"odds = evens.map(v => v + 1)"
      binding_identifier => (68,72) #"odds"
      initializer__in => (73,96) #"= evens.map(v => v + 1)"
        assignment_expression__in => (75,96) #"evens.map(v => v + 1)"
          conditional_expression__in => (75,96) #"evens.map(v => v + 1)"
            logical_or_expression__in => (75,96) #"evens.map(v => v + 1)"
              logical_and_expression__in => (75,96) #"evens.map(v => v + 1)"
                bitwise_or_expression__in => (75,96) #"evens.map(v => v + 1)"
                  bitwise_xor_expression__in => (75,96) #"evens.map(v => v + 1)"
                    bitwise_and_expression__in => (75,96) #"evens.map(v => v + 1)"
                      equality_expression__in => (75,96) #"evens.map(v => v + 1)"
                        relational_expression__in => (75,96) #"evens.map(v => v + 1)"
                          shift_expression => (75,96) #"evens.map(v => v + 1)"
                            additive_expression => (75,96) #"evens.map(v => v + 1)"
                              multiplicative_expression => (75,96) #"evens.map(v => v + 1)"
                                unary_expression => (75,96) #"evens.map(v => v + 1)"
                                  postfix_expression => (75,96) #"evens.map(v => v + 1)"
                                    left_hand_side_expression => (75,96) #"evens.map(v => v + 1)"
                                      call_expression => (75,96) #"evens.map(v => v + 1)"
                                        member_expression => (75,84) #"evens.map"
                                          primary_expression => (75,80) #"evens"
                                            identifier_reference => (75,80) #"evens"
                                          identifier_name => (81,84) #"map"
                                        arguments => (84,96) #"(v => v + 1)"
                                          argument_list => (85,95) #"v => v + 1"
                                            assignment_expression__in => (85,95) #"v => v + 1"
                                              arrow_function__in => (85,95) #"v => v + 1"
                                                arrow_parameters => (85,86) #"v"
                                                  binding_identifier => (85,86) #"v"
                                                concise_body__in => (90,95) #"v + 1"
                                                  assignment_expression__in => (90,95) #"v + 1"
                                                    conditional_expression__in => (90,95) #"v + 1"
                                                      logical_or_expression__in => (90,95) #"v + 1"
                                                        logical_and_expression__in => (90,95) #"v + 1"
                                                          bitwise_or_expression__in => (90,95) #"v + 1"
                                                            bitwise_xor_expression__in => (90,95) #"v + 1"
                                                              bitwise_and_expression__in => (90,95) #"v + 1"
                                                                equality_expression__in => (90,95) #"v + 1"
                                                                  relational_expression__in => (90,95) #"v + 1"
                                                                    shift_expression => (90,95) #"v + 1"
                                                                      additive_expression => (90,95) #"v + 1"
                                                                        multiplicative_expression => (90,92) #"v "
                                                                          unary_expression => (90,92) #"v "
                                                                            postfix_expression => (90,92) #"v "
                                                                              left_hand_side_expression => (90,92) #"v "
                                                                                new_expression => (90,92) #"v "
                                                                                  member_expression => (90,92) #"v "
                                                                                    primary_expression => (90,91) #"v"
                                                                                      identifier_reference => (90,91) #"v"
                                                                        additive_operator => (92,93) #"+"
                                                                        multiplicative_expression => (94,95) #"1"
                                                                          unary_expression => (94,95) #"1"
                                                                            postfix_expression => (94,95) #"1"
                                                                              left_hand_side_expression => (94,95) #"1"
                                                                                new_expression => (94,95) #"1"
                                                                                  member_expression => (94,95) #"1"
                                                                                    primary_expression => (94,95) #"1"
                                                                                      literal => (94,95) #"1"
                                                                                        numeric_literal => (94,95) #"1"
                                                                                          decimal_literal => (94,95) #"1"
                                                                                            decimal_integer_literal => (94,95) #"1"
    smart_semicolon => (96,98) #";\n"
statement => (98,137) #"var nums = evens.map((v, i) => v + i);\n"
  variable_statement => (98,137) #"var nums = evens.map((v, i) => v + i);\n"
    variable_declaration__in => (102,135) #"nums = evens.map((v, i) => v + i)"
      binding_identifier => (102,106) #"nums"
      initializer__in => (107,135) #"= evens.map((v, i) => v + i)"
        assignment_expression__in => (109,135) #"evens.map((v, i) => v + i)"
          conditional_expression__in => (109,135) #"evens.map((v, i) => v + i)"
            logical_or_expression__in => (109,135) #"evens.map((v, i) => v + i)"
              logical_and_expression__in => (109,135) #"evens.map((v, i) => v + i)"
                bitwise_or_expression__in => (109,135) #"evens.map((v, i) => v + i)"
                  bitwise_xor_expression__in => (109,135) #"evens.map((v, i) => v + i)"
                    bitwise_and_expression__in => (109,135) #"evens.map((v, i) => v + i)"
                      equality_expression__in => (109,135) #"evens.map((v, i) => v + i)"
                        relational_expression__in => (109,135) #"evens.map((v, i) => v + i)"
                          shift_expression => (109,135) #"evens.map((v, i) => v + i)"
                            additive_expression => (109,135) #"evens.map((v, i) => v + i)"
                              multiplicative_expression => (109,135) #"evens.map((v, i) => v + i)"
                                unary_expression => (109,135) #"evens.map((v, i) => v + i)"
                                  postfix_expression => (109,135) #"evens.map((v, i) => v + i)"
                                    left_hand_side_expression => (109,135) #"evens.map((v, i) => v + i)"
                                      call_expression => (109,135) #"evens.map((v, i) => v + i)"
                                        member_expression => (109,118) #"evens.map"
                                          primary_expression => (109,114) #"evens"
                                            identifier_reference => (109,114) #"evens"
                                          identifier_name => (115,118) #"map"
                                        arguments => (118,135) #"((v, i) => v + i)"
                                          argument_list => (119,134) #"(v, i) => v + i"
                                            assignment_expression__in => (119,134) #"(v, i) => v + i"
                                              arrow_function__in => (119,134) #"(v, i) => v + i"
                                                arrow_parameters => (119,125) #"(v, i)"
                                                  cover_parenthesized_expression_and_arrow_parameter_list => (119,125) #"(v, i)"
                                                    expression__in => (120,124) #"v, i"
                                                      assignment_expression__in => (120,121) #"v"
                                                        conditional_expression__in => (120,121) #"v"
                                                          logical_or_expression__in => (120,121) #"v"
                                                            logical_and_expression__in => (120,121) #"v"
                                                              bitwise_or_expression__in => (120,121) #"v"
                                                                bitwise_xor_expression__in => (120,121) #"v"
                                                                  bitwise_and_expression__in => (120,121) #"v"
                                                                    equality_expression__in => (120,121) #"v"
                                                                      relational_expression__in => (120,121) #"v"
                                                                        shift_expression => (120,121) #"v"
                                                                          additive_expression => (120,121) #"v"
                                                                            multiplicative_expression => (120,121) #"v"
                                                                              unary_expression => (120,121) #"v"
                                                                                postfix_expression => (120,121) #"v"
                                                                                  left_hand_side_expression => (120,121) #"v"
                                                                                    new_expression => (120,121) #"v"
                                                                                      member_expression => (120,121) #"v"
                                                                                        primary_expression => (120,121) #"v"
                                                                                          identifier_reference => (120,121) #"v"
                                                      assignment_expression__in => (123,124) #"i"
                                                        conditional_expression__in => (123,124) #"i"
                                                          logical_or_expression__in => (123,124) #"i"
                                                            logical_and_expression__in => (123,124) #"i"
                                                              bitwise_or_expression__in => (123,124) #"i"
                                                                bitwise_xor_expression__in => (123,124) #"i"
                                                                  bitwise_and_expression__in => (123,124) #"i"
                                                                    equality_expression__in => (123,124) #"i"
                                                                      relational_expression__in => (123,124) #"i"
                                                                        shift_expression => (123,124) #"i"
                                                                          additive_expression => (123,124) #"i"
                                                                            multiplicative_expression => (123,124) #"i"
                                                                              unary_expression => (123,124) #"i"
                                                                                postfix_expression => (123,124) #"i"
                                                                                  left_hand_side_expression => (123,124) #"i"
                                                                                    new_expression => (123,124) #"i"
                                                                                      member_expression => (123,124) #"i"
                                                                                        primary_expression => (123,124) #"i"
                                                                                          identifier_reference => (123,124) #"i"
                                                concise_body__in => (129,134) #"v + i"
                                                  assignment_expression__in => (129,134) #"v + i"
                                                    conditional_expression__in => (129,134) #"v + i"
                                                      logical_or_expression__in => (129,134) #"v + i"
                                                        logical_and_expression__in => (129,134) #"v + i"
                                                          bitwise_or_expression__in => (129,134) #"v + i"
                                                            bitwise_xor_expression__in => (129,134) #"v + i"
                                                              bitwise_and_expression__in => (129,134) #"v + i"
                                                                equality_expression__in => (129,134) #"v + i"
                                                                  relational_expression__in => (129,134) #"v + i"
                                                                    shift_expression => (129,134) #"v + i"
                                                                      additive_expression => (129,134) #"v + i"
                                                                        multiplicative_expression => (129,131) #"v "
                                                                          unary_expression => (129,131) #"v "
                                                                            postfix_expression => (129,131) #"v "
                                                                              left_hand_side_expression => (129,131) #"v "
                                                                                new_expression => (129,131) #"v "
                                                                                  member_expression => (129,131) #"v "
                                                                                    primary_expression => (129,130) #"v"
                                                                                      identifier_reference => (129,130) #"v"
                                                                        additive_operator => (131,132) #"+"
                                                                        multiplicative_expression => (133,134) #"i"
                                                                          unary_expression => (133,134) #"i"
                                                                            postfix_expression => (133,134) #"i"
                                                                              left_hand_side_expression => (133,134) #"i"
                                                                                new_expression => (133,134) #"i"
                                                                                  member_expression => (133,134) #"i"
                                                                                    primary_expression => (133,134) #"i"
                                                                                      identifier_reference => (133,134) #"i"
    smart_semicolon => (135,137) #";\n"
statement => (138,157) #"console.log(odds);\n"
  expression_statement => (138,157) #"console.log(odds);\n"
    expression__in => (138,155) #"console.log(odds)"
      assignment_expression__in => (138,155) #"console.log(odds)"
        conditional_expression__in => (138,155) #"console.log(odds)"
          logical_or_expression__in => (138,155) #"console.log(odds)"
            logical_and_expression__in => (138,155) #"console.log(odds)"
              bitwise_or_expression__in => (138,155) #"console.log(odds)"
                bitwise_xor_expression__in => (138,155) #"console.log(odds)"
                  bitwise_and_expression__in => (138,155) #"console.log(odds)"
                    equality_expression__in => (138,155) #"console.log(odds)"
                      relational_expression__in => (138,155) #"console.log(odds)"
                        shift_expression => (138,155) #"console.log(odds)"
                          additive_expression => (138,155) #"console.log(odds)"
                            multiplicative_expression => (138,155) #"console.log(odds)"
                              unary_expression => (138,155) #"console.log(odds)"
                                postfix_expression => (138,155) #"console.log(odds)"
                                  left_hand_side_expression => (138,155) #"console.log(odds)"
                                    call_expression => (138,155) #"console.log(odds)"
                                      member_expression => (138,149) #"console.log"
                                        primary_expression => (138,145) #"console"
                                          identifier_reference => (138,145) #"console"
                                        identifier_name => (146,149) #"log"
                                      arguments => (149,155) #"(odds)"
                                        argument_list => (150,154) #"odds"
                                          assignment_expression__in => (150,154) #"odds"
                                            conditional_expression__in => (150,154) #"odds"
                                              logical_or_expression__in => (150,154) #"odds"
                                                logical_and_expression__in => (150,154) #"odds"
                                                  bitwise_or_expression__in => (150,154) #"odds"
                                                    bitwise_xor_expression__in => (150,154) #"odds"
                                                      bitwise_and_expression__in => (150,154) #"odds"
                                                        equality_expression__in => (150,154) #"odds"
                                                          relational_expression__in => (150,154) #"odds"
                                                            shift_expression => (150,154) #"odds"
                                                              additive_expression => (150,154) #"odds"
                                                                multiplicative_expression => (150,154) #"odds"
                                                                  unary_expression => (150,154) #"odds"
                                                                    postfix_expression => (150,154) #"odds"
                                                                      left_hand_side_expression => (150,154) #"odds"
                                                                        new_expression => (150,154) #"odds"
                                                                          member_expression => (150,154) #"odds"
                                                                            primary_expression => (150,154) #"odds"
                                                                              identifier_reference => (150,154) #"odds"
    smart_semicolon => (155,157) #";\n"
statement => (157,176) #"console.log(nums);\n"
  expression_statement => (157,176) #"console.log(nums);\n"
    expression__in => (157,174) #"console.log(nums)"
      assignment_expression__in => (157,174) #"console.log(nums)"
        conditional_expression__in => (157,174) #"console.log(nums)"
          logical_or_expression__in => (157,174) #"console.log(nums)"
            logical_and_expression__in => (157,174) #"console.log(nums)"
              bitwise_or_expression__in => (157,174) #"console.log(nums)"
                bitwise_xor_expression__in => (157,174) #"console.log(nums)"
                  bitwise_and_expression__in => (157,174) #"console.log(nums)"
                    equality_expression__in => (157,174) #"console.log(nums)"
                      relational_expression__in => (157,174) #"console.log(nums)"
                        shift_expression => (157,174) #"console.log(nums)"
                          additive_expression => (157,174) #"console.log(nums)"
                            multiplicative_expression => (157,174) #"console.log(nums)"
                              unary_expression => (157,174) #"console.log(nums)"
                                postfix_expression => (157,174) #"console.log(nums)"
                                  left_hand_side_expression => (157,174) #"console.log(nums)"
                                    call_expression => (157,174) #"console.log(nums)"
                                      member_expression => (157,168) #"console.log"
                                        primary_expression => (157,164) #"console"
                                          identifier_reference => (157,164) #"console"
                                        identifier_name => (165,168) #"log"
                                      arguments => (168,174) #"(nums)"
                                        argument_list => (169,173) #"nums"
                                          assignment_expression__in => (169,173) #"nums"
                                            conditional_expression__in => (169,173) #"nums"
                                              logical_or_expression__in => (169,173) #"nums"
                                                logical_and_expression__in => (169,173) #"nums"
                                                  bitwise_or_expression__in => (169,173) #"nums"
                                                    bitwise_xor_expression__in => (169,173) #"nums"
                                                      bitwise_and_expression__in => (169,173) #"nums"
                                                        equality_expression__in => (169,173) #"nums"
                                                          relational_expression__in => (169,173) #"nums"
                                                            shift_expression => (169,173) #"nums"
                                                              additive_expression => (169,173) #"nums"
                                                                multiplicative_expression => (169,173) #"nums"
                                                                  unary_expression => (169,173) #"nums"
                                                                    postfix_expression => (169,173) #"nums"
                                                                      left_hand_side_expression => (169,173) #"nums"
                                                                        new_expression => (169,173) #"nums"
                                                                          member_expression => (169,173) #"nums"
                                                                            primary_expression => (169,173) #"nums"
                                                                              identifier_reference => (169,173) #"nums"
    smart_semicolon => (174,176) #";\n"
statement => (197,257) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n});\n"
  expression_statement => (197,257) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n});\n"
    expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
      assignment_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
        conditional_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
          logical_or_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
            logical_and_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
              bitwise_or_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                bitwise_xor_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                  bitwise_and_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                    equality_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                      relational_expression__in => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                        shift_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                          additive_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                            multiplicative_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                              unary_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                                postfix_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                                  left_hand_side_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                                    call_expression => (197,255) #"nums.forEach(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                                      member_expression => (197,209) #"nums.forEach"
                                        primary_expression => (197,201) #"nums"
                                          identifier_reference => (197,201) #"nums"
                                        identifier_name => (202,209) #"forEach"
                                      arguments => (209,255) #"(v => {\n    if (v % 5 === 0) fives.push(v);\n})"
                                        argument_list => (210,254) #"v => {\n    if (v % 5 === 0) fives.push(v);\n}"
                                          assignment_expression__in => (210,254) #"v => {\n    if (v % 5 === 0) fives.push(v);\n}"
                                            arrow_function__in => (210,254) #"v => {\n    if (v % 5 === 0) fives.push(v);\n}"
                                              arrow_parameters => (210,211) #"v"
                                                binding_identifier => (210,211) #"v"
                                              concise_body__in => (215,254) #"{\n    if (v % 5 === 0) fives.push(v);\n}"
                                                function_body => (216,253) #"\n    if (v % 5 === 0) fives.push(v);\n"
                                                  statement__return => (221,253) #"if (v % 5 === 0) fives.push(v);\n"
                                                    if_statement__return => (221,253) #"if (v % 5 === 0) fives.push(v);\n"
                                                      expression__in => (225,236) #"v % 5 === 0"
                                                        assignment_expression__in => (225,236) #"v % 5 === 0"
                                                          conditional_expression__in => (225,236) #"v % 5 === 0"
                                                            logical_or_expression__in => (225,236) #"v % 5 === 0"
                                                              logical_and_expression__in => (225,236) #"v % 5 === 0"
                                                                bitwise_or_expression__in => (225,236) #"v % 5 === 0"
                                                                  bitwise_xor_expression__in => (225,236) #"v % 5 === 0"
                                                                    bitwise_and_expression__in => (225,236) #"v % 5 === 0"
                                                                      equality_expression__in => (225,236) #"v % 5 === 0"
                                                                        relational_expression__in => (225,231) #"v % 5 "
                                                                          shift_expression => (225,231) #"v % 5 "
                                                                            additive_expression => (225,231) #"v % 5 "
                                                                              multiplicative_expression => (225,231) #"v % 5 "
                                                                                unary_expression => (225,227) #"v "
                                                                                  postfix_expression => (225,227) #"v "
                                                                                    left_hand_side_expression => (225,227) #"v "
                                                                                      new_expression => (225,227) #"v "
                                                                                        member_expression => (225,227) #"v "
                                                                                          primary_expression => (225,226) #"v"
                                                                                            identifier_reference => (225,226) #"v"
                                                                                multiplicative_operator => (227,228) #"%"
                                                                                unary_expression => (229,231) #"5 "
                                                                                  postfix_expression => (229,231) #"5 "
                                                                                    left_hand_side_expression => (229,231) #"5 "
                                                                                      new_expression => (229,231) #"5 "
                                                                                        member_expression => (229,231) #"5 "
                                                                                          primary_expression => (229,230) #"5"
                                                                                            literal => (229,230) #"5"
                                                                                              numeric_literal => (229,230) #"5"
                                                                                                decimal_literal => (229,230) #"5"
                                                                                                  decimal_integer_literal => (229,230) #"5"
                                                                        equality_operator => (231,234) #"==="
                                                                        relational_expression__in => (235,236) #"0"
                                                                          shift_expression => (235,236) #"0"
                                                                            additive_expression => (235,236) #"0"
                                                                              multiplicative_expression => (235,236) #"0"
                                                                                unary_expression => (235,236) #"0"
                                                                                  postfix_expression => (235,236) #"0"
                                                                                    left_hand_side_expression => (235,236) #"0"
                                                                                      new_expression => (235,236) #"0"
                                                                                        member_expression => (235,236) #"0"
                                                                                          primary_expression => (235,236) #"0"
                                                                                            literal => (235,236) #"0"
                                                                                              numeric_literal => (235,236) #"0"
                                                                                                decimal_literal => (235,236) #"0"
                                                                                                  decimal_integer_literal => (235,236) #"0"
                                                      statement__return => (238,253) #"fives.push(v);\n"
                                                        expression_statement => (238,253) #"fives.push(v);\n"
                                                          expression__in => (238,251) #"fives.push(v)"
                                                            assignment_expression__in => (238,251) #"fives.push(v)"
                                                              conditional_expression__in => (238,251) #"fives.push(v)"
                                                                logical_or_expression__in => (238,251) #"fives.push(v)"
                                                                  logical_and_expression__in => (238,251) #"fives.push(v)"
                                                                    bitwise_or_expression__in => (238,251) #"fives.push(v)"
                                                                      bitwise_xor_expression__in => (238,251) #"fives.push(v)"
                                                                        bitwise_and_expression__in => (238,251) #"fives.push(v)"
                                                                          equality_expression__in => (238,251) #"fives.push(v)"
                                                                            relational_expression__in => (238,251) #"fives.push(v)"
                                                                              shift_expression => (238,251) #"fives.push(v)"
                                                                                additive_expression => (238,251) #"fives.push(v)"
                                                                                  multiplicative_expression => (238,251) #"fives.push(v)"
                                                                                    unary_expression => (238,251) #"fives.push(v)"
                                                                                      postfix_expression => (238,251) #"fives.push(v)"
                                                                                        left_hand_side_expression => (238,251) #"fives.push(v)"
                                                                                          call_expression => (238,251) #"fives.push(v)"
                                                                                            member_expression => (238,248) #"fives.push"
                                                                                              primary_expression => (238,243) #"fives"
                                                                                                identifier_reference => (238,243) #"fives"
                                                                                              identifier_name => (244,248) #"push"
                                                                                            arguments => (248,251) #"(v)"
                                                                                              argument_list => (249,250) #"v"
                                                                                                assignment_expression__in => (249,250) #"v"
                                                                                                  conditional_expression__in => (249,250) #"v"
                                                                                                    logical_or_expression__in => (249,250) #"v"
                                                                                                      logical_and_expression__in => (249,250) #"v"
                                                                                                        bitwise_or_expression__in => (249,250) #"v"
                                                                                                          bitwise_xor_expression__in => (249,250) #"v"
                                                                                                            bitwise_and_expression__in => (249,250) #"v"
                                                                                                              equality_expression__in => (249,250) #"v"
                                                                                                                relational_expression__in => (249,250) #"v"
                                                                                                                  shift_expression => (249,250) #"v"
                                                                                                                    additive_expression => (249,250) #"v"
                                                                                                                      multiplicative_expression => (249,250) #"v"
                                                                                                                        unary_expression => (249,250) #"v"
                                                                                                                          postfix_expression => (249,250) #"v"
                                                                                                                            left_hand_side_expression => (249,250) #"v"
                                                                                                                              new_expression => (249,250) #"v"
                                                                                                                                member_expression => (249,250) #"v"
                                                                                                                                  primary_expression => (249,250) #"v"
                                                                                                                                    identifier_reference => (249,250) #"v"
                                                          smart_semicolon => (251,253) #";\n"
    smart_semicolon => (255,257) #";\n"
declaration => (313,382) #"function thisBinding() {\n    return () => console.log(this.string);\n}"
  hoistable_declaration => (313,382) #"function thisBinding() {\n    return () => console.log(this.string);\n}"
    function_declaration => (313,382) #"function thisBinding() {\n    return () => console.log(this.string);\n}"
      binding_identifier => (322,333) #"thisBinding"
      formal_parameters => (334,334) #""
      function_body => (342,381) #"return () => console.log(this.string);\n"
        statement__return => (342,381) #"return () => console.log(this.string);\n"
          return_statement => (342,381) #"return () => console.log(this.string);\n"
            expression__in => (349,379) #"() => console.log(this.string)"
              assignment_expression__in => (349,379) #"() => console.log(this.string)"
                arrow_function__in => (349,379) #"() => console.log(this.string)"
                  arrow_parameters => (349,351) #"()"
                    cover_parenthesized_expression_and_arrow_parameter_list => (349,351) #"()"
                  concise_body__in => (355,379) #"console.log(this.string)"
                    assignment_expression__in => (355,379) #"console.log(this.string)"
                      conditional_expression__in => (355,379) #"console.log(this.string)"
                        logical_or_expression__in => (355,379) #"console.log(this.string)"
                          logical_and_expression__in => (355,379) #"console.log(this.string)"
                            bitwise_or_expression__in => (355,379) #"console.log(this.string)"
                              bitwise_xor_expression__in => (355,379) #"console.log(this.string)"
                                bitwise_and_expression__in => (355,379) #"console.log(this.string)"
                                  equality_expression__in => (355,379) #"console.log(this.string)"
                                    relational_expression__in => (355,379) #"console.log(this.string)"
                                      shift_expression => (355,379) #"console.log(this.string)"
                                        additive_expression => (355,379) #"console.log(this.string)"
                                          multiplicative_expression => (355,379) #"console.log(this.string)"
                                            unary_expression => (355,379) #"console.log(this.string)"
                                              postfix_expression => (355,379) #"console.log(this.string)"
                                                left_hand_side_expression => (355,379) #"console.log(this.string)"
                                                  call_expression => (355,379) #"console.log(this.string)"
                                                    member_expression => (355,366) #"console.log"
                                                      primary_expression => (355,362) #"console"
                                                        identifier_reference => (355,362) #"console"
                                                      identifier_name => (363,366) #"log"
                                                    arguments => (366,379) #"(this.string)"
                                                      argument_list => (367,378) #"this.string"
                                                        assignment_expression__in => (367,378) #"this.string"
                                                          conditional_expression__in => (367,378) #"this.string"
                                                            logical_or_expression__in => (367,378) #"this.string"
                                                              logical_and_expression__in => (367,378) #"this.string"
                                                                bitwise_or_expression__in => (367,378) #"this.string"
                                                                  bitwise_xor_expression__in => (367,378) #"this.string"
                                                                    bitwise_and_expression__in => (367,378) #"this.string"
                                                                      equality_expression__in => (367,378) #"this.string"
                                                                        relational_expression__in => (367,378) #"this.string"
                                                                          shift_expression => (367,378) #"this.string"
                                                                            additive_expression => (367,378) #"this.string"
                                                                              multiplicative_expression => (367,378) #"this.string"
                                                                                unary_expression => (367,378) #"this.string"
                                                                                  postfix_expression => (367,378) #"this.string"
                                                                                    left_hand_side_expression => (367,378) #"this.string"
                                                                                      new_expression => (367,378) #"this.string"
                                                                                        member_expression => (367,378) #"this.string"
                                                                                          primary_expression => (367,371) #"this"
                                                                                            this_exp => (367,371) #"this"
                                                                                          identifier_name => (372,378) #"string"
            smart_semicolon => (379,381) #";\n"
statement => (384,425) #"thisBinding.call({ string: \'bound\' })();\n"
  expression_statement => (384,425) #"thisBinding.call({ string: \'bound\' })();\n"
    expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
      assignment_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
        conditional_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
          logical_or_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
            logical_and_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
              bitwise_or_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                bitwise_xor_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                  bitwise_and_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                    equality_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                      relational_expression__in => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                        shift_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                          additive_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                            multiplicative_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                              unary_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                                postfix_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                                  left_hand_side_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                                    call_expression => (384,423) #"thisBinding.call({ string: \'bound\' })()"
                                      member_expression => (384,400) #"thisBinding.call"
                                        primary_expression => (384,395) #"thisBinding"
                                          identifier_reference => (384,395) #"thisBinding"
                                        identifier_name => (396,400) #"call"
                                      arguments => (400,421) #"({ string: \'bound\' })"
                                        argument_list => (401,420) #"{ string: \'bound\' }"
                                          assignment_expression__in => (401,420) #"{ string: \'bound\' }"
                                            conditional_expression__in => (401,420) #"{ string: \'bound\' }"
                                              logical_or_expression__in => (401,420) #"{ string: \'bound\' }"
                                                logical_and_expression__in => (401,420) #"{ string: \'bound\' }"
                                                  bitwise_or_expression__in => (401,420) #"{ string: \'bound\' }"
                                                    bitwise_xor_expression__in => (401,420) #"{ string: \'bound\' }"
                                                      bitwise_and_expression__in => (401,420) #"{ string: \'bound\' }"
                                                        equality_expression__in => (401,420) #"{ string: \'bound\' }"
                                                          relational_expression__in => (401,420) #"{ string: \'bound\' }"
                                                            shift_expression => (401,420) #"{ string: \'bound\' }"
                                                              additive_expression => (401,420) #"{ string: \'bound\' }"
                                                                multiplicative_expression => (401,420) #"{ string: \'bound\' }"
                                                                  unary_expression => (401,420) #"{ string: \'bound\' }"
                                                                    postfix_expression => (401,420) #"{ string: \'bound\' }"
                                                                      left_hand_side_expression => (401,420) #"{ string: \'bound\' }"
                                                                        new_expression => (401,420) #"{ string: \'bound\' }"
                                                                          member_expression => (401,420) #"{ string: \'bound\' }"
                                                                            primary_expression => (401,420) #"{ string: \'bound\' }"
                                                                              object_literal => (401,420) #"{ string: \'bound\' }"
                                                                                property_definition_list => (403,419) #"string: \'bound\' "
                                                                                  property_definition => (403,419) #"string: \'bound\' "
                                                                                    property_name => (403,409) #"string"
                                                                                      literal_property_name => (403,409) #"string"
                                                                                        identifier_name => (403,409) #"string"
                                                                                    assignment_expression__in => (411,419) #"\'bound\' "
                                                                                      conditional_expression__in => (411,419) #"\'bound\' "
                                                                                        logical_or_expression__in => (411,419) #"\'bound\' "
                                                                                          logical_and_expression__in => (411,419) #"\'bound\' "
                                                                                            bitwise_or_expression__in => (411,419) #"\'bound\' "
                                                                                              bitwise_xor_expression__in => (411,419) #"\'bound\' "
                                                                                                bitwise_and_expression__in => (411,419) #"\'bound\' "
                                                                                                  equality_expression__in => (411,419) #"\'bound\' "
                                                                                                    relational_expression__in => (411,419) #"\'bound\' "
                                                                                                      shift_expression => (411,419) #"\'bound\' "
                                                                                                        additive_expression => (411,419) #"\'bound\' "
                                                                                                          multiplicative_expression => (411,419) #"\'bound\' "
                                                                                                            unary_expression => (411,419) #"\'bound\' "
                                                                                                              postfix_expression => (411,419) #"\'bound\' "
                                                                                                                left_hand_side_expression => (411,419) #"\'bound\' "
                                                                                                                  new_expression => (411,419) #"\'bound\' "
                                                                                                                    member_expression => (411,419) #"\'bound\' "
                                                                                                                      primary_expression => (411,418) #"\'bound\'"
                                                                                                                        literal => (411,418) #"\'bound\'"
                                                                                                                          string_literal => (411,418) #"\'bound\'"
                                      arguments => (421,423) #"()"
    smart_semicolon => (423,425) #";\n"
declaration => (457,517) #"function args() {\n    return () => console.log(arguments);\n}"
  hoistable_declaration => (457,517) #"function args() {\n    return () => console.log(arguments);\n}"
    function_declaration => (457,517) #"function args() {\n    return () => console.log(arguments);\n}"
      binding_identifier => (466,470) #"args"
      formal_parameters => (471,471) #""
      function_body => (479,516) #"return () => console.log(arguments);\n"
        statement__return => (479,516) #"return () => console.log(arguments);\n"
          return_statement => (479,516) #"return () => console.log(arguments);\n"
            expression__in => (486,514) #"() => console.log(arguments)"
              assignment_expression__in => (486,514) #"() => console.log(arguments)"
                arrow_function__in => (486,514) #"() => console.log(arguments)"
                  arrow_parameters => (486,488) #"()"
                    cover_parenthesized_expression_and_arrow_parameter_list => (486,488) #"()"
                  concise_body__in => (492,514) #"console.log(arguments)"
                    assignment_expression__in => (492,514) #"console.log(arguments)"
                      conditional_expression__in => (492,514) #"console.log(arguments)"
                        logical_or_expression__in => (492,514) #"console.log(arguments)"
                          logical_and_expression__in => (492,514) #"console.log(arguments)"
                            bitwise_or_expression__in => (492,514) #"console.log(arguments)"
                              bitwise_xor_expression__in => (492,514) #"console.log(arguments)"
                                bitwise_and_expression__in => (492,514) #"console.log(arguments)"
                                  equality_expression__in => (492,514) #"console.log(arguments)"
                                    relational_expression__in => (492,514) #"console.log(arguments)"
                                      shift_expression => (492,514) #"console.log(arguments)"
                                        additive_expression => (492,514) #"console.log(arguments)"
                                          multiplicative_expression => (492,514) #"console.log(arguments)"
                                            unary_expression => (492,514) #"console.log(arguments)"
                                              postfix_expression => (492,514) #"console.log(arguments)"
                                                left_hand_side_expression => (492,514) #"console.log(arguments)"
                                                  call_expression => (492,514) #"console.log(arguments)"
                                                    member_expression => (492,503) #"console.log"
                                                      primary_expression => (492,499) #"console"
                                                        identifier_reference => (492,499) #"console"
                                                      identifier_name => (500,503) #"log"
                                                    arguments => (503,514) #"(arguments)"
                                                      argument_list => (504,513) #"arguments"
                                                        assignment_expression__in => (504,513) #"arguments"
                                                          conditional_expression__in => (504,513) #"arguments"
                                                            logical_or_expression__in => (504,513) #"arguments"
                                                              logical_and_expression__in => (504,513) #"arguments"
                                                                bitwise_or_expression__in => (504,513) #"arguments"
                                                                  bitwise_xor_expression__in => (504,513) #"arguments"
                                                                    bitwise_and_expression__in => (504,513) #"arguments"
                                                                      equality_expression__in => (504,513) #"arguments"
                                                                        relational_expression__in => (504,513) #"arguments"
                                                                          shift_expression => (504,513) #"arguments"
                                                                            additive_expression => (504,513) #"arguments"
                                                                              multiplicative_expression => (504,513) #"arguments"
                                                                                unary_expression => (504,513) #"arguments"
                                                                                  postfix_expression => (504,513) #"arguments"
                                                                                    left_hand_side_expression => (504,513) #"arguments"
                                                                                      new_expression => (504,513) #"arguments"
                                                                                        member_expression => (504,513) #"arguments"
                                                                                          primary_expression => (504,513) #"arguments"
                                                                                            identifier_reference => (504,513) #"arguments"
            smart_semicolon => (514,516) #";\n"
statement => (519,542) #"args(\'arg1\',\'arg2\')();\n"
  expression_statement => (519,542) #"args(\'arg1\',\'arg2\')();\n"
    expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
      assignment_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
        conditional_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
          logical_or_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
            logical_and_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
              bitwise_or_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
                bitwise_xor_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
                  bitwise_and_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
                    equality_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
                      relational_expression__in => (519,540) #"args(\'arg1\',\'arg2\')()"
                        shift_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
                          additive_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
                            multiplicative_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
                              unary_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
                                postfix_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
                                  left_hand_side_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
                                    call_expression => (519,540) #"args(\'arg1\',\'arg2\')()"
                                      member_expression => (519,523) #"args"
                                        primary_expression => (519,523) #"args"
                                          identifier_reference => (519,523) #"args"
                                      arguments => (523,538) #"(\'arg1\',\'arg2\')"
                                        argument_list => (524,537) #"\'arg1\',\'arg2\'"
                                          assignment_expression__in => (524,530) #"\'arg1\'"
                                            conditional_expression__in => (524,530) #"\'arg1\'"
                                              logical_or_expression__in => (524,530) #"\'arg1\'"
                                                logical_and_expression__in => (524,530) #"\'arg1\'"
                                                  bitwise_or_expression__in => (524,530) #"\'arg1\'"
                                                    bitwise_xor_expression__in => (524,530) #"\'arg1\'"
                                                      bitwise_and_expression__in => (524,530) #"\'arg1\'"
                                                        equality_expression__in => (524,530) #"\'arg1\'"
                                                          relational_expression__in => (524,530) #"\'arg1\'"
                                                            shift_expression => (524,530) #"\'arg1\'"
                                                              additive_expression => (524,530) #"\'arg1\'"
                                                                multiplicative_expression => (524,530) #"\'arg1\'"
                                                                  unary_expression => (524,530) #"\'arg1\'"
                                                                    postfix_expression => (524,530) #"\'arg1\'"
                                                                      left_hand_side_expression => (524,530) #"\'arg1\'"
                                                                        new_expression => (524,530) #"\'arg1\'"
                                                                          member_expression => (524,530) #"\'arg1\'"
                                                                            primary_expression => (524,530) #"\'arg1\'"
                                                                              literal => (524,530) #"\'arg1\'"
                                                                                string_literal => (524,530) #"\'arg1\'"
                                          assignment_expression__in => (531,537) #"\'arg2\'"
                                            conditional_expression__in => (531,537) #"\'arg2\'"
                                              logical_or_expression__in => (531,537) #"\'arg2\'"
                                                logical_and_expression__in => (531,537) #"\'arg2\'"
                                                  bitwise_or_expression__in => (531,537) #"\'arg2\'"
                                                    bitwise_xor_expression__in => (531,537) #"\'arg2\'"
                                                      bitwise_and_expression__in => (531,537) #"\'arg2\'"
                                                        equality_expression__in => (531,537) #"\'arg2\'"
                                                          relational_expression__in => (531,537) #"\'arg2\'"
                                                            shift_expression => (531,537) #"\'arg2\'"
                                                              additive_expression => (531,537) #"\'arg2\'"
                                                                multiplicative_expression => (531,537) #"\'arg2\'"
                                                                  unary_expression => (531,537) #"\'arg2\'"
                                                                    postfix_expression => (531,537) #"\'arg2\'"
                                                                      left_hand_side_expression => (531,537) #"\'arg2\'"
                                                                        new_expression => (531,537) #"\'arg2\'"
                                                                          member_expression => (531,537) #"\'arg2\'"
                                                                            primary_expression => (531,537) #"\'arg2\'"
                                                                              literal => (531,537) #"\'arg2\'"
                                                                                string_literal => (531,537) #"\'arg2\'"
                                      arguments => (538,540) #"()"
    smart_semicolon => (540,542) #";\n"
