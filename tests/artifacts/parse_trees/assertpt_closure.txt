declaration => (1,156) #"function gen() {\n    var fs = [];\n    for (var i = 0; i < 10; i++) {\n        fs.push(function () {\n            return i;\n        });\n    }\n    return fs;\n}"
__hoistable_declaration => (1,156) #"function gen() {\n    var fs = [];\n    for (var i = 0; i < 10; i++) {\n        fs.push(function () {\n            return i;\n        });\n    }\n    return fs;\n}"
____function_declaration => (1,156) #"function gen() {\n    var fs = [];\n    for (var i = 0; i < 10; i++) {\n        fs.push(function () {\n            return i;\n        });\n    }\n    return fs;\n}"
______binding_identifier => (10,13) #"gen"
______formal_parameters => (14,14) #""
______function_body => (22,155) #"var fs = [];\n    for (var i = 0; i < 10; i++) {\n        fs.push(function () {\n            return i;\n        });\n    }\n    return fs;\n"
________variable_statement => (22,35) #"var fs = [];\n"
__________variable_declaration__in => (26,33) #"fs = []"
____________binding_identifier => (26,28) #"fs"
____________initializer__in => (29,33) #"= []"
______________assignment_expression__in => (31,33) #"[]"
________________conditional_expression__in => (31,33) #"[]"
__________________logical_or_expression__in => (31,33) #"[]"
____________________logical_and_expression__in => (31,33) #"[]"
______________________bitwise_or_expression__in => (31,33) #"[]"
________________________bitwise_xor_expression__in => (31,33) #"[]"
__________________________bitwise_and_expression__in => (31,33) #"[]"
____________________________equality_expression__in => (31,33) #"[]"
______________________________relational_expression__in => (31,33) #"[]"
________________________________shift_expression => (31,33) #"[]"
__________________________________additive_expression => (31,33) #"[]"
____________________________________multiplicative_expression => (31,33) #"[]"
______________________________________unary_expression => (31,33) #"[]"
________________________________________postfix_expression => (31,33) #"[]"
__________________________________________left_hand_side_expression => (31,33) #"[]"
____________________________________________new_expression => (31,33) #"[]"
______________________________________________member_expression => (31,33) #"[]"
________________________________________________primary_expression => (31,33) #"[]"
__________________________________________________array_literal => (31,33) #"[]"
__________smart_semicolon => (33,35) #";\n"
________breakable_statement__return => (39,139) #"for (var i = 0; i < 10; i++) {\n        fs.push(function () {\n            return i;\n        });\n    }"
__________iteration_statement__return => (39,139) #"for (var i = 0; i < 10; i++) {\n        fs.push(function () {\n            return i;\n        });\n    }"
____________variable_declaration => (48,53) #"i = 0"
______________binding_identifier => (48,49) #"i"
______________initializer => (50,53) #"= 0"
________________assignment_expression => (52,53) #"0"
__________________conditional_expression => (52,53) #"0"
____________________logical_or_expression => (52,53) #"0"
______________________logical_and_expression => (52,53) #"0"
________________________bitwise_or_expression => (52,53) #"0"
__________________________bitwise_xor_expression => (52,53) #"0"
____________________________bitwise_and_expression => (52,53) #"0"
______________________________equality_expression => (52,53) #"0"
________________________________relational_expression => (52,53) #"0"
__________________________________shift_expression => (52,53) #"0"
____________________________________additive_expression => (52,53) #"0"
______________________________________multiplicative_expression => (52,53) #"0"
________________________________________unary_expression => (52,53) #"0"
__________________________________________postfix_expression => (52,53) #"0"
____________________________________________left_hand_side_expression => (52,53) #"0"
______________________________________________new_expression => (52,53) #"0"
________________________________________________member_expression => (52,53) #"0"
__________________________________________________primary_expression => (52,53) #"0"
____________________________________________________literal => (52,53) #"0"
______________________________________________________numeric_literal => (52,53) #"0"
________________________________________________________decimal_literal => (52,53) #"0"
__________________________________________________________decimal_integer_literal => (52,53) #"0"
____________expression__in => (55,61) #"i < 10"
______________assignment_expression__in => (55,61) #"i < 10"
________________conditional_expression__in => (55,61) #"i < 10"
__________________logical_or_expression__in => (55,61) #"i < 10"
____________________logical_and_expression__in => (55,61) #"i < 10"
______________________bitwise_or_expression__in => (55,61) #"i < 10"
________________________bitwise_xor_expression__in => (55,61) #"i < 10"
__________________________bitwise_and_expression__in => (55,61) #"i < 10"
____________________________equality_expression__in => (55,61) #"i < 10"
______________________________relational_expression__in => (55,61) #"i < 10"
________________________________shift_expression => (55,57) #"i "
__________________________________additive_expression => (55,57) #"i "
____________________________________multiplicative_expression => (55,57) #"i "
______________________________________unary_expression => (55,57) #"i "
________________________________________postfix_expression => (55,57) #"i "
__________________________________________left_hand_side_expression => (55,57) #"i "
____________________________________________new_expression => (55,57) #"i "
______________________________________________member_expression => (55,57) #"i "
________________________________________________primary_expression => (55,56) #"i"
__________________________________________________identifier_reference => (55,56) #"i"
________________________________shift_expression => (59,61) #"10"
__________________________________additive_expression => (59,61) #"10"
____________________________________multiplicative_expression => (59,61) #"10"
______________________________________unary_expression => (59,61) #"10"
________________________________________postfix_expression => (59,61) #"10"
__________________________________________left_hand_side_expression => (59,61) #"10"
____________________________________________new_expression => (59,61) #"10"
______________________________________________member_expression => (59,61) #"10"
________________________________________________primary_expression => (59,61) #"10"
__________________________________________________literal => (59,61) #"10"
____________________________________________________numeric_literal => (59,61) #"10"
______________________________________________________decimal_literal => (59,61) #"10"
________________________________________________________decimal_integer_literal => (59,61) #"10"
____________expression__in => (63,66) #"i++"
______________assignment_expression__in => (63,66) #"i++"
________________conditional_expression__in => (63,66) #"i++"
__________________logical_or_expression__in => (63,66) #"i++"
____________________logical_and_expression__in => (63,66) #"i++"
______________________bitwise_or_expression__in => (63,66) #"i++"
________________________bitwise_xor_expression__in => (63,66) #"i++"
__________________________bitwise_and_expression__in => (63,66) #"i++"
____________________________equality_expression__in => (63,66) #"i++"
______________________________relational_expression__in => (63,66) #"i++"
________________________________shift_expression => (63,66) #"i++"
__________________________________additive_expression => (63,66) #"i++"
____________________________________multiplicative_expression => (63,66) #"i++"
______________________________________unary_expression => (63,66) #"i++"
________________________________________postfix_expression => (63,66) #"i++"
__________________________________________left_hand_side_expression => (63,64) #"i"
____________________________________________new_expression => (63,64) #"i"
______________________________________________member_expression => (63,64) #"i"
________________________________________________primary_expression => (63,64) #"i"
__________________________________________________identifier_reference => (63,64) #"i"
____________block_statement__return => (68,139) #"{\n        fs.push(function () {\n            return i;\n        });\n    }"
______________block__return => (68,139) #"{\n        fs.push(function () {\n            return i;\n        });\n    }"
________________expression_statement => (78,134) #"fs.push(function () {\n            return i;\n        });\n"
__________________expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
____________________assignment_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
______________________conditional_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
________________________logical_or_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
__________________________logical_and_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
____________________________bitwise_or_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
______________________________bitwise_xor_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
________________________________bitwise_and_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
__________________________________equality_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
____________________________________relational_expression__in => (78,132) #"fs.push(function () {\n            return i;\n        })"
______________________________________shift_expression => (78,132) #"fs.push(function () {\n            return i;\n        })"
________________________________________additive_expression => (78,132) #"fs.push(function () {\n            return i;\n        })"
__________________________________________multiplicative_expression => (78,132) #"fs.push(function () {\n            return i;\n        })"
____________________________________________unary_expression => (78,132) #"fs.push(function () {\n            return i;\n        })"
______________________________________________postfix_expression => (78,132) #"fs.push(function () {\n            return i;\n        })"
________________________________________________left_hand_side_expression => (78,132) #"fs.push(function () {\n            return i;\n        })"
__________________________________________________call_expression => (78,132) #"fs.push(function () {\n            return i;\n        })"
____________________________________________________member_expression => (78,85) #"fs.push"
______________________________________________________primary_expression => (78,80) #"fs"
________________________________________________________identifier_reference => (78,80) #"fs"
______________________________________________________identifier_name => (81,85) #"push"
____________________________________________________arguments => (85,132) #"(function () {\n            return i;\n        })"
______________________________________________________argument_list => (86,131) #"function () {\n            return i;\n        }"
________________________________________________________assignment_expression__in => (86,131) #"function () {\n            return i;\n        }"
__________________________________________________________conditional_expression__in => (86,131) #"function () {\n            return i;\n        }"
____________________________________________________________logical_or_expression__in => (86,131) #"function () {\n            return i;\n        }"
______________________________________________________________logical_and_expression__in => (86,131) #"function () {\n            return i;\n        }"
________________________________________________________________bitwise_or_expression__in => (86,131) #"function () {\n            return i;\n        }"
__________________________________________________________________bitwise_xor_expression__in => (86,131) #"function () {\n            return i;\n        }"
____________________________________________________________________bitwise_and_expression__in => (86,131) #"function () {\n            return i;\n        }"
______________________________________________________________________equality_expression__in => (86,131) #"function () {\n            return i;\n        }"
________________________________________________________________________relational_expression__in => (86,131) #"function () {\n            return i;\n        }"
__________________________________________________________________________shift_expression => (86,131) #"function () {\n            return i;\n        }"
____________________________________________________________________________additive_expression => (86,131) #"function () {\n            return i;\n        }"
______________________________________________________________________________multiplicative_expression => (86,131) #"function () {\n            return i;\n        }"
________________________________________________________________________________unary_expression => (86,131) #"function () {\n            return i;\n        }"
__________________________________________________________________________________postfix_expression => (86,131) #"function () {\n            return i;\n        }"
____________________________________________________________________________________left_hand_side_expression => (86,131) #"function () {\n            return i;\n        }"
______________________________________________________________________________________new_expression => (86,131) #"function () {\n            return i;\n        }"
________________________________________________________________________________________member_expression => (86,131) #"function () {\n            return i;\n        }"
__________________________________________________________________________________________primary_expression => (86,131) #"function () {\n            return i;\n        }"
____________________________________________________________________________________________function_expression => (86,131) #"function () {\n            return i;\n        }"
______________________________________________________________________________________________formal_parameters => (96,96) #""
______________________________________________________________________________________________function_body => (112,130) #"return i;\n        "
________________________________________________________________________________________________return_statement => (112,122) #"return i;\n"
__________________________________________________________________________________________________expression__in => (119,120) #"i"
____________________________________________________________________________________________________assignment_expression__in => (119,120) #"i"
______________________________________________________________________________________________________conditional_expression__in => (119,120) #"i"
________________________________________________________________________________________________________logical_or_expression__in => (119,120) #"i"
__________________________________________________________________________________________________________logical_and_expression__in => (119,120) #"i"
____________________________________________________________________________________________________________bitwise_or_expression__in => (119,120) #"i"
______________________________________________________________________________________________________________bitwise_xor_expression__in => (119,120) #"i"
________________________________________________________________________________________________________________bitwise_and_expression__in => (119,120) #"i"
__________________________________________________________________________________________________________________equality_expression__in => (119,120) #"i"
____________________________________________________________________________________________________________________relational_expression__in => (119,120) #"i"
______________________________________________________________________________________________________________________shift_expression => (119,120) #"i"
________________________________________________________________________________________________________________________additive_expression => (119,120) #"i"
__________________________________________________________________________________________________________________________multiplicative_expression => (119,120) #"i"
____________________________________________________________________________________________________________________________unary_expression => (119,120) #"i"
______________________________________________________________________________________________________________________________postfix_expression => (119,120) #"i"
________________________________________________________________________________________________________________________________left_hand_side_expression => (119,120) #"i"
__________________________________________________________________________________________________________________________________new_expression => (119,120) #"i"
____________________________________________________________________________________________________________________________________member_expression => (119,120) #"i"
______________________________________________________________________________________________________________________________________primary_expression => (119,120) #"i"
________________________________________________________________________________________________________________________________________identifier_reference => (119,120) #"i"
__________________________________________________________________________________________________smart_semicolon => (120,122) #";\n"
__________________smart_semicolon => (132,134) #";\n"
________return_statement => (144,155) #"return fs;\n"
__________expression__in => (151,153) #"fs"
____________assignment_expression__in => (151,153) #"fs"
______________conditional_expression__in => (151,153) #"fs"
________________logical_or_expression__in => (151,153) #"fs"
__________________logical_and_expression__in => (151,153) #"fs"
____________________bitwise_or_expression__in => (151,153) #"fs"
______________________bitwise_xor_expression__in => (151,153) #"fs"
________________________bitwise_and_expression__in => (151,153) #"fs"
__________________________equality_expression__in => (151,153) #"fs"
____________________________relational_expression__in => (151,153) #"fs"
______________________________shift_expression => (151,153) #"fs"
________________________________additive_expression => (151,153) #"fs"
__________________________________multiplicative_expression => (151,153) #"fs"
____________________________________unary_expression => (151,153) #"fs"
______________________________________postfix_expression => (151,153) #"fs"
________________________________________left_hand_side_expression => (151,153) #"fs"
__________________________________________new_expression => (151,153) #"fs"
____________________________________________member_expression => (151,153) #"fs"
______________________________________________primary_expression => (151,153) #"fs"
________________________________________________identifier_reference => (151,153) #"fs"
__________smart_semicolon => (153,155) #";\n"
variable_statement => (158,174) #"var gs = gen();\n"
__variable_declaration__in => (162,172) #"gs = gen()"
____binding_identifier => (162,164) #"gs"
____initializer__in => (165,172) #"= gen()"
______assignment_expression__in => (167,172) #"gen()"
________conditional_expression__in => (167,172) #"gen()"
__________logical_or_expression__in => (167,172) #"gen()"
____________logical_and_expression__in => (167,172) #"gen()"
______________bitwise_or_expression__in => (167,172) #"gen()"
________________bitwise_xor_expression__in => (167,172) #"gen()"
__________________bitwise_and_expression__in => (167,172) #"gen()"
____________________equality_expression__in => (167,172) #"gen()"
______________________relational_expression__in => (167,172) #"gen()"
________________________shift_expression => (167,172) #"gen()"
__________________________additive_expression => (167,172) #"gen()"
____________________________multiplicative_expression => (167,172) #"gen()"
______________________________unary_expression => (167,172) #"gen()"
________________________________postfix_expression => (167,172) #"gen()"
__________________________________left_hand_side_expression => (167,172) #"gen()"
____________________________________call_expression => (167,172) #"gen()"
______________________________________member_expression => (167,170) #"gen"
________________________________________primary_expression => (167,170) #"gen"
__________________________________________identifier_reference => (167,170) #"gen"
______________________________________arguments => (170,172) #"()"
__smart_semicolon => (172,174) #";\n"
expression_statement => (175,197) #"console.log(gs[0]());\n"
__expression__in => (175,195) #"console.log(gs[0]())"
____assignment_expression__in => (175,195) #"console.log(gs[0]())"
______conditional_expression__in => (175,195) #"console.log(gs[0]())"
________logical_or_expression__in => (175,195) #"console.log(gs[0]())"
__________logical_and_expression__in => (175,195) #"console.log(gs[0]())"
____________bitwise_or_expression__in => (175,195) #"console.log(gs[0]())"
______________bitwise_xor_expression__in => (175,195) #"console.log(gs[0]())"
________________bitwise_and_expression__in => (175,195) #"console.log(gs[0]())"
__________________equality_expression__in => (175,195) #"console.log(gs[0]())"
____________________relational_expression__in => (175,195) #"console.log(gs[0]())"
______________________shift_expression => (175,195) #"console.log(gs[0]())"
________________________additive_expression => (175,195) #"console.log(gs[0]())"
__________________________multiplicative_expression => (175,195) #"console.log(gs[0]())"
____________________________unary_expression => (175,195) #"console.log(gs[0]())"
______________________________postfix_expression => (175,195) #"console.log(gs[0]())"
________________________________left_hand_side_expression => (175,195) #"console.log(gs[0]())"
__________________________________call_expression => (175,195) #"console.log(gs[0]())"
____________________________________member_expression => (175,186) #"console.log"
______________________________________primary_expression => (175,182) #"console"
________________________________________identifier_reference => (175,182) #"console"
______________________________________identifier_name => (183,186) #"log"
____________________________________arguments => (186,195) #"(gs[0]())"
______________________________________argument_list => (187,194) #"gs[0]()"
________________________________________assignment_expression__in => (187,194) #"gs[0]()"
__________________________________________conditional_expression__in => (187,194) #"gs[0]()"
____________________________________________logical_or_expression__in => (187,194) #"gs[0]()"
______________________________________________logical_and_expression__in => (187,194) #"gs[0]()"
________________________________________________bitwise_or_expression__in => (187,194) #"gs[0]()"
__________________________________________________bitwise_xor_expression__in => (187,194) #"gs[0]()"
____________________________________________________bitwise_and_expression__in => (187,194) #"gs[0]()"
______________________________________________________equality_expression__in => (187,194) #"gs[0]()"
________________________________________________________relational_expression__in => (187,194) #"gs[0]()"
__________________________________________________________shift_expression => (187,194) #"gs[0]()"
____________________________________________________________additive_expression => (187,194) #"gs[0]()"
______________________________________________________________multiplicative_expression => (187,194) #"gs[0]()"
________________________________________________________________unary_expression => (187,194) #"gs[0]()"
__________________________________________________________________postfix_expression => (187,194) #"gs[0]()"
____________________________________________________________________left_hand_side_expression => (187,194) #"gs[0]()"
______________________________________________________________________call_expression => (187,194) #"gs[0]()"
________________________________________________________________________member_expression => (187,192) #"gs[0]"
__________________________________________________________________________primary_expression => (187,189) #"gs"
____________________________________________________________________________identifier_reference => (187,189) #"gs"
__________________________________________________________________________expression__in => (190,191) #"0"
____________________________________________________________________________assignment_expression__in => (190,191) #"0"
______________________________________________________________________________conditional_expression__in => (190,191) #"0"
________________________________________________________________________________logical_or_expression__in => (190,191) #"0"
__________________________________________________________________________________logical_and_expression__in => (190,191) #"0"
____________________________________________________________________________________bitwise_or_expression__in => (190,191) #"0"
______________________________________________________________________________________bitwise_xor_expression__in => (190,191) #"0"
________________________________________________________________________________________bitwise_and_expression__in => (190,191) #"0"
__________________________________________________________________________________________equality_expression__in => (190,191) #"0"
____________________________________________________________________________________________relational_expression__in => (190,191) #"0"
______________________________________________________________________________________________shift_expression => (190,191) #"0"
________________________________________________________________________________________________additive_expression => (190,191) #"0"
__________________________________________________________________________________________________multiplicative_expression => (190,191) #"0"
____________________________________________________________________________________________________unary_expression => (190,191) #"0"
______________________________________________________________________________________________________postfix_expression => (190,191) #"0"
________________________________________________________________________________________________________left_hand_side_expression => (190,191) #"0"
__________________________________________________________________________________________________________new_expression => (190,191) #"0"
____________________________________________________________________________________________________________member_expression => (190,191) #"0"
______________________________________________________________________________________________________________primary_expression => (190,191) #"0"
________________________________________________________________________________________________________________literal => (190,191) #"0"
__________________________________________________________________________________________________________________numeric_literal => (190,191) #"0"
____________________________________________________________________________________________________________________decimal_literal => (190,191) #"0"
______________________________________________________________________________________________________________________decimal_integer_literal => (190,191) #"0"
________________________________________________________________________arguments => (192,194) #"()"
__smart_semicolon => (195,197) #";\n"
expression_statement => (197,219) #"console.log(gs[1]());\n"
__expression__in => (197,217) #"console.log(gs[1]())"
____assignment_expression__in => (197,217) #"console.log(gs[1]())"
______conditional_expression__in => (197,217) #"console.log(gs[1]())"
________logical_or_expression__in => (197,217) #"console.log(gs[1]())"
__________logical_and_expression__in => (197,217) #"console.log(gs[1]())"
____________bitwise_or_expression__in => (197,217) #"console.log(gs[1]())"
______________bitwise_xor_expression__in => (197,217) #"console.log(gs[1]())"
________________bitwise_and_expression__in => (197,217) #"console.log(gs[1]())"
__________________equality_expression__in => (197,217) #"console.log(gs[1]())"
____________________relational_expression__in => (197,217) #"console.log(gs[1]())"
______________________shift_expression => (197,217) #"console.log(gs[1]())"
________________________additive_expression => (197,217) #"console.log(gs[1]())"
__________________________multiplicative_expression => (197,217) #"console.log(gs[1]())"
____________________________unary_expression => (197,217) #"console.log(gs[1]())"
______________________________postfix_expression => (197,217) #"console.log(gs[1]())"
________________________________left_hand_side_expression => (197,217) #"console.log(gs[1]())"
__________________________________call_expression => (197,217) #"console.log(gs[1]())"
____________________________________member_expression => (197,208) #"console.log"
______________________________________primary_expression => (197,204) #"console"
________________________________________identifier_reference => (197,204) #"console"
______________________________________identifier_name => (205,208) #"log"
____________________________________arguments => (208,217) #"(gs[1]())"
______________________________________argument_list => (209,216) #"gs[1]()"
________________________________________assignment_expression__in => (209,216) #"gs[1]()"
__________________________________________conditional_expression__in => (209,216) #"gs[1]()"
____________________________________________logical_or_expression__in => (209,216) #"gs[1]()"
______________________________________________logical_and_expression__in => (209,216) #"gs[1]()"
________________________________________________bitwise_or_expression__in => (209,216) #"gs[1]()"
__________________________________________________bitwise_xor_expression__in => (209,216) #"gs[1]()"
____________________________________________________bitwise_and_expression__in => (209,216) #"gs[1]()"
______________________________________________________equality_expression__in => (209,216) #"gs[1]()"
________________________________________________________relational_expression__in => (209,216) #"gs[1]()"
__________________________________________________________shift_expression => (209,216) #"gs[1]()"
____________________________________________________________additive_expression => (209,216) #"gs[1]()"
______________________________________________________________multiplicative_expression => (209,216) #"gs[1]()"
________________________________________________________________unary_expression => (209,216) #"gs[1]()"
__________________________________________________________________postfix_expression => (209,216) #"gs[1]()"
____________________________________________________________________left_hand_side_expression => (209,216) #"gs[1]()"
______________________________________________________________________call_expression => (209,216) #"gs[1]()"
________________________________________________________________________member_expression => (209,214) #"gs[1]"
__________________________________________________________________________primary_expression => (209,211) #"gs"
____________________________________________________________________________identifier_reference => (209,211) #"gs"
__________________________________________________________________________expression__in => (212,213) #"1"
____________________________________________________________________________assignment_expression__in => (212,213) #"1"
______________________________________________________________________________conditional_expression__in => (212,213) #"1"
________________________________________________________________________________logical_or_expression__in => (212,213) #"1"
__________________________________________________________________________________logical_and_expression__in => (212,213) #"1"
____________________________________________________________________________________bitwise_or_expression__in => (212,213) #"1"
______________________________________________________________________________________bitwise_xor_expression__in => (212,213) #"1"
________________________________________________________________________________________bitwise_and_expression__in => (212,213) #"1"
__________________________________________________________________________________________equality_expression__in => (212,213) #"1"
____________________________________________________________________________________________relational_expression__in => (212,213) #"1"
______________________________________________________________________________________________shift_expression => (212,213) #"1"
________________________________________________________________________________________________additive_expression => (212,213) #"1"
__________________________________________________________________________________________________multiplicative_expression => (212,213) #"1"
____________________________________________________________________________________________________unary_expression => (212,213) #"1"
______________________________________________________________________________________________________postfix_expression => (212,213) #"1"
________________________________________________________________________________________________________left_hand_side_expression => (212,213) #"1"
__________________________________________________________________________________________________________new_expression => (212,213) #"1"
____________________________________________________________________________________________________________member_expression => (212,213) #"1"
______________________________________________________________________________________________________________primary_expression => (212,213) #"1"
________________________________________________________________________________________________________________literal => (212,213) #"1"
__________________________________________________________________________________________________________________numeric_literal => (212,213) #"1"
____________________________________________________________________________________________________________________decimal_literal => (212,213) #"1"
______________________________________________________________________________________________________________________decimal_integer_literal => (212,213) #"1"
________________________________________________________________________arguments => (214,216) #"()"
__smart_semicolon => (217,219) #";\n"
expression_statement => (219,241) #"console.log(gs[8]());\n"
__expression__in => (219,239) #"console.log(gs[8]())"
____assignment_expression__in => (219,239) #"console.log(gs[8]())"
______conditional_expression__in => (219,239) #"console.log(gs[8]())"
________logical_or_expression__in => (219,239) #"console.log(gs[8]())"
__________logical_and_expression__in => (219,239) #"console.log(gs[8]())"
____________bitwise_or_expression__in => (219,239) #"console.log(gs[8]())"
______________bitwise_xor_expression__in => (219,239) #"console.log(gs[8]())"
________________bitwise_and_expression__in => (219,239) #"console.log(gs[8]())"
__________________equality_expression__in => (219,239) #"console.log(gs[8]())"
____________________relational_expression__in => (219,239) #"console.log(gs[8]())"
______________________shift_expression => (219,239) #"console.log(gs[8]())"
________________________additive_expression => (219,239) #"console.log(gs[8]())"
__________________________multiplicative_expression => (219,239) #"console.log(gs[8]())"
____________________________unary_expression => (219,239) #"console.log(gs[8]())"
______________________________postfix_expression => (219,239) #"console.log(gs[8]())"
________________________________left_hand_side_expression => (219,239) #"console.log(gs[8]())"
__________________________________call_expression => (219,239) #"console.log(gs[8]())"
____________________________________member_expression => (219,230) #"console.log"
______________________________________primary_expression => (219,226) #"console"
________________________________________identifier_reference => (219,226) #"console"
______________________________________identifier_name => (227,230) #"log"
____________________________________arguments => (230,239) #"(gs[8]())"
______________________________________argument_list => (231,238) #"gs[8]()"
________________________________________assignment_expression__in => (231,238) #"gs[8]()"
__________________________________________conditional_expression__in => (231,238) #"gs[8]()"
____________________________________________logical_or_expression__in => (231,238) #"gs[8]()"
______________________________________________logical_and_expression__in => (231,238) #"gs[8]()"
________________________________________________bitwise_or_expression__in => (231,238) #"gs[8]()"
__________________________________________________bitwise_xor_expression__in => (231,238) #"gs[8]()"
____________________________________________________bitwise_and_expression__in => (231,238) #"gs[8]()"
______________________________________________________equality_expression__in => (231,238) #"gs[8]()"
________________________________________________________relational_expression__in => (231,238) #"gs[8]()"
__________________________________________________________shift_expression => (231,238) #"gs[8]()"
____________________________________________________________additive_expression => (231,238) #"gs[8]()"
______________________________________________________________multiplicative_expression => (231,238) #"gs[8]()"
________________________________________________________________unary_expression => (231,238) #"gs[8]()"
__________________________________________________________________postfix_expression => (231,238) #"gs[8]()"
____________________________________________________________________left_hand_side_expression => (231,238) #"gs[8]()"
______________________________________________________________________call_expression => (231,238) #"gs[8]()"
________________________________________________________________________member_expression => (231,236) #"gs[8]"
__________________________________________________________________________primary_expression => (231,233) #"gs"
____________________________________________________________________________identifier_reference => (231,233) #"gs"
__________________________________________________________________________expression__in => (234,235) #"8"
____________________________________________________________________________assignment_expression__in => (234,235) #"8"
______________________________________________________________________________conditional_expression__in => (234,235) #"8"
________________________________________________________________________________logical_or_expression__in => (234,235) #"8"
__________________________________________________________________________________logical_and_expression__in => (234,235) #"8"
____________________________________________________________________________________bitwise_or_expression__in => (234,235) #"8"
______________________________________________________________________________________bitwise_xor_expression__in => (234,235) #"8"
________________________________________________________________________________________bitwise_and_expression__in => (234,235) #"8"
__________________________________________________________________________________________equality_expression__in => (234,235) #"8"
____________________________________________________________________________________________relational_expression__in => (234,235) #"8"
______________________________________________________________________________________________shift_expression => (234,235) #"8"
________________________________________________________________________________________________additive_expression => (234,235) #"8"
__________________________________________________________________________________________________multiplicative_expression => (234,235) #"8"
____________________________________________________________________________________________________unary_expression => (234,235) #"8"
______________________________________________________________________________________________________postfix_expression => (234,235) #"8"
________________________________________________________________________________________________________left_hand_side_expression => (234,235) #"8"
__________________________________________________________________________________________________________new_expression => (234,235) #"8"
____________________________________________________________________________________________________________member_expression => (234,235) #"8"
______________________________________________________________________________________________________________primary_expression => (234,235) #"8"
________________________________________________________________________________________________________________literal => (234,235) #"8"
__________________________________________________________________________________________________________________numeric_literal => (234,235) #"8"
____________________________________________________________________________________________________________________decimal_literal => (234,235) #"8"
______________________________________________________________________________________________________________________decimal_integer_literal => (234,235) #"8"
________________________________________________________________________arguments => (236,238) #"()"
__smart_semicolon => (239,241) #";\n"
expression_statement => (241,263) #"console.log(gs[9]());\n"
__expression__in => (241,261) #"console.log(gs[9]())"
____assignment_expression__in => (241,261) #"console.log(gs[9]())"
______conditional_expression__in => (241,261) #"console.log(gs[9]())"
________logical_or_expression__in => (241,261) #"console.log(gs[9]())"
__________logical_and_expression__in => (241,261) #"console.log(gs[9]())"
____________bitwise_or_expression__in => (241,261) #"console.log(gs[9]())"
______________bitwise_xor_expression__in => (241,261) #"console.log(gs[9]())"
________________bitwise_and_expression__in => (241,261) #"console.log(gs[9]())"
__________________equality_expression__in => (241,261) #"console.log(gs[9]())"
____________________relational_expression__in => (241,261) #"console.log(gs[9]())"
______________________shift_expression => (241,261) #"console.log(gs[9]())"
________________________additive_expression => (241,261) #"console.log(gs[9]())"
__________________________multiplicative_expression => (241,261) #"console.log(gs[9]())"
____________________________unary_expression => (241,261) #"console.log(gs[9]())"
______________________________postfix_expression => (241,261) #"console.log(gs[9]())"
________________________________left_hand_side_expression => (241,261) #"console.log(gs[9]())"
__________________________________call_expression => (241,261) #"console.log(gs[9]())"
____________________________________member_expression => (241,252) #"console.log"
______________________________________primary_expression => (241,248) #"console"
________________________________________identifier_reference => (241,248) #"console"
______________________________________identifier_name => (249,252) #"log"
____________________________________arguments => (252,261) #"(gs[9]())"
______________________________________argument_list => (253,260) #"gs[9]()"
________________________________________assignment_expression__in => (253,260) #"gs[9]()"
__________________________________________conditional_expression__in => (253,260) #"gs[9]()"
____________________________________________logical_or_expression__in => (253,260) #"gs[9]()"
______________________________________________logical_and_expression__in => (253,260) #"gs[9]()"
________________________________________________bitwise_or_expression__in => (253,260) #"gs[9]()"
__________________________________________________bitwise_xor_expression__in => (253,260) #"gs[9]()"
____________________________________________________bitwise_and_expression__in => (253,260) #"gs[9]()"
______________________________________________________equality_expression__in => (253,260) #"gs[9]()"
________________________________________________________relational_expression__in => (253,260) #"gs[9]()"
__________________________________________________________shift_expression => (253,260) #"gs[9]()"
____________________________________________________________additive_expression => (253,260) #"gs[9]()"
______________________________________________________________multiplicative_expression => (253,260) #"gs[9]()"
________________________________________________________________unary_expression => (253,260) #"gs[9]()"
__________________________________________________________________postfix_expression => (253,260) #"gs[9]()"
____________________________________________________________________left_hand_side_expression => (253,260) #"gs[9]()"
______________________________________________________________________call_expression => (253,260) #"gs[9]()"
________________________________________________________________________member_expression => (253,258) #"gs[9]"
__________________________________________________________________________primary_expression => (253,255) #"gs"
____________________________________________________________________________identifier_reference => (253,255) #"gs"
__________________________________________________________________________expression__in => (256,257) #"9"
____________________________________________________________________________assignment_expression__in => (256,257) #"9"
______________________________________________________________________________conditional_expression__in => (256,257) #"9"
________________________________________________________________________________logical_or_expression__in => (256,257) #"9"
__________________________________________________________________________________logical_and_expression__in => (256,257) #"9"
____________________________________________________________________________________bitwise_or_expression__in => (256,257) #"9"
______________________________________________________________________________________bitwise_xor_expression__in => (256,257) #"9"
________________________________________________________________________________________bitwise_and_expression__in => (256,257) #"9"
__________________________________________________________________________________________equality_expression__in => (256,257) #"9"
____________________________________________________________________________________________relational_expression__in => (256,257) #"9"
______________________________________________________________________________________________shift_expression => (256,257) #"9"
________________________________________________________________________________________________additive_expression => (256,257) #"9"
__________________________________________________________________________________________________multiplicative_expression => (256,257) #"9"
____________________________________________________________________________________________________unary_expression => (256,257) #"9"
______________________________________________________________________________________________________postfix_expression => (256,257) #"9"
________________________________________________________________________________________________________left_hand_side_expression => (256,257) #"9"
__________________________________________________________________________________________________________new_expression => (256,257) #"9"
____________________________________________________________________________________________________________member_expression => (256,257) #"9"
______________________________________________________________________________________________________________primary_expression => (256,257) #"9"
________________________________________________________________________________________________________________literal => (256,257) #"9"
__________________________________________________________________________________________________________________numeric_literal => (256,257) #"9"
____________________________________________________________________________________________________________________decimal_literal => (256,257) #"9"
______________________________________________________________________________________________________________________decimal_integer_literal => (256,257) #"9"
________________________________________________________________________arguments => (258,260) #"()"
__smart_semicolon => (261,263) #";\n"
