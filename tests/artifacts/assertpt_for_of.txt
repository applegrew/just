declaration => (189,431) #"let fibonacci = {\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}\n"
  lexical_declaration__in => (189,431) #"let fibonacci = {\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}\n"
    let_or_const => (189,192) #"let"
    binding_list__in => (193,430) #"fibonacci = {\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
      lexical_binding__in => (193,430) #"fibonacci = {\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
        binding_identifier => (193,202) #"fibonacci"
        initializer__in => (203,430) #"= {\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
          assignment_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
            conditional_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
              logical_or_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                logical_and_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                  bitwise_or_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                    bitwise_xor_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                      bitwise_and_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                        equality_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                          relational_expression__in => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                            shift_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                              additive_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                multiplicative_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                  unary_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                    postfix_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                      left_hand_side_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                        new_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                          member_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                            primary_expression => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                              object_literal => (205,430) #"{\n    [Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }\n}"
                                                property_definition_list => (211,428) #"[Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }"
                                                  property_definition => (211,428) #"[Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }"
                                                    method_definition => (211,428) #"[Symbol.iterator]() {\n        let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n    }"
                                                      property_name => (211,228) #"[Symbol.iterator]"
                                                        computed_property_name => (211,228) #"[Symbol.iterator]"
                                                          assignment_expression__in => (212,227) #"Symbol.iterator"
                                                            conditional_expression__in => (212,227) #"Symbol.iterator"
                                                              logical_or_expression__in => (212,227) #"Symbol.iterator"
                                                                logical_and_expression__in => (212,227) #"Symbol.iterator"
                                                                  bitwise_or_expression__in => (212,227) #"Symbol.iterator"
                                                                    bitwise_xor_expression__in => (212,227) #"Symbol.iterator"
                                                                      bitwise_and_expression__in => (212,227) #"Symbol.iterator"
                                                                        equality_expression__in => (212,227) #"Symbol.iterator"
                                                                          relational_expression__in => (212,227) #"Symbol.iterator"
                                                                            shift_expression => (212,227) #"Symbol.iterator"
                                                                              additive_expression => (212,227) #"Symbol.iterator"
                                                                                multiplicative_expression => (212,227) #"Symbol.iterator"
                                                                                  unary_expression => (212,227) #"Symbol.iterator"
                                                                                    postfix_expression => (212,227) #"Symbol.iterator"
                                                                                      left_hand_side_expression => (212,227) #"Symbol.iterator"
                                                                                        new_expression => (212,227) #"Symbol.iterator"
                                                                                          member_expression => (212,227) #"Symbol.iterator"
                                                                                            primary_expression => (212,218) #"Symbol"
                                                                                              identifier_reference => (212,218) #"Symbol"
                                                                                            identifier_name => (219,227) #"iterator"
                                                      formal_parameters => (229,229) #""
                                                      function_body => (241,423) #"let pre = 0, cur = 1;\n        return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n"
                                                        declaration => (241,263) #"let pre = 0, cur = 1;\n"
                                                          lexical_declaration__in => (241,263) #"let pre = 0, cur = 1;\n"
                                                            let_or_const => (241,244) #"let"
                                                            binding_list__in => (245,261) #"pre = 0, cur = 1"
                                                              lexical_binding__in => (245,252) #"pre = 0"
                                                                binding_identifier => (245,248) #"pre"
                                                                initializer__in => (249,252) #"= 0"
                                                                  assignment_expression__in => (251,252) #"0"
                                                                    conditional_expression__in => (251,252) #"0"
                                                                      logical_or_expression__in => (251,252) #"0"
                                                                        logical_and_expression__in => (251,252) #"0"
                                                                          bitwise_or_expression__in => (251,252) #"0"
                                                                            bitwise_xor_expression__in => (251,252) #"0"
                                                                              bitwise_and_expression__in => (251,252) #"0"
                                                                                equality_expression__in => (251,252) #"0"
                                                                                  relational_expression__in => (251,252) #"0"
                                                                                    shift_expression => (251,252) #"0"
                                                                                      additive_expression => (251,252) #"0"
                                                                                        multiplicative_expression => (251,252) #"0"
                                                                                          unary_expression => (251,252) #"0"
                                                                                            postfix_expression => (251,252) #"0"
                                                                                              left_hand_side_expression => (251,252) #"0"
                                                                                                new_expression => (251,252) #"0"
                                                                                                  member_expression => (251,252) #"0"
                                                                                                    primary_expression => (251,252) #"0"
                                                                                                      literal => (251,252) #"0"
                                                                                                        numeric_literal => (251,252) #"0"
                                                                                                          decimal_literal => (251,252) #"0"
                                                                                                            decimal_integer_literal => (251,252) #"0"
                                                              lexical_binding__in => (254,261) #"cur = 1"
                                                                binding_identifier => (254,257) #"cur"
                                                                initializer__in => (258,261) #"= 1"
                                                                  assignment_expression__in => (260,261) #"1"
                                                                    conditional_expression__in => (260,261) #"1"
                                                                      logical_or_expression__in => (260,261) #"1"
                                                                        logical_and_expression__in => (260,261) #"1"
                                                                          bitwise_or_expression__in => (260,261) #"1"
                                                                            bitwise_xor_expression__in => (260,261) #"1"
                                                                              bitwise_and_expression__in => (260,261) #"1"
                                                                                equality_expression__in => (260,261) #"1"
                                                                                  relational_expression__in => (260,261) #"1"
                                                                                    shift_expression => (260,261) #"1"
                                                                                      additive_expression => (260,261) #"1"
                                                                                        multiplicative_expression => (260,261) #"1"
                                                                                          unary_expression => (260,261) #"1"
                                                                                            postfix_expression => (260,261) #"1"
                                                                                              left_hand_side_expression => (260,261) #"1"
                                                                                                new_expression => (260,261) #"1"
                                                                                                  member_expression => (260,261) #"1"
                                                                                                    primary_expression => (260,261) #"1"
                                                                                                      literal => (260,261) #"1"
                                                                                                        numeric_literal => (260,261) #"1"
                                                                                                          decimal_literal => (260,261) #"1"
                                                                                                            decimal_integer_literal => (260,261) #"1"
                                                            smart_semicolon => (261,263) #";\n"
                                                        statement__return => (271,423) #"return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n"
                                                          return_statement => (271,423) #"return {\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }\n"
                                                            expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                              assignment_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                conditional_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                  logical_or_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                    logical_and_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                      bitwise_or_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                        bitwise_xor_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                          bitwise_and_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                            equality_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                              relational_expression__in => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                shift_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                  additive_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                    multiplicative_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                      unary_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                        postfix_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                          left_hand_side_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                            new_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                              member_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                                primary_expression => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                                  object_literal => (278,422) #"{\n            next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }\n        }"
                                                                                                    property_definition_list => (292,412) #"next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }"
                                                                                                      property_definition => (292,412) #"next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }"
                                                                                                        method_definition => (292,412) #"next() {\n                [pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n            }"
                                                                                                          property_name => (292,296) #"next"
                                                                                                            literal_property_name => (292,296) #"next"
                                                                                                              identifier_name => (292,296) #"next"
                                                                                                          formal_parameters => (297,297) #""
                                                                                                          function_body => (317,399) #"[pre, cur] = [cur, pre + cur];\n                return { done: false, value: cur }\n"
                                                                                                            statement__return => (317,348) #"[pre, cur] = [cur, pre + cur];\n"
                                                                                                              expression_statement => (317,348) #"[pre, cur] = [cur, pre + cur];\n"
                                                                                                                expression__in => (317,346) #"[pre, cur] = [cur, pre + cur]"
                                                                                                                  assignment_expression__in => (317,346) #"[pre, cur] = [cur, pre + cur]"
                                                                                                                    left_hand_side_expression => (317,328) #"[pre, cur] "
                                                                                                                      new_expression => (317,328) #"[pre, cur] "
                                                                                                                        member_expression => (317,328) #"[pre, cur] "
                                                                                                                          primary_expression => (317,327) #"[pre, cur]"
                                                                                                                            array_literal => (317,327) #"[pre, cur]"
                                                                                                                              assignment_expression__in => (318,321) #"pre"
                                                                                                                                conditional_expression__in => (318,321) #"pre"
                                                                                                                                  logical_or_expression__in => (318,321) #"pre"
                                                                                                                                    logical_and_expression__in => (318,321) #"pre"
                                                                                                                                      bitwise_or_expression__in => (318,321) #"pre"
                                                                                                                                        bitwise_xor_expression__in => (318,321) #"pre"
                                                                                                                                          bitwise_and_expression__in => (318,321) #"pre"
                                                                                                                                            equality_expression__in => (318,321) #"pre"
                                                                                                                                              relational_expression__in => (318,321) #"pre"
                                                                                                                                                shift_expression => (318,321) #"pre"
                                                                                                                                                  additive_expression => (318,321) #"pre"
                                                                                                                                                    multiplicative_expression => (318,321) #"pre"
                                                                                                                                                      unary_expression => (318,321) #"pre"
                                                                                                                                                        postfix_expression => (318,321) #"pre"
                                                                                                                                                          left_hand_side_expression => (318,321) #"pre"
                                                                                                                                                            new_expression => (318,321) #"pre"
                                                                                                                                                              member_expression => (318,321) #"pre"
                                                                                                                                                                primary_expression => (318,321) #"pre"
                                                                                                                                                                  identifier_reference => (318,321) #"pre"
                                                                                                                              assignment_expression__in => (323,326) #"cur"
                                                                                                                                conditional_expression__in => (323,326) #"cur"
                                                                                                                                  logical_or_expression__in => (323,326) #"cur"
                                                                                                                                    logical_and_expression__in => (323,326) #"cur"
                                                                                                                                      bitwise_or_expression__in => (323,326) #"cur"
                                                                                                                                        bitwise_xor_expression__in => (323,326) #"cur"
                                                                                                                                          bitwise_and_expression__in => (323,326) #"cur"
                                                                                                                                            equality_expression__in => (323,326) #"cur"
                                                                                                                                              relational_expression__in => (323,326) #"cur"
                                                                                                                                                shift_expression => (323,326) #"cur"
                                                                                                                                                  additive_expression => (323,326) #"cur"
                                                                                                                                                    multiplicative_expression => (323,326) #"cur"
                                                                                                                                                      unary_expression => (323,326) #"cur"
                                                                                                                                                        postfix_expression => (323,326) #"cur"
                                                                                                                                                          left_hand_side_expression => (323,326) #"cur"
                                                                                                                                                            new_expression => (323,326) #"cur"
                                                                                                                                                              member_expression => (323,326) #"cur"
                                                                                                                                                                primary_expression => (323,326) #"cur"
                                                                                                                                                                  identifier_reference => (323,326) #"cur"
                                                                                                                    assignment_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                      conditional_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                        logical_or_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                          logical_and_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                            bitwise_or_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                              bitwise_xor_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                                bitwise_and_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                                  equality_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                                    relational_expression__in => (330,346) #"[cur, pre + cur]"
                                                                                                                                      shift_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                        additive_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                          multiplicative_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                            unary_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                              postfix_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                                left_hand_side_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                                  new_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                                    member_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                                      primary_expression => (330,346) #"[cur, pre + cur]"
                                                                                                                                                        array_literal => (330,346) #"[cur, pre + cur]"
                                                                                                                                                          assignment_expression__in => (331,334) #"cur"
                                                                                                                                                            conditional_expression__in => (331,334) #"cur"
                                                                                                                                                              logical_or_expression__in => (331,334) #"cur"
                                                                                                                                                                logical_and_expression__in => (331,334) #"cur"
                                                                                                                                                                  bitwise_or_expression__in => (331,334) #"cur"
                                                                                                                                                                    bitwise_xor_expression__in => (331,334) #"cur"
                                                                                                                                                                      bitwise_and_expression__in => (331,334) #"cur"
                                                                                                                                                                        equality_expression__in => (331,334) #"cur"
                                                                                                                                                                          relational_expression__in => (331,334) #"cur"
                                                                                                                                                                            shift_expression => (331,334) #"cur"
                                                                                                                                                                              additive_expression => (331,334) #"cur"
                                                                                                                                                                                multiplicative_expression => (331,334) #"cur"
                                                                                                                                                                                  unary_expression => (331,334) #"cur"
                                                                                                                                                                                    postfix_expression => (331,334) #"cur"
                                                                                                                                                                                      left_hand_side_expression => (331,334) #"cur"
                                                                                                                                                                                        new_expression => (331,334) #"cur"
                                                                                                                                                                                          member_expression => (331,334) #"cur"
                                                                                                                                                                                            primary_expression => (331,334) #"cur"
                                                                                                                                                                                              identifier_reference => (331,334) #"cur"
                                                                                                                                                          assignment_expression__in => (336,345) #"pre + cur"
                                                                                                                                                            conditional_expression__in => (336,345) #"pre + cur"
                                                                                                                                                              logical_or_expression__in => (336,345) #"pre + cur"
                                                                                                                                                                logical_and_expression__in => (336,345) #"pre + cur"
                                                                                                                                                                  bitwise_or_expression__in => (336,345) #"pre + cur"
                                                                                                                                                                    bitwise_xor_expression__in => (336,345) #"pre + cur"
                                                                                                                                                                      bitwise_and_expression__in => (336,345) #"pre + cur"
                                                                                                                                                                        equality_expression__in => (336,345) #"pre + cur"
                                                                                                                                                                          relational_expression__in => (336,345) #"pre + cur"
                                                                                                                                                                            shift_expression => (336,345) #"pre + cur"
                                                                                                                                                                              additive_expression => (336,345) #"pre + cur"
                                                                                                                                                                                multiplicative_expression => (336,340) #"pre "
                                                                                                                                                                                  unary_expression => (336,340) #"pre "
                                                                                                                                                                                    postfix_expression => (336,340) #"pre "
                                                                                                                                                                                      left_hand_side_expression => (336,340) #"pre "
                                                                                                                                                                                        new_expression => (336,340) #"pre "
                                                                                                                                                                                          member_expression => (336,340) #"pre "
                                                                                                                                                                                            primary_expression => (336,339) #"pre"
                                                                                                                                                                                              identifier_reference => (336,339) #"pre"
                                                                                                                                                                                additive_operator => (340,341) #"+"
                                                                                                                                                                                multiplicative_expression => (342,345) #"cur"
                                                                                                                                                                                  unary_expression => (342,345) #"cur"
                                                                                                                                                                                    postfix_expression => (342,345) #"cur"
                                                                                                                                                                                      left_hand_side_expression => (342,345) #"cur"
                                                                                                                                                                                        new_expression => (342,345) #"cur"
                                                                                                                                                                                          member_expression => (342,345) #"cur"
                                                                                                                                                                                            primary_expression => (342,345) #"cur"
                                                                                                                                                                                              identifier_reference => (342,345) #"cur"
                                                                                                                smart_semicolon => (346,348) #";\n"
                                                                                                            statement__return => (364,399) #"return { done: false, value: cur }\n"
                                                                                                              return_statement => (364,399) #"return { done: false, value: cur }\n"
                                                                                                                expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                  assignment_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                    conditional_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                      logical_or_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                        logical_and_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                          bitwise_or_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                            bitwise_xor_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                              bitwise_and_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                                equality_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                                  relational_expression__in => (371,398) #"{ done: false, value: cur }"
                                                                                                                                    shift_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                      additive_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                        multiplicative_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                          unary_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                            postfix_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                              left_hand_side_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                                new_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                                  member_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                                    primary_expression => (371,398) #"{ done: false, value: cur }"
                                                                                                                                                      object_literal => (371,398) #"{ done: false, value: cur }"
                                                                                                                                                        property_definition_list => (373,397) #"done: false, value: cur "
                                                                                                                                                          property_definition => (373,384) #"done: false"
                                                                                                                                                            property_name => (373,377) #"done"
                                                                                                                                                              literal_property_name => (373,377) #"done"
                                                                                                                                                                identifier_name => (373,377) #"done"
                                                                                                                                                            assignment_expression__in => (379,384) #"false"
                                                                                                                                                              conditional_expression__in => (379,384) #"false"
                                                                                                                                                                logical_or_expression__in => (379,384) #"false"
                                                                                                                                                                  logical_and_expression__in => (379,384) #"false"
                                                                                                                                                                    bitwise_or_expression__in => (379,384) #"false"
                                                                                                                                                                      bitwise_xor_expression__in => (379,384) #"false"
                                                                                                                                                                        bitwise_and_expression__in => (379,384) #"false"
                                                                                                                                                                          equality_expression__in => (379,384) #"false"
                                                                                                                                                                            relational_expression__in => (379,384) #"false"
                                                                                                                                                                              shift_expression => (379,384) #"false"
                                                                                                                                                                                additive_expression => (379,384) #"false"
                                                                                                                                                                                  multiplicative_expression => (379,384) #"false"
                                                                                                                                                                                    unary_expression => (379,384) #"false"
                                                                                                                                                                                      postfix_expression => (379,384) #"false"
                                                                                                                                                                                        left_hand_side_expression => (379,384) #"false"
                                                                                                                                                                                          new_expression => (379,384) #"false"
                                                                                                                                                                                            member_expression => (379,384) #"false"
                                                                                                                                                                                              primary_expression => (379,384) #"false"
                                                                                                                                                                                                literal => (379,384) #"false"
                                                                                                                                                                                                  boolean_literal => (379,384) #"false"
                                                                                                                                                          property_definition => (386,397) #"value: cur "
                                                                                                                                                            property_name => (386,391) #"value"
                                                                                                                                                              literal_property_name => (386,391) #"value"
                                                                                                                                                                identifier_name => (386,391) #"value"
                                                                                                                                                            assignment_expression__in => (393,397) #"cur "
                                                                                                                                                              conditional_expression__in => (393,397) #"cur "
                                                                                                                                                                logical_or_expression__in => (393,397) #"cur "
                                                                                                                                                                  logical_and_expression__in => (393,397) #"cur "
                                                                                                                                                                    bitwise_or_expression__in => (393,397) #"cur "
                                                                                                                                                                      bitwise_xor_expression__in => (393,397) #"cur "
                                                                                                                                                                        bitwise_and_expression__in => (393,397) #"cur "
                                                                                                                                                                          equality_expression__in => (393,397) #"cur "
                                                                                                                                                                            relational_expression__in => (393,397) #"cur "
                                                                                                                                                                              shift_expression => (393,397) #"cur "
                                                                                                                                                                                additive_expression => (393,397) #"cur "
                                                                                                                                                                                  multiplicative_expression => (393,397) #"cur "
                                                                                                                                                                                    unary_expression => (393,397) #"cur "
                                                                                                                                                                                      postfix_expression => (393,397) #"cur "
                                                                                                                                                                                        left_hand_side_expression => (393,397) #"cur "
                                                                                                                                                                                          new_expression => (393,397) #"cur "
                                                                                                                                                                                            member_expression => (393,397) #"cur "
                                                                                                                                                                                              primary_expression => (393,396) #"cur"
                                                                                                                                                                                                identifier_reference => (393,396) #"cur"
                                                                                                                smart_semicolon => (398,399) #"\n"
                                                            smart_semicolon => (422,423) #"\n"
    smart_semicolon => (430,431) #"\n"
statement => (493,611) #"for (var n of fibonacci) {\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
  breakable_statement => (493,611) #"for (var n of fibonacci) {\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
    iteration_statement => (493,611) #"for (var n of fibonacci) {\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
      for_binding => (502,503) #"n"
        binding_identifier => (502,503) #"n"
      assignment_expression__in => (507,516) #"fibonacci"
        conditional_expression__in => (507,516) #"fibonacci"
          logical_or_expression__in => (507,516) #"fibonacci"
            logical_and_expression__in => (507,516) #"fibonacci"
              bitwise_or_expression__in => (507,516) #"fibonacci"
                bitwise_xor_expression__in => (507,516) #"fibonacci"
                  bitwise_and_expression__in => (507,516) #"fibonacci"
                    equality_expression__in => (507,516) #"fibonacci"
                      relational_expression__in => (507,516) #"fibonacci"
                        shift_expression => (507,516) #"fibonacci"
                          additive_expression => (507,516) #"fibonacci"
                            multiplicative_expression => (507,516) #"fibonacci"
                              unary_expression => (507,516) #"fibonacci"
                                postfix_expression => (507,516) #"fibonacci"
                                  left_hand_side_expression => (507,516) #"fibonacci"
                                    new_expression => (507,516) #"fibonacci"
                                      member_expression => (507,516) #"fibonacci"
                                        primary_expression => (507,516) #"fibonacci"
                                          identifier_reference => (507,516) #"fibonacci"
      statement => (518,611) #"{\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
        block_statement => (518,611) #"{\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
          block => (518,611) #"{\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
            statement => (561,590) #"if (n > 1000)\n        break;\n"
              if_statement => (561,590) #"if (n > 1000)\n        break;\n"
                expression__in => (565,573) #"n > 1000"
                  assignment_expression__in => (565,573) #"n > 1000"
                    conditional_expression__in => (565,573) #"n > 1000"
                      logical_or_expression__in => (565,573) #"n > 1000"
                        logical_and_expression__in => (565,573) #"n > 1000"
                          bitwise_or_expression__in => (565,573) #"n > 1000"
                            bitwise_xor_expression__in => (565,573) #"n > 1000"
                              bitwise_and_expression__in => (565,573) #"n > 1000"
                                equality_expression__in => (565,573) #"n > 1000"
                                  relational_expression__in => (565,573) #"n > 1000"
                                    shift_expression => (565,567) #"n "
                                      additive_expression => (565,567) #"n "
                                        multiplicative_expression => (565,567) #"n "
                                          unary_expression => (565,567) #"n "
                                            postfix_expression => (565,567) #"n "
                                              left_hand_side_expression => (565,567) #"n "
                                                new_expression => (565,567) #"n "
                                                  member_expression => (565,567) #"n "
                                                    primary_expression => (565,566) #"n"
                                                      identifier_reference => (565,566) #"n"
                                    relational_operator__in => (567,568) #">"
                                    shift_expression => (569,573) #"1000"
                                      additive_expression => (569,573) #"1000"
                                        multiplicative_expression => (569,573) #"1000"
                                          unary_expression => (569,573) #"1000"
                                            postfix_expression => (569,573) #"1000"
                                              left_hand_side_expression => (569,573) #"1000"
                                                new_expression => (569,573) #"1000"
                                                  member_expression => (569,573) #"1000"
                                                    primary_expression => (569,573) #"1000"
                                                      literal => (569,573) #"1000"
                                                        numeric_literal => (569,573) #"1000"
                                                          decimal_literal => (569,573) #"1000"
                                                            decimal_integer_literal => (569,573) #"1000"
                statement => (583,590) #"break;\n"
                  break_statement => (583,590) #"break;\n"
                    smart_semicolon => (588,590) #";\n"
            statement => (594,610) #"console.log(n);\n"
              expression_statement => (594,610) #"console.log(n);\n"
                expression__in => (594,608) #"console.log(n)"
                  assignment_expression__in => (594,608) #"console.log(n)"
                    conditional_expression__in => (594,608) #"console.log(n)"
                      logical_or_expression__in => (594,608) #"console.log(n)"
                        logical_and_expression__in => (594,608) #"console.log(n)"
                          bitwise_or_expression__in => (594,608) #"console.log(n)"
                            bitwise_xor_expression__in => (594,608) #"console.log(n)"
                              bitwise_and_expression__in => (594,608) #"console.log(n)"
                                equality_expression__in => (594,608) #"console.log(n)"
                                  relational_expression__in => (594,608) #"console.log(n)"
                                    shift_expression => (594,608) #"console.log(n)"
                                      additive_expression => (594,608) #"console.log(n)"
                                        multiplicative_expression => (594,608) #"console.log(n)"
                                          unary_expression => (594,608) #"console.log(n)"
                                            postfix_expression => (594,608) #"console.log(n)"
                                              left_hand_side_expression => (594,608) #"console.log(n)"
                                                call_expression => (594,608) #"console.log(n)"
                                                  member_expression => (594,605) #"console.log"
                                                    primary_expression => (594,601) #"console"
                                                      identifier_reference => (594,601) #"console"
                                                    identifier_name => (602,605) #"log"
                                                  arguments => (605,608) #"(n)"
                                                    argument_list => (606,607) #"n"
                                                      assignment_expression__in => (606,607) #"n"
                                                        conditional_expression__in => (606,607) #"n"
                                                          logical_or_expression__in => (606,607) #"n"
                                                            logical_and_expression__in => (606,607) #"n"
                                                              bitwise_or_expression__in => (606,607) #"n"
                                                                bitwise_xor_expression__in => (606,607) #"n"
                                                                  bitwise_and_expression__in => (606,607) #"n"
                                                                    equality_expression__in => (606,607) #"n"
                                                                      relational_expression__in => (606,607) #"n"
                                                                        shift_expression => (606,607) #"n"
                                                                          additive_expression => (606,607) #"n"
                                                                            multiplicative_expression => (606,607) #"n"
                                                                              unary_expression => (606,607) #"n"
                                                                                postfix_expression => (606,607) #"n"
                                                                                  left_hand_side_expression => (606,607) #"n"
                                                                                    new_expression => (606,607) #"n"
                                                                                      member_expression => (606,607) #"n"
                                                                                        primary_expression => (606,607) #"n"
                                                                                          identifier_reference => (606,607) #"n"
                smart_semicolon => (608,610) #";\n"
statement => (661,721) #"for(var x of [1,2,3,4,5,6,7,8,9,10]) {\n    console.log(x);\n}"
  breakable_statement => (661,721) #"for(var x of [1,2,3,4,5,6,7,8,9,10]) {\n    console.log(x);\n}"
    iteration_statement => (661,721) #"for(var x of [1,2,3,4,5,6,7,8,9,10]) {\n    console.log(x);\n}"
      for_binding => (669,670) #"x"
        binding_identifier => (669,670) #"x"
      assignment_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
        conditional_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
          logical_or_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
            logical_and_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
              bitwise_or_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                bitwise_xor_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                  bitwise_and_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                    equality_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                      relational_expression__in => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                        shift_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                          additive_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                            multiplicative_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                              unary_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                                postfix_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                                  left_hand_side_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                                    new_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                                      member_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                                        primary_expression => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                                          array_literal => (674,696) #"[1,2,3,4,5,6,7,8,9,10]"
                                            assignment_expression__in => (675,676) #"1"
                                              conditional_expression__in => (675,676) #"1"
                                                logical_or_expression__in => (675,676) #"1"
                                                  logical_and_expression__in => (675,676) #"1"
                                                    bitwise_or_expression__in => (675,676) #"1"
                                                      bitwise_xor_expression__in => (675,676) #"1"
                                                        bitwise_and_expression__in => (675,676) #"1"
                                                          equality_expression__in => (675,676) #"1"
                                                            relational_expression__in => (675,676) #"1"
                                                              shift_expression => (675,676) #"1"
                                                                additive_expression => (675,676) #"1"
                                                                  multiplicative_expression => (675,676) #"1"
                                                                    unary_expression => (675,676) #"1"
                                                                      postfix_expression => (675,676) #"1"
                                                                        left_hand_side_expression => (675,676) #"1"
                                                                          new_expression => (675,676) #"1"
                                                                            member_expression => (675,676) #"1"
                                                                              primary_expression => (675,676) #"1"
                                                                                literal => (675,676) #"1"
                                                                                  numeric_literal => (675,676) #"1"
                                                                                    decimal_literal => (675,676) #"1"
                                                                                      decimal_integer_literal => (675,676) #"1"
                                            assignment_expression__in => (677,678) #"2"
                                              conditional_expression__in => (677,678) #"2"
                                                logical_or_expression__in => (677,678) #"2"
                                                  logical_and_expression__in => (677,678) #"2"
                                                    bitwise_or_expression__in => (677,678) #"2"
                                                      bitwise_xor_expression__in => (677,678) #"2"
                                                        bitwise_and_expression__in => (677,678) #"2"
                                                          equality_expression__in => (677,678) #"2"
                                                            relational_expression__in => (677,678) #"2"
                                                              shift_expression => (677,678) #"2"
                                                                additive_expression => (677,678) #"2"
                                                                  multiplicative_expression => (677,678) #"2"
                                                                    unary_expression => (677,678) #"2"
                                                                      postfix_expression => (677,678) #"2"
                                                                        left_hand_side_expression => (677,678) #"2"
                                                                          new_expression => (677,678) #"2"
                                                                            member_expression => (677,678) #"2"
                                                                              primary_expression => (677,678) #"2"
                                                                                literal => (677,678) #"2"
                                                                                  numeric_literal => (677,678) #"2"
                                                                                    decimal_literal => (677,678) #"2"
                                                                                      decimal_integer_literal => (677,678) #"2"
                                            assignment_expression__in => (679,680) #"3"
                                              conditional_expression__in => (679,680) #"3"
                                                logical_or_expression__in => (679,680) #"3"
                                                  logical_and_expression__in => (679,680) #"3"
                                                    bitwise_or_expression__in => (679,680) #"3"
                                                      bitwise_xor_expression__in => (679,680) #"3"
                                                        bitwise_and_expression__in => (679,680) #"3"
                                                          equality_expression__in => (679,680) #"3"
                                                            relational_expression__in => (679,680) #"3"
                                                              shift_expression => (679,680) #"3"
                                                                additive_expression => (679,680) #"3"
                                                                  multiplicative_expression => (679,680) #"3"
                                                                    unary_expression => (679,680) #"3"
                                                                      postfix_expression => (679,680) #"3"
                                                                        left_hand_side_expression => (679,680) #"3"
                                                                          new_expression => (679,680) #"3"
                                                                            member_expression => (679,680) #"3"
                                                                              primary_expression => (679,680) #"3"
                                                                                literal => (679,680) #"3"
                                                                                  numeric_literal => (679,680) #"3"
                                                                                    decimal_literal => (679,680) #"3"
                                                                                      decimal_integer_literal => (679,680) #"3"
                                            assignment_expression__in => (681,682) #"4"
                                              conditional_expression__in => (681,682) #"4"
                                                logical_or_expression__in => (681,682) #"4"
                                                  logical_and_expression__in => (681,682) #"4"
                                                    bitwise_or_expression__in => (681,682) #"4"
                                                      bitwise_xor_expression__in => (681,682) #"4"
                                                        bitwise_and_expression__in => (681,682) #"4"
                                                          equality_expression__in => (681,682) #"4"
                                                            relational_expression__in => (681,682) #"4"
                                                              shift_expression => (681,682) #"4"
                                                                additive_expression => (681,682) #"4"
                                                                  multiplicative_expression => (681,682) #"4"
                                                                    unary_expression => (681,682) #"4"
                                                                      postfix_expression => (681,682) #"4"
                                                                        left_hand_side_expression => (681,682) #"4"
                                                                          new_expression => (681,682) #"4"
                                                                            member_expression => (681,682) #"4"
                                                                              primary_expression => (681,682) #"4"
                                                                                literal => (681,682) #"4"
                                                                                  numeric_literal => (681,682) #"4"
                                                                                    decimal_literal => (681,682) #"4"
                                                                                      decimal_integer_literal => (681,682) #"4"
                                            assignment_expression__in => (683,684) #"5"
                                              conditional_expression__in => (683,684) #"5"
                                                logical_or_expression__in => (683,684) #"5"
                                                  logical_and_expression__in => (683,684) #"5"
                                                    bitwise_or_expression__in => (683,684) #"5"
                                                      bitwise_xor_expression__in => (683,684) #"5"
                                                        bitwise_and_expression__in => (683,684) #"5"
                                                          equality_expression__in => (683,684) #"5"
                                                            relational_expression__in => (683,684) #"5"
                                                              shift_expression => (683,684) #"5"
                                                                additive_expression => (683,684) #"5"
                                                                  multiplicative_expression => (683,684) #"5"
                                                                    unary_expression => (683,684) #"5"
                                                                      postfix_expression => (683,684) #"5"
                                                                        left_hand_side_expression => (683,684) #"5"
                                                                          new_expression => (683,684) #"5"
                                                                            member_expression => (683,684) #"5"
                                                                              primary_expression => (683,684) #"5"
                                                                                literal => (683,684) #"5"
                                                                                  numeric_literal => (683,684) #"5"
                                                                                    decimal_literal => (683,684) #"5"
                                                                                      decimal_integer_literal => (683,684) #"5"
                                            assignment_expression__in => (685,686) #"6"
                                              conditional_expression__in => (685,686) #"6"
                                                logical_or_expression__in => (685,686) #"6"
                                                  logical_and_expression__in => (685,686) #"6"
                                                    bitwise_or_expression__in => (685,686) #"6"
                                                      bitwise_xor_expression__in => (685,686) #"6"
                                                        bitwise_and_expression__in => (685,686) #"6"
                                                          equality_expression__in => (685,686) #"6"
                                                            relational_expression__in => (685,686) #"6"
                                                              shift_expression => (685,686) #"6"
                                                                additive_expression => (685,686) #"6"
                                                                  multiplicative_expression => (685,686) #"6"
                                                                    unary_expression => (685,686) #"6"
                                                                      postfix_expression => (685,686) #"6"
                                                                        left_hand_side_expression => (685,686) #"6"
                                                                          new_expression => (685,686) #"6"
                                                                            member_expression => (685,686) #"6"
                                                                              primary_expression => (685,686) #"6"
                                                                                literal => (685,686) #"6"
                                                                                  numeric_literal => (685,686) #"6"
                                                                                    decimal_literal => (685,686) #"6"
                                                                                      decimal_integer_literal => (685,686) #"6"
                                            assignment_expression__in => (687,688) #"7"
                                              conditional_expression__in => (687,688) #"7"
                                                logical_or_expression__in => (687,688) #"7"
                                                  logical_and_expression__in => (687,688) #"7"
                                                    bitwise_or_expression__in => (687,688) #"7"
                                                      bitwise_xor_expression__in => (687,688) #"7"
                                                        bitwise_and_expression__in => (687,688) #"7"
                                                          equality_expression__in => (687,688) #"7"
                                                            relational_expression__in => (687,688) #"7"
                                                              shift_expression => (687,688) #"7"
                                                                additive_expression => (687,688) #"7"
                                                                  multiplicative_expression => (687,688) #"7"
                                                                    unary_expression => (687,688) #"7"
                                                                      postfix_expression => (687,688) #"7"
                                                                        left_hand_side_expression => (687,688) #"7"
                                                                          new_expression => (687,688) #"7"
                                                                            member_expression => (687,688) #"7"
                                                                              primary_expression => (687,688) #"7"
                                                                                literal => (687,688) #"7"
                                                                                  numeric_literal => (687,688) #"7"
                                                                                    decimal_literal => (687,688) #"7"
                                                                                      decimal_integer_literal => (687,688) #"7"
                                            assignment_expression__in => (689,690) #"8"
                                              conditional_expression__in => (689,690) #"8"
                                                logical_or_expression__in => (689,690) #"8"
                                                  logical_and_expression__in => (689,690) #"8"
                                                    bitwise_or_expression__in => (689,690) #"8"
                                                      bitwise_xor_expression__in => (689,690) #"8"
                                                        bitwise_and_expression__in => (689,690) #"8"
                                                          equality_expression__in => (689,690) #"8"
                                                            relational_expression__in => (689,690) #"8"
                                                              shift_expression => (689,690) #"8"
                                                                additive_expression => (689,690) #"8"
                                                                  multiplicative_expression => (689,690) #"8"
                                                                    unary_expression => (689,690) #"8"
                                                                      postfix_expression => (689,690) #"8"
                                                                        left_hand_side_expression => (689,690) #"8"
                                                                          new_expression => (689,690) #"8"
                                                                            member_expression => (689,690) #"8"
                                                                              primary_expression => (689,690) #"8"
                                                                                literal => (689,690) #"8"
                                                                                  numeric_literal => (689,690) #"8"
                                                                                    decimal_literal => (689,690) #"8"
                                                                                      decimal_integer_literal => (689,690) #"8"
                                            assignment_expression__in => (691,692) #"9"
                                              conditional_expression__in => (691,692) #"9"
                                                logical_or_expression__in => (691,692) #"9"
                                                  logical_and_expression__in => (691,692) #"9"
                                                    bitwise_or_expression__in => (691,692) #"9"
                                                      bitwise_xor_expression__in => (691,692) #"9"
                                                        bitwise_and_expression__in => (691,692) #"9"
                                                          equality_expression__in => (691,692) #"9"
                                                            relational_expression__in => (691,692) #"9"
                                                              shift_expression => (691,692) #"9"
                                                                additive_expression => (691,692) #"9"
                                                                  multiplicative_expression => (691,692) #"9"
                                                                    unary_expression => (691,692) #"9"
                                                                      postfix_expression => (691,692) #"9"
                                                                        left_hand_side_expression => (691,692) #"9"
                                                                          new_expression => (691,692) #"9"
                                                                            member_expression => (691,692) #"9"
                                                                              primary_expression => (691,692) #"9"
                                                                                literal => (691,692) #"9"
                                                                                  numeric_literal => (691,692) #"9"
                                                                                    decimal_literal => (691,692) #"9"
                                                                                      decimal_integer_literal => (691,692) #"9"
                                            assignment_expression__in => (693,695) #"10"
                                              conditional_expression__in => (693,695) #"10"
                                                logical_or_expression__in => (693,695) #"10"
                                                  logical_and_expression__in => (693,695) #"10"
                                                    bitwise_or_expression__in => (693,695) #"10"
                                                      bitwise_xor_expression__in => (693,695) #"10"
                                                        bitwise_and_expression__in => (693,695) #"10"
                                                          equality_expression__in => (693,695) #"10"
                                                            relational_expression__in => (693,695) #"10"
                                                              shift_expression => (693,695) #"10"
                                                                additive_expression => (693,695) #"10"
                                                                  multiplicative_expression => (693,695) #"10"
                                                                    unary_expression => (693,695) #"10"
                                                                      postfix_expression => (693,695) #"10"
                                                                        left_hand_side_expression => (693,695) #"10"
                                                                          new_expression => (693,695) #"10"
                                                                            member_expression => (693,695) #"10"
                                                                              primary_expression => (693,695) #"10"
                                                                                literal => (693,695) #"10"
                                                                                  numeric_literal => (693,695) #"10"
                                                                                    decimal_literal => (693,695) #"10"
                                                                                      decimal_integer_literal => (693,695) #"10"
      statement => (698,721) #"{\n    console.log(x);\n}"
        block_statement => (698,721) #"{\n    console.log(x);\n}"
          block => (698,721) #"{\n    console.log(x);\n}"
            statement => (704,720) #"console.log(x);\n"
              expression_statement => (704,720) #"console.log(x);\n"
                expression__in => (704,718) #"console.log(x)"
                  assignment_expression__in => (704,718) #"console.log(x)"
                    conditional_expression__in => (704,718) #"console.log(x)"
                      logical_or_expression__in => (704,718) #"console.log(x)"
                        logical_and_expression__in => (704,718) #"console.log(x)"
                          bitwise_or_expression__in => (704,718) #"console.log(x)"
                            bitwise_xor_expression__in => (704,718) #"console.log(x)"
                              bitwise_and_expression__in => (704,718) #"console.log(x)"
                                equality_expression__in => (704,718) #"console.log(x)"
                                  relational_expression__in => (704,718) #"console.log(x)"
                                    shift_expression => (704,718) #"console.log(x)"
                                      additive_expression => (704,718) #"console.log(x)"
                                        multiplicative_expression => (704,718) #"console.log(x)"
                                          unary_expression => (704,718) #"console.log(x)"
                                            postfix_expression => (704,718) #"console.log(x)"
                                              left_hand_side_expression => (704,718) #"console.log(x)"
                                                call_expression => (704,718) #"console.log(x)"
                                                  member_expression => (704,715) #"console.log"
                                                    primary_expression => (704,711) #"console"
                                                      identifier_reference => (704,711) #"console"
                                                    identifier_name => (712,715) #"log"
                                                  arguments => (715,718) #"(x)"
                                                    argument_list => (716,717) #"x"
                                                      assignment_expression__in => (716,717) #"x"
                                                        conditional_expression__in => (716,717) #"x"
                                                          logical_or_expression__in => (716,717) #"x"
                                                            logical_and_expression__in => (716,717) #"x"
                                                              bitwise_or_expression__in => (716,717) #"x"
                                                                bitwise_xor_expression__in => (716,717) #"x"
                                                                  bitwise_and_expression__in => (716,717) #"x"
                                                                    equality_expression__in => (716,717) #"x"
                                                                      relational_expression__in => (716,717) #"x"
                                                                        shift_expression => (716,717) #"x"
                                                                          additive_expression => (716,717) #"x"
                                                                            multiplicative_expression => (716,717) #"x"
                                                                              unary_expression => (716,717) #"x"
                                                                                postfix_expression => (716,717) #"x"
                                                                                  left_hand_side_expression => (716,717) #"x"
                                                                                    new_expression => (716,717) #"x"
                                                                                      member_expression => (716,717) #"x"
                                                                                        primary_expression => (716,717) #"x"
                                                                                          identifier_reference => (716,717) #"x"
                smart_semicolon => (718,720) #";\n"
