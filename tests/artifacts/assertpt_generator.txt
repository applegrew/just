variable_statement => (447,668) #"var fibonacci = {\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}\n"
__variable_declaration__in => (451,667) #"fibonacci = {\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
____binding_identifier => (451,460) #"fibonacci"
____initializer__in => (461,667) #"= {\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
______assignment_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
________conditional_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
__________logical_or_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
____________logical_and_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
______________bitwise_or_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
________________bitwise_xor_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
__________________bitwise_and_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
____________________equality_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
______________________relational_expression__in => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
________________________shift_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
__________________________additive_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
____________________________multiplicative_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
______________________________unary_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
________________________________postfix_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
__________________________________left_hand_side_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
____________________________________new_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
______________________________________member_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
________________________________________primary_expression => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
__________________________________________object_literal => (463,667) #"{\n    [Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }\n}"
____________________________________________property_definition_list => (469,665) #"[Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
______________________________________________property_definition => (469,665) #"[Symbol.iterator]: function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
________________________________________________property_name => (469,486) #"[Symbol.iterator]"
__________________________________________________computed_property_name => (469,486) #"[Symbol.iterator]"
____________________________________________________assignment_expression__in => (470,485) #"Symbol.iterator"
______________________________________________________conditional_expression__in => (470,485) #"Symbol.iterator"
________________________________________________________logical_or_expression__in => (470,485) #"Symbol.iterator"
__________________________________________________________logical_and_expression__in => (470,485) #"Symbol.iterator"
____________________________________________________________bitwise_or_expression__in => (470,485) #"Symbol.iterator"
______________________________________________________________bitwise_xor_expression__in => (470,485) #"Symbol.iterator"
________________________________________________________________bitwise_and_expression__in => (470,485) #"Symbol.iterator"
__________________________________________________________________equality_expression__in => (470,485) #"Symbol.iterator"
____________________________________________________________________relational_expression__in => (470,485) #"Symbol.iterator"
______________________________________________________________________shift_expression => (470,485) #"Symbol.iterator"
________________________________________________________________________additive_expression => (470,485) #"Symbol.iterator"
__________________________________________________________________________multiplicative_expression => (470,485) #"Symbol.iterator"
____________________________________________________________________________unary_expression => (470,485) #"Symbol.iterator"
______________________________________________________________________________postfix_expression => (470,485) #"Symbol.iterator"
________________________________________________________________________________left_hand_side_expression => (470,485) #"Symbol.iterator"
__________________________________________________________________________________new_expression => (470,485) #"Symbol.iterator"
____________________________________________________________________________________member_expression => (470,485) #"Symbol.iterator"
______________________________________________________________________________________primary_expression => (470,476) #"Symbol"
________________________________________________________________________________________identifier_reference => (470,476) #"Symbol"
______________________________________________________________________________________identifier_name => (477,485) #"iterator"
________________________________________________assignment_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
__________________________________________________conditional_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
____________________________________________________logical_or_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
______________________________________________________logical_and_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
________________________________________________________bitwise_or_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
__________________________________________________________bitwise_xor_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
____________________________________________________________bitwise_and_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
______________________________________________________________equality_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
________________________________________________________________relational_expression__in => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
__________________________________________________________________shift_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
____________________________________________________________________additive_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
______________________________________________________________________multiplicative_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
________________________________________________________________________unary_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
__________________________________________________________________________postfix_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
____________________________________________________________________________left_hand_side_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
______________________________________________________________________________new_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
________________________________________________________________________________member_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
__________________________________________________________________________________primary_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
____________________________________________________________________________________generator_expression => (488,665) #"function*() {\n        var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }\n    }"
______________________________________________________________________________________formal_parameters__yield => (498,498) #""
______________________________________________________________________________________generator_body => (510,659) #"var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }"
________________________________________________________________________________________function_body__yield => (510,659) #"var pre = 0, cur = 1;\n        for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }"
__________________________________________________________________________________________variable_statement__yield => (510,532) #"var pre = 0, cur = 1;\n"
____________________________________________________________________________________________variable_declaration__in_yield => (514,521) #"pre = 0"
______________________________________________________________________________________________binding_identifier__yield => (514,517) #"pre"
______________________________________________________________________________________________initializer__in_yield => (518,521) #"= 0"
________________________________________________________________________________________________assignment_expression__in_yield => (520,521) #"0"
__________________________________________________________________________________________________conditional_expression__in_yield => (520,521) #"0"
____________________________________________________________________________________________________logical_or_expression__in_yield => (520,521) #"0"
______________________________________________________________________________________________________logical_and_expression__in_yield => (520,521) #"0"
________________________________________________________________________________________________________bitwise_or_expression__in_yield => (520,521) #"0"
__________________________________________________________________________________________________________bitwise_xor_expression__in_yield => (520,521) #"0"
____________________________________________________________________________________________________________bitwise_and_expression__in_yield => (520,521) #"0"
______________________________________________________________________________________________________________equality_expression__in_yield => (520,521) #"0"
________________________________________________________________________________________________________________relational_expression__in_yield => (520,521) #"0"
__________________________________________________________________________________________________________________shift_expression__yield => (520,521) #"0"
____________________________________________________________________________________________________________________additive_expression__yield => (520,521) #"0"
______________________________________________________________________________________________________________________multiplicative_expression__yield => (520,521) #"0"
________________________________________________________________________________________________________________________unary_expression__yield => (520,521) #"0"
__________________________________________________________________________________________________________________________postfix_expression__yield => (520,521) #"0"
____________________________________________________________________________________________________________________________left_hand_side_expression__yield => (520,521) #"0"
______________________________________________________________________________________________________________________________new_expression__yield => (520,521) #"0"
________________________________________________________________________________________________________________________________member_expression__yield => (520,521) #"0"
__________________________________________________________________________________________________________________________________primary_expression__yield => (520,521) #"0"
____________________________________________________________________________________________________________________________________literal => (520,521) #"0"
______________________________________________________________________________________________________________________________________numeric_literal => (520,521) #"0"
________________________________________________________________________________________________________________________________________decimal_literal => (520,521) #"0"
__________________________________________________________________________________________________________________________________________decimal_integer_literal => (520,521) #"0"
____________________________________________________________________________________________variable_declaration__in_yield => (523,530) #"cur = 1"
______________________________________________________________________________________________binding_identifier__yield => (523,526) #"cur"
______________________________________________________________________________________________initializer__in_yield => (527,530) #"= 1"
________________________________________________________________________________________________assignment_expression__in_yield => (529,530) #"1"
__________________________________________________________________________________________________conditional_expression__in_yield => (529,530) #"1"
____________________________________________________________________________________________________logical_or_expression__in_yield => (529,530) #"1"
______________________________________________________________________________________________________logical_and_expression__in_yield => (529,530) #"1"
________________________________________________________________________________________________________bitwise_or_expression__in_yield => (529,530) #"1"
__________________________________________________________________________________________________________bitwise_xor_expression__in_yield => (529,530) #"1"
____________________________________________________________________________________________________________bitwise_and_expression__in_yield => (529,530) #"1"
______________________________________________________________________________________________________________equality_expression__in_yield => (529,530) #"1"
________________________________________________________________________________________________________________relational_expression__in_yield => (529,530) #"1"
__________________________________________________________________________________________________________________shift_expression__yield => (529,530) #"1"
____________________________________________________________________________________________________________________additive_expression__yield => (529,530) #"1"
______________________________________________________________________________________________________________________multiplicative_expression__yield => (529,530) #"1"
________________________________________________________________________________________________________________________unary_expression__yield => (529,530) #"1"
__________________________________________________________________________________________________________________________postfix_expression__yield => (529,530) #"1"
____________________________________________________________________________________________________________________________left_hand_side_expression__yield => (529,530) #"1"
______________________________________________________________________________________________________________________________new_expression__yield => (529,530) #"1"
________________________________________________________________________________________________________________________________member_expression__yield => (529,530) #"1"
__________________________________________________________________________________________________________________________________primary_expression__yield => (529,530) #"1"
____________________________________________________________________________________________________________________________________literal => (529,530) #"1"
______________________________________________________________________________________________________________________________________numeric_literal => (529,530) #"1"
________________________________________________________________________________________________________________________________________decimal_literal => (529,530) #"1"
__________________________________________________________________________________________________________________________________________decimal_integer_literal => (529,530) #"1"
____________________________________________________________________________________________smart_semicolon => (530,532) #";\n"
__________________________________________________________________________________________breakable_statement__yield_return => (540,659) #"for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }"
____________________________________________________________________________________________iteration_statement__yield_return => (540,659) #"for (;;) {\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }"
______________________________________________________________________________________________block_statement__yield_return => (549,659) #"{\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }"
________________________________________________________________________________________________block__yield_return => (549,659) #"{\n            var temp = pre;\n            pre = cur;\n            cur += temp;\n            yield cur;\n        }"
__________________________________________________________________________________________________variable_statement__yield => (563,579) #"var temp = pre;\n"
____________________________________________________________________________________________________variable_declaration__in_yield => (567,577) #"temp = pre"
______________________________________________________________________________________________________binding_identifier__yield => (567,571) #"temp"
______________________________________________________________________________________________________initializer__in_yield => (572,577) #"= pre"
________________________________________________________________________________________________________assignment_expression__in_yield => (574,577) #"pre"
__________________________________________________________________________________________________________conditional_expression__in_yield => (574,577) #"pre"
____________________________________________________________________________________________________________logical_or_expression__in_yield => (574,577) #"pre"
______________________________________________________________________________________________________________logical_and_expression__in_yield => (574,577) #"pre"
________________________________________________________________________________________________________________bitwise_or_expression__in_yield => (574,577) #"pre"
__________________________________________________________________________________________________________________bitwise_xor_expression__in_yield => (574,577) #"pre"
____________________________________________________________________________________________________________________bitwise_and_expression__in_yield => (574,577) #"pre"
______________________________________________________________________________________________________________________equality_expression__in_yield => (574,577) #"pre"
________________________________________________________________________________________________________________________relational_expression__in_yield => (574,577) #"pre"
__________________________________________________________________________________________________________________________shift_expression__yield => (574,577) #"pre"
____________________________________________________________________________________________________________________________additive_expression__yield => (574,577) #"pre"
______________________________________________________________________________________________________________________________multiplicative_expression__yield => (574,577) #"pre"
________________________________________________________________________________________________________________________________unary_expression__yield => (574,577) #"pre"
__________________________________________________________________________________________________________________________________postfix_expression__yield => (574,577) #"pre"
____________________________________________________________________________________________________________________________________left_hand_side_expression__yield => (574,577) #"pre"
______________________________________________________________________________________________________________________________________new_expression__yield => (574,577) #"pre"
________________________________________________________________________________________________________________________________________member_expression__yield => (574,577) #"pre"
__________________________________________________________________________________________________________________________________________primary_expression__yield => (574,577) #"pre"
____________________________________________________________________________________________________________________________________________identifier_reference__yield => (574,577) #"pre"
____________________________________________________________________________________________________smart_semicolon => (577,579) #";\n"
__________________________________________________________________________________________________expression_statement__yield => (591,602) #"pre = cur;\n"
____________________________________________________________________________________________________expression__in_yield => (591,600) #"pre = cur"
______________________________________________________________________________________________________assignment_expression__in_yield => (591,600) #"pre = cur"
________________________________________________________________________________________________________left_hand_side_expression__yield => (591,595) #"pre "
__________________________________________________________________________________________________________new_expression__yield => (591,595) #"pre "
____________________________________________________________________________________________________________member_expression__yield => (591,595) #"pre "
______________________________________________________________________________________________________________primary_expression__yield => (591,594) #"pre"
________________________________________________________________________________________________________________identifier_reference__yield => (591,594) #"pre"
________________________________________________________________________________________________________assignment_expression__in_yield => (597,600) #"cur"
__________________________________________________________________________________________________________conditional_expression__in_yield => (597,600) #"cur"
____________________________________________________________________________________________________________logical_or_expression__in_yield => (597,600) #"cur"
______________________________________________________________________________________________________________logical_and_expression__in_yield => (597,600) #"cur"
________________________________________________________________________________________________________________bitwise_or_expression__in_yield => (597,600) #"cur"
__________________________________________________________________________________________________________________bitwise_xor_expression__in_yield => (597,600) #"cur"
____________________________________________________________________________________________________________________bitwise_and_expression__in_yield => (597,600) #"cur"
______________________________________________________________________________________________________________________equality_expression__in_yield => (597,600) #"cur"
________________________________________________________________________________________________________________________relational_expression__in_yield => (597,600) #"cur"
__________________________________________________________________________________________________________________________shift_expression__yield => (597,600) #"cur"
____________________________________________________________________________________________________________________________additive_expression__yield => (597,600) #"cur"
______________________________________________________________________________________________________________________________multiplicative_expression__yield => (597,600) #"cur"
________________________________________________________________________________________________________________________________unary_expression__yield => (597,600) #"cur"
__________________________________________________________________________________________________________________________________postfix_expression__yield => (597,600) #"cur"
____________________________________________________________________________________________________________________________________left_hand_side_expression__yield => (597,600) #"cur"
______________________________________________________________________________________________________________________________________new_expression__yield => (597,600) #"cur"
________________________________________________________________________________________________________________________________________member_expression__yield => (597,600) #"cur"
__________________________________________________________________________________________________________________________________________primary_expression__yield => (597,600) #"cur"
____________________________________________________________________________________________________________________________________________identifier_reference__yield => (597,600) #"cur"
____________________________________________________________________________________________________smart_semicolon => (600,602) #";\n"
__________________________________________________________________________________________________expression_statement__yield => (614,627) #"cur += temp;\n"
____________________________________________________________________________________________________expression__in_yield => (614,625) #"cur += temp"
______________________________________________________________________________________________________assignment_expression__in_yield => (614,625) #"cur += temp"
________________________________________________________________________________________________________left_hand_side_expression__yield => (614,618) #"cur "
__________________________________________________________________________________________________________new_expression__yield => (614,618) #"cur "
____________________________________________________________________________________________________________member_expression__yield => (614,618) #"cur "
______________________________________________________________________________________________________________primary_expression__yield => (614,617) #"cur"
________________________________________________________________________________________________________________identifier_reference__yield => (614,617) #"cur"
________________________________________________________________________________________________________assignment_operator => (618,620) #"+="
________________________________________________________________________________________________________assignment_expression__in_yield => (621,625) #"temp"
__________________________________________________________________________________________________________conditional_expression__in_yield => (621,625) #"temp"
____________________________________________________________________________________________________________logical_or_expression__in_yield => (621,625) #"temp"
______________________________________________________________________________________________________________logical_and_expression__in_yield => (621,625) #"temp"
________________________________________________________________________________________________________________bitwise_or_expression__in_yield => (621,625) #"temp"
__________________________________________________________________________________________________________________bitwise_xor_expression__in_yield => (621,625) #"temp"
____________________________________________________________________________________________________________________bitwise_and_expression__in_yield => (621,625) #"temp"
______________________________________________________________________________________________________________________equality_expression__in_yield => (621,625) #"temp"
________________________________________________________________________________________________________________________relational_expression__in_yield => (621,625) #"temp"
__________________________________________________________________________________________________________________________shift_expression__yield => (621,625) #"temp"
____________________________________________________________________________________________________________________________additive_expression__yield => (621,625) #"temp"
______________________________________________________________________________________________________________________________multiplicative_expression__yield => (621,625) #"temp"
________________________________________________________________________________________________________________________________unary_expression__yield => (621,625) #"temp"
__________________________________________________________________________________________________________________________________postfix_expression__yield => (621,625) #"temp"
____________________________________________________________________________________________________________________________________left_hand_side_expression__yield => (621,625) #"temp"
______________________________________________________________________________________________________________________________________new_expression__yield => (621,625) #"temp"
________________________________________________________________________________________________________________________________________member_expression__yield => (621,625) #"temp"
__________________________________________________________________________________________________________________________________________primary_expression__yield => (621,625) #"temp"
____________________________________________________________________________________________________________________________________________identifier_reference__yield => (621,625) #"temp"
____________________________________________________________________________________________________smart_semicolon => (625,627) #";\n"
__________________________________________________________________________________________________expression_statement__yield => (639,650) #"yield cur;\n"
____________________________________________________________________________________________________expression__in_yield => (639,648) #"yield cur"
______________________________________________________________________________________________________assignment_expression__in_yield => (639,648) #"yield cur"
________________________________________________________________________________________________________yield_expression__in => (639,648) #"yield cur"
__________________________________________________________________________________________________________assignment_expression__in_yield => (645,648) #"cur"
____________________________________________________________________________________________________________conditional_expression__in_yield => (645,648) #"cur"
______________________________________________________________________________________________________________logical_or_expression__in_yield => (645,648) #"cur"
________________________________________________________________________________________________________________logical_and_expression__in_yield => (645,648) #"cur"
__________________________________________________________________________________________________________________bitwise_or_expression__in_yield => (645,648) #"cur"
____________________________________________________________________________________________________________________bitwise_xor_expression__in_yield => (645,648) #"cur"
______________________________________________________________________________________________________________________bitwise_and_expression__in_yield => (645,648) #"cur"
________________________________________________________________________________________________________________________equality_expression__in_yield => (645,648) #"cur"
__________________________________________________________________________________________________________________________relational_expression__in_yield => (645,648) #"cur"
____________________________________________________________________________________________________________________________shift_expression__yield => (645,648) #"cur"
______________________________________________________________________________________________________________________________additive_expression__yield => (645,648) #"cur"
________________________________________________________________________________________________________________________________multiplicative_expression__yield => (645,648) #"cur"
__________________________________________________________________________________________________________________________________unary_expression__yield => (645,648) #"cur"
____________________________________________________________________________________________________________________________________postfix_expression__yield => (645,648) #"cur"
______________________________________________________________________________________________________________________________________left_hand_side_expression__yield => (645,648) #"cur"
________________________________________________________________________________________________________________________________________new_expression__yield => (645,648) #"cur"
__________________________________________________________________________________________________________________________________________member_expression__yield => (645,648) #"cur"
____________________________________________________________________________________________________________________________________________primary_expression__yield => (645,648) #"cur"
______________________________________________________________________________________________________________________________________________identifier_reference__yield => (645,648) #"cur"
____________________________________________________________________________________________________smart_semicolon => (648,650) #";\n"
__smart_semicolon => (667,668) #"\n"
breakable_statement => (770,888) #"for (var n of fibonacci) {\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
__iteration_statement => (770,888) #"for (var n of fibonacci) {\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
____for_binding => (779,780) #"n"
______binding_identifier => (779,780) #"n"
____assignment_expression__in => (784,793) #"fibonacci"
______conditional_expression__in => (784,793) #"fibonacci"
________logical_or_expression__in => (784,793) #"fibonacci"
__________logical_and_expression__in => (784,793) #"fibonacci"
____________bitwise_or_expression__in => (784,793) #"fibonacci"
______________bitwise_xor_expression__in => (784,793) #"fibonacci"
________________bitwise_and_expression__in => (784,793) #"fibonacci"
__________________equality_expression__in => (784,793) #"fibonacci"
____________________relational_expression__in => (784,793) #"fibonacci"
______________________shift_expression => (784,793) #"fibonacci"
________________________additive_expression => (784,793) #"fibonacci"
__________________________multiplicative_expression => (784,793) #"fibonacci"
____________________________unary_expression => (784,793) #"fibonacci"
______________________________postfix_expression => (784,793) #"fibonacci"
________________________________left_hand_side_expression => (784,793) #"fibonacci"
__________________________________new_expression => (784,793) #"fibonacci"
____________________________________member_expression => (784,793) #"fibonacci"
______________________________________primary_expression => (784,793) #"fibonacci"
________________________________________identifier_reference => (784,793) #"fibonacci"
____block_statement => (795,888) #"{\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
______block => (795,888) #"{\n    // truncate the sequence at 1000\n    if (n > 1000)\n        break;\n    console.log(n);\n}"
________if_statement => (838,867) #"if (n > 1000)\n        break;\n"
__________expression__in => (842,850) #"n > 1000"
____________assignment_expression__in => (842,850) #"n > 1000"
______________conditional_expression__in => (842,850) #"n > 1000"
________________logical_or_expression__in => (842,850) #"n > 1000"
__________________logical_and_expression__in => (842,850) #"n > 1000"
____________________bitwise_or_expression__in => (842,850) #"n > 1000"
______________________bitwise_xor_expression__in => (842,850) #"n > 1000"
________________________bitwise_and_expression__in => (842,850) #"n > 1000"
__________________________equality_expression__in => (842,850) #"n > 1000"
____________________________relational_expression__in => (842,850) #"n > 1000"
______________________________shift_expression => (842,844) #"n "
________________________________additive_expression => (842,844) #"n "
__________________________________multiplicative_expression => (842,844) #"n "
____________________________________unary_expression => (842,844) #"n "
______________________________________postfix_expression => (842,844) #"n "
________________________________________left_hand_side_expression => (842,844) #"n "
__________________________________________new_expression => (842,844) #"n "
____________________________________________member_expression => (842,844) #"n "
______________________________________________primary_expression => (842,843) #"n"
________________________________________________identifier_reference => (842,843) #"n"
______________________________relational_operator__in => (844,845) #">"
______________________________shift_expression => (846,850) #"1000"
________________________________additive_expression => (846,850) #"1000"
__________________________________multiplicative_expression => (846,850) #"1000"
____________________________________unary_expression => (846,850) #"1000"
______________________________________postfix_expression => (846,850) #"1000"
________________________________________left_hand_side_expression => (846,850) #"1000"
__________________________________________new_expression => (846,850) #"1000"
____________________________________________member_expression => (846,850) #"1000"
______________________________________________primary_expression => (846,850) #"1000"
________________________________________________literal => (846,850) #"1000"
__________________________________________________numeric_literal => (846,850) #"1000"
____________________________________________________decimal_literal => (846,850) #"1000"
______________________________________________________decimal_integer_literal => (846,850) #"1000"
__________break_statement => (860,867) #"break;\n"
____________smart_semicolon => (865,867) #";\n"
________expression_statement => (871,887) #"console.log(n);\n"
__________expression__in => (871,885) #"console.log(n)"
____________assignment_expression__in => (871,885) #"console.log(n)"
______________conditional_expression__in => (871,885) #"console.log(n)"
________________logical_or_expression__in => (871,885) #"console.log(n)"
__________________logical_and_expression__in => (871,885) #"console.log(n)"
____________________bitwise_or_expression__in => (871,885) #"console.log(n)"
______________________bitwise_xor_expression__in => (871,885) #"console.log(n)"
________________________bitwise_and_expression__in => (871,885) #"console.log(n)"
__________________________equality_expression__in => (871,885) #"console.log(n)"
____________________________relational_expression__in => (871,885) #"console.log(n)"
______________________________shift_expression => (871,885) #"console.log(n)"
________________________________additive_expression => (871,885) #"console.log(n)"
__________________________________multiplicative_expression => (871,885) #"console.log(n)"
____________________________________unary_expression => (871,885) #"console.log(n)"
______________________________________postfix_expression => (871,885) #"console.log(n)"
________________________________________left_hand_side_expression => (871,885) #"console.log(n)"
__________________________________________call_expression => (871,885) #"console.log(n)"
____________________________________________member_expression => (871,882) #"console.log"
______________________________________________primary_expression => (871,878) #"console"
________________________________________________identifier_reference => (871,878) #"console"
______________________________________________identifier_name => (879,882) #"log"
____________________________________________arguments => (882,885) #"(n)"
______________________________________________argument_list => (883,884) #"n"
________________________________________________assignment_expression__in => (883,884) #"n"
__________________________________________________conditional_expression__in => (883,884) #"n"
____________________________________________________logical_or_expression__in => (883,884) #"n"
______________________________________________________logical_and_expression__in => (883,884) #"n"
________________________________________________________bitwise_or_expression__in => (883,884) #"n"
__________________________________________________________bitwise_xor_expression__in => (883,884) #"n"
____________________________________________________________bitwise_and_expression__in => (883,884) #"n"
______________________________________________________________equality_expression__in => (883,884) #"n"
________________________________________________________________relational_expression__in => (883,884) #"n"
__________________________________________________________________shift_expression => (883,884) #"n"
____________________________________________________________________additive_expression => (883,884) #"n"
______________________________________________________________________multiplicative_expression => (883,884) #"n"
________________________________________________________________________unary_expression => (883,884) #"n"
__________________________________________________________________________postfix_expression => (883,884) #"n"
____________________________________________________________________________left_hand_side_expression => (883,884) #"n"
______________________________________________________________________________new_expression => (883,884) #"n"
________________________________________________________________________________member_expression => (883,884) #"n"
__________________________________________________________________________________primary_expression => (883,884) #"n"
____________________________________________________________________________________identifier_reference => (883,884) #"n"
__________smart_semicolon => (885,887) #";\n"
declaration => (890,949) #"function *generator() {\n    (yield (yield 10) + \'world\');\n}"
__hoistable_declaration => (890,949) #"function *generator() {\n    (yield (yield 10) + \'world\');\n}"
____generator_declaration => (890,949) #"function *generator() {\n    (yield (yield 10) + \'world\');\n}"
______binding_identifier => (900,909) #"generator"
______formal_parameters => (910,910) #""
______generator_body => (918,948) #"(yield (yield 10) + \'world\');\n"
________function_body__yield => (918,948) #"(yield (yield 10) + \'world\');\n"
__________expression_statement__yield => (918,948) #"(yield (yield 10) + \'world\');\n"
____________expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
______________assignment_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
________________conditional_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
__________________logical_or_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
____________________logical_and_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
______________________bitwise_or_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
________________________bitwise_xor_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
__________________________bitwise_and_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
____________________________equality_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
______________________________relational_expression__in_yield => (918,946) #"(yield (yield 10) + \'world\')"
________________________________shift_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
__________________________________additive_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
____________________________________multiplicative_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
______________________________________unary_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
________________________________________postfix_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
__________________________________________left_hand_side_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
____________________________________________new_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
______________________________________________member_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
________________________________________________primary_expression__yield => (918,946) #"(yield (yield 10) + \'world\')"
__________________________________________________cover_parenthesized_expression_and_arrow_parameter_list__yield => (918,946) #"(yield (yield 10) + \'world\')"
____________________________________________________expression__in_yield => (919,945) #"yield (yield 10) + \'world\'"
______________________________________________________assignment_expression__in_yield => (919,945) #"yield (yield 10) + \'world\'"
________________________________________________________yield_expression__in => (919,945) #"yield (yield 10) + \'world\'"
__________________________________________________________assignment_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
____________________________________________________________conditional_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
______________________________________________________________logical_or_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
________________________________________________________________logical_and_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
__________________________________________________________________bitwise_or_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
____________________________________________________________________bitwise_xor_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
______________________________________________________________________bitwise_and_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
________________________________________________________________________equality_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
__________________________________________________________________________relational_expression__in_yield => (925,945) #"(yield 10) + \'world\'"
____________________________________________________________________________shift_expression__yield => (925,945) #"(yield 10) + \'world\'"
______________________________________________________________________________additive_expression__yield => (925,945) #"(yield 10) + \'world\'"
________________________________________________________________________________multiplicative_expression__yield => (925,936) #"(yield 10) "
__________________________________________________________________________________unary_expression__yield => (925,936) #"(yield 10) "
____________________________________________________________________________________postfix_expression__yield => (925,936) #"(yield 10) "
______________________________________________________________________________________left_hand_side_expression__yield => (925,936) #"(yield 10) "
________________________________________________________________________________________new_expression__yield => (925,936) #"(yield 10) "
__________________________________________________________________________________________member_expression__yield => (925,936) #"(yield 10) "
____________________________________________________________________________________________primary_expression__yield => (925,935) #"(yield 10)"
______________________________________________________________________________________________cover_parenthesized_expression_and_arrow_parameter_list__yield => (925,935) #"(yield 10)"
________________________________________________________________________________________________expression__in_yield => (926,934) #"yield 10"
__________________________________________________________________________________________________assignment_expression__in_yield => (926,934) #"yield 10"
____________________________________________________________________________________________________yield_expression__in => (926,934) #"yield 10"
______________________________________________________________________________________________________assignment_expression__in_yield => (932,934) #"10"
________________________________________________________________________________________________________conditional_expression__in_yield => (932,934) #"10"
__________________________________________________________________________________________________________logical_or_expression__in_yield => (932,934) #"10"
____________________________________________________________________________________________________________logical_and_expression__in_yield => (932,934) #"10"
______________________________________________________________________________________________________________bitwise_or_expression__in_yield => (932,934) #"10"
________________________________________________________________________________________________________________bitwise_xor_expression__in_yield => (932,934) #"10"
__________________________________________________________________________________________________________________bitwise_and_expression__in_yield => (932,934) #"10"
____________________________________________________________________________________________________________________equality_expression__in_yield => (932,934) #"10"
______________________________________________________________________________________________________________________relational_expression__in_yield => (932,934) #"10"
________________________________________________________________________________________________________________________shift_expression__yield => (932,934) #"10"
__________________________________________________________________________________________________________________________additive_expression__yield => (932,934) #"10"
____________________________________________________________________________________________________________________________multiplicative_expression__yield => (932,934) #"10"
______________________________________________________________________________________________________________________________unary_expression__yield => (932,934) #"10"
________________________________________________________________________________________________________________________________postfix_expression__yield => (932,934) #"10"
__________________________________________________________________________________________________________________________________left_hand_side_expression__yield => (932,934) #"10"
____________________________________________________________________________________________________________________________________new_expression__yield => (932,934) #"10"
______________________________________________________________________________________________________________________________________member_expression__yield => (932,934) #"10"
________________________________________________________________________________________________________________________________________primary_expression__yield => (932,934) #"10"
__________________________________________________________________________________________________________________________________________literal => (932,934) #"10"
____________________________________________________________________________________________________________________________________________numeric_literal => (932,934) #"10"
______________________________________________________________________________________________________________________________________________decimal_literal => (932,934) #"10"
________________________________________________________________________________________________________________________________________________decimal_integer_literal => (932,934) #"10"
________________________________________________________________________________additive_operator => (936,937) #"+"
________________________________________________________________________________multiplicative_expression__yield => (938,945) #"\'world\'"
__________________________________________________________________________________unary_expression__yield => (938,945) #"\'world\'"
____________________________________________________________________________________postfix_expression__yield => (938,945) #"\'world\'"
______________________________________________________________________________________left_hand_side_expression__yield => (938,945) #"\'world\'"
________________________________________________________________________________________new_expression__yield => (938,945) #"\'world\'"
__________________________________________________________________________________________member_expression__yield => (938,945) #"\'world\'"
____________________________________________________________________________________________primary_expression__yield => (938,945) #"\'world\'"
______________________________________________________________________________________________literal => (938,945) #"\'world\'"
________________________________________________________________________________________________string_literal => (938,945) #"\'world\'"
____________smart_semicolon => (946,948) #";\n"
variable_statement => (951,974) #"var gen = generator();\n"
__variable_declaration__in => (955,972) #"gen = generator()"
____binding_identifier => (955,958) #"gen"
____initializer__in => (959,972) #"= generator()"
______assignment_expression__in => (961,972) #"generator()"
________conditional_expression__in => (961,972) #"generator()"
__________logical_or_expression__in => (961,972) #"generator()"
____________logical_and_expression__in => (961,972) #"generator()"
______________bitwise_or_expression__in => (961,972) #"generator()"
________________bitwise_xor_expression__in => (961,972) #"generator()"
__________________bitwise_and_expression__in => (961,972) #"generator()"
____________________equality_expression__in => (961,972) #"generator()"
______________________relational_expression__in => (961,972) #"generator()"
________________________shift_expression => (961,972) #"generator()"
__________________________additive_expression => (961,972) #"generator()"
____________________________multiplicative_expression => (961,972) #"generator()"
______________________________unary_expression => (961,972) #"generator()"
________________________________postfix_expression => (961,972) #"generator()"
__________________________________left_hand_side_expression => (961,972) #"generator()"
____________________________________call_expression => (961,972) #"generator()"
______________________________________member_expression => (961,970) #"generator"
________________________________________primary_expression => (961,970) #"generator"
__________________________________________identifier_reference => (961,970) #"generator"
______________________________________arguments => (970,972) #"()"
__smart_semicolon => (972,974) #";\n"
expression_statement => (1107,1145) #"console.log(gen.next(\'hello\').value);\n"
__expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
____assignment_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
______conditional_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
________logical_or_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
__________logical_and_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
____________bitwise_or_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
______________bitwise_xor_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
________________bitwise_and_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
__________________equality_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
____________________relational_expression__in => (1107,1143) #"console.log(gen.next(\'hello\').value)"
______________________shift_expression => (1107,1143) #"console.log(gen.next(\'hello\').value)"
________________________additive_expression => (1107,1143) #"console.log(gen.next(\'hello\').value)"
__________________________multiplicative_expression => (1107,1143) #"console.log(gen.next(\'hello\').value)"
____________________________unary_expression => (1107,1143) #"console.log(gen.next(\'hello\').value)"
______________________________postfix_expression => (1107,1143) #"console.log(gen.next(\'hello\').value)"
________________________________left_hand_side_expression => (1107,1143) #"console.log(gen.next(\'hello\').value)"
__________________________________call_expression => (1107,1143) #"console.log(gen.next(\'hello\').value)"
____________________________________member_expression => (1107,1118) #"console.log"
______________________________________primary_expression => (1107,1114) #"console"
________________________________________identifier_reference => (1107,1114) #"console"
______________________________________identifier_name => (1115,1118) #"log"
____________________________________arguments => (1118,1143) #"(gen.next(\'hello\').value)"
______________________________________argument_list => (1119,1142) #"gen.next(\'hello\').value"
________________________________________assignment_expression__in => (1119,1142) #"gen.next(\'hello\').value"
__________________________________________conditional_expression__in => (1119,1142) #"gen.next(\'hello\').value"
____________________________________________logical_or_expression__in => (1119,1142) #"gen.next(\'hello\').value"
______________________________________________logical_and_expression__in => (1119,1142) #"gen.next(\'hello\').value"
________________________________________________bitwise_or_expression__in => (1119,1142) #"gen.next(\'hello\').value"
__________________________________________________bitwise_xor_expression__in => (1119,1142) #"gen.next(\'hello\').value"
____________________________________________________bitwise_and_expression__in => (1119,1142) #"gen.next(\'hello\').value"
______________________________________________________equality_expression__in => (1119,1142) #"gen.next(\'hello\').value"
________________________________________________________relational_expression__in => (1119,1142) #"gen.next(\'hello\').value"
__________________________________________________________shift_expression => (1119,1142) #"gen.next(\'hello\').value"
____________________________________________________________additive_expression => (1119,1142) #"gen.next(\'hello\').value"
______________________________________________________________multiplicative_expression => (1119,1142) #"gen.next(\'hello\').value"
________________________________________________________________unary_expression => (1119,1142) #"gen.next(\'hello\').value"
__________________________________________________________________postfix_expression => (1119,1142) #"gen.next(\'hello\').value"
____________________________________________________________________left_hand_side_expression => (1119,1142) #"gen.next(\'hello\').value"
______________________________________________________________________call_expression => (1119,1142) #"gen.next(\'hello\').value"
________________________________________________________________________member_expression => (1119,1127) #"gen.next"
__________________________________________________________________________primary_expression => (1119,1122) #"gen"
____________________________________________________________________________identifier_reference => (1119,1122) #"gen"
__________________________________________________________________________identifier_name => (1123,1127) #"next"
________________________________________________________________________arguments => (1127,1136) #"(\'hello\')"
__________________________________________________________________________argument_list => (1128,1135) #"\'hello\'"
____________________________________________________________________________assignment_expression__in => (1128,1135) #"\'hello\'"
______________________________________________________________________________conditional_expression__in => (1128,1135) #"\'hello\'"
________________________________________________________________________________logical_or_expression__in => (1128,1135) #"\'hello\'"
__________________________________________________________________________________logical_and_expression__in => (1128,1135) #"\'hello\'"
____________________________________________________________________________________bitwise_or_expression__in => (1128,1135) #"\'hello\'"
______________________________________________________________________________________bitwise_xor_expression__in => (1128,1135) #"\'hello\'"
________________________________________________________________________________________bitwise_and_expression__in => (1128,1135) #"\'hello\'"
__________________________________________________________________________________________equality_expression__in => (1128,1135) #"\'hello\'"
____________________________________________________________________________________________relational_expression__in => (1128,1135) #"\'hello\'"
______________________________________________________________________________________________shift_expression => (1128,1135) #"\'hello\'"
________________________________________________________________________________________________additive_expression => (1128,1135) #"\'hello\'"
__________________________________________________________________________________________________multiplicative_expression => (1128,1135) #"\'hello\'"
____________________________________________________________________________________________________unary_expression => (1128,1135) #"\'hello\'"
______________________________________________________________________________________________________postfix_expression => (1128,1135) #"\'hello\'"
________________________________________________________________________________________________________left_hand_side_expression => (1128,1135) #"\'hello\'"
__________________________________________________________________________________________________________new_expression => (1128,1135) #"\'hello\'"
____________________________________________________________________________________________________________member_expression => (1128,1135) #"\'hello\'"
______________________________________________________________________________________________________________primary_expression => (1128,1135) #"\'hello\'"
________________________________________________________________________________________________________________literal => (1128,1135) #"\'hello\'"
__________________________________________________________________________________________________________________string_literal => (1128,1135) #"\'hello\'"
________________________________________________________________________identifier_name => (1137,1142) #"value"
__smart_semicolon => (1143,1145) #";\n"
expression_statement => (1145,1177) #"console.log(gen.next(0).value);\n"
__expression__in => (1145,1175) #"console.log(gen.next(0).value)"
____assignment_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
______conditional_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
________logical_or_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
__________logical_and_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
____________bitwise_or_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
______________bitwise_xor_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
________________bitwise_and_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
__________________equality_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
____________________relational_expression__in => (1145,1175) #"console.log(gen.next(0).value)"
______________________shift_expression => (1145,1175) #"console.log(gen.next(0).value)"
________________________additive_expression => (1145,1175) #"console.log(gen.next(0).value)"
__________________________multiplicative_expression => (1145,1175) #"console.log(gen.next(0).value)"
____________________________unary_expression => (1145,1175) #"console.log(gen.next(0).value)"
______________________________postfix_expression => (1145,1175) #"console.log(gen.next(0).value)"
________________________________left_hand_side_expression => (1145,1175) #"console.log(gen.next(0).value)"
__________________________________call_expression => (1145,1175) #"console.log(gen.next(0).value)"
____________________________________member_expression => (1145,1156) #"console.log"
______________________________________primary_expression => (1145,1152) #"console"
________________________________________identifier_reference => (1145,1152) #"console"
______________________________________identifier_name => (1153,1156) #"log"
____________________________________arguments => (1156,1175) #"(gen.next(0).value)"
______________________________________argument_list => (1157,1174) #"gen.next(0).value"
________________________________________assignment_expression__in => (1157,1174) #"gen.next(0).value"
__________________________________________conditional_expression__in => (1157,1174) #"gen.next(0).value"
____________________________________________logical_or_expression__in => (1157,1174) #"gen.next(0).value"
______________________________________________logical_and_expression__in => (1157,1174) #"gen.next(0).value"
________________________________________________bitwise_or_expression__in => (1157,1174) #"gen.next(0).value"
__________________________________________________bitwise_xor_expression__in => (1157,1174) #"gen.next(0).value"
____________________________________________________bitwise_and_expression__in => (1157,1174) #"gen.next(0).value"
______________________________________________________equality_expression__in => (1157,1174) #"gen.next(0).value"
________________________________________________________relational_expression__in => (1157,1174) #"gen.next(0).value"
__________________________________________________________shift_expression => (1157,1174) #"gen.next(0).value"
____________________________________________________________additive_expression => (1157,1174) #"gen.next(0).value"
______________________________________________________________multiplicative_expression => (1157,1174) #"gen.next(0).value"
________________________________________________________________unary_expression => (1157,1174) #"gen.next(0).value"
__________________________________________________________________postfix_expression => (1157,1174) #"gen.next(0).value"
____________________________________________________________________left_hand_side_expression => (1157,1174) #"gen.next(0).value"
______________________________________________________________________call_expression => (1157,1174) #"gen.next(0).value"
________________________________________________________________________member_expression => (1157,1165) #"gen.next"
__________________________________________________________________________primary_expression => (1157,1160) #"gen"
____________________________________________________________________________identifier_reference => (1157,1160) #"gen"
__________________________________________________________________________identifier_name => (1161,1165) #"next"
________________________________________________________________________arguments => (1165,1168) #"(0)"
__________________________________________________________________________argument_list => (1166,1167) #"0"
____________________________________________________________________________assignment_expression__in => (1166,1167) #"0"
______________________________________________________________________________conditional_expression__in => (1166,1167) #"0"
________________________________________________________________________________logical_or_expression__in => (1166,1167) #"0"
__________________________________________________________________________________logical_and_expression__in => (1166,1167) #"0"
____________________________________________________________________________________bitwise_or_expression__in => (1166,1167) #"0"
______________________________________________________________________________________bitwise_xor_expression__in => (1166,1167) #"0"
________________________________________________________________________________________bitwise_and_expression__in => (1166,1167) #"0"
__________________________________________________________________________________________equality_expression__in => (1166,1167) #"0"
____________________________________________________________________________________________relational_expression__in => (1166,1167) #"0"
______________________________________________________________________________________________shift_expression => (1166,1167) #"0"
________________________________________________________________________________________________additive_expression => (1166,1167) #"0"
__________________________________________________________________________________________________multiplicative_expression => (1166,1167) #"0"
____________________________________________________________________________________________________unary_expression => (1166,1167) #"0"
______________________________________________________________________________________________________postfix_expression => (1166,1167) #"0"
________________________________________________________________________________________________________left_hand_side_expression => (1166,1167) #"0"
__________________________________________________________________________________________________________new_expression => (1166,1167) #"0"
____________________________________________________________________________________________________________member_expression => (1166,1167) #"0"
______________________________________________________________________________________________________________primary_expression => (1166,1167) #"0"
________________________________________________________________________________________________________________literal => (1166,1167) #"0"
__________________________________________________________________________________________________________________numeric_literal => (1166,1167) #"0"
____________________________________________________________________________________________________________________decimal_literal => (1166,1167) #"0"
______________________________________________________________________________________________________________________decimal_integer_literal => (1166,1167) #"0"
________________________________________________________________________identifier_name => (1169,1174) #"value"
__smart_semicolon => (1175,1177) #";\n"
expression_statement => (1177,1208) #"console.log(gen.next().value);\n"
__expression__in => (1177,1206) #"console.log(gen.next().value)"
____assignment_expression__in => (1177,1206) #"console.log(gen.next().value)"
______conditional_expression__in => (1177,1206) #"console.log(gen.next().value)"
________logical_or_expression__in => (1177,1206) #"console.log(gen.next().value)"
__________logical_and_expression__in => (1177,1206) #"console.log(gen.next().value)"
____________bitwise_or_expression__in => (1177,1206) #"console.log(gen.next().value)"
______________bitwise_xor_expression__in => (1177,1206) #"console.log(gen.next().value)"
________________bitwise_and_expression__in => (1177,1206) #"console.log(gen.next().value)"
__________________equality_expression__in => (1177,1206) #"console.log(gen.next().value)"
____________________relational_expression__in => (1177,1206) #"console.log(gen.next().value)"
______________________shift_expression => (1177,1206) #"console.log(gen.next().value)"
________________________additive_expression => (1177,1206) #"console.log(gen.next().value)"
__________________________multiplicative_expression => (1177,1206) #"console.log(gen.next().value)"
____________________________unary_expression => (1177,1206) #"console.log(gen.next().value)"
______________________________postfix_expression => (1177,1206) #"console.log(gen.next().value)"
________________________________left_hand_side_expression => (1177,1206) #"console.log(gen.next().value)"
__________________________________call_expression => (1177,1206) #"console.log(gen.next().value)"
____________________________________member_expression => (1177,1188) #"console.log"
______________________________________primary_expression => (1177,1184) #"console"
________________________________________identifier_reference => (1177,1184) #"console"
______________________________________identifier_name => (1185,1188) #"log"
____________________________________arguments => (1188,1206) #"(gen.next().value)"
______________________________________argument_list => (1189,1205) #"gen.next().value"
________________________________________assignment_expression__in => (1189,1205) #"gen.next().value"
__________________________________________conditional_expression__in => (1189,1205) #"gen.next().value"
____________________________________________logical_or_expression__in => (1189,1205) #"gen.next().value"
______________________________________________logical_and_expression__in => (1189,1205) #"gen.next().value"
________________________________________________bitwise_or_expression__in => (1189,1205) #"gen.next().value"
__________________________________________________bitwise_xor_expression__in => (1189,1205) #"gen.next().value"
____________________________________________________bitwise_and_expression__in => (1189,1205) #"gen.next().value"
______________________________________________________equality_expression__in => (1189,1205) #"gen.next().value"
________________________________________________________relational_expression__in => (1189,1205) #"gen.next().value"
__________________________________________________________shift_expression => (1189,1205) #"gen.next().value"
____________________________________________________________additive_expression => (1189,1205) #"gen.next().value"
______________________________________________________________multiplicative_expression => (1189,1205) #"gen.next().value"
________________________________________________________________unary_expression => (1189,1205) #"gen.next().value"
__________________________________________________________________postfix_expression => (1189,1205) #"gen.next().value"
____________________________________________________________________left_hand_side_expression => (1189,1205) #"gen.next().value"
______________________________________________________________________call_expression => (1189,1205) #"gen.next().value"
________________________________________________________________________member_expression => (1189,1197) #"gen.next"
__________________________________________________________________________primary_expression => (1189,1192) #"gen"
____________________________________________________________________________identifier_reference => (1189,1192) #"gen"
__________________________________________________________________________identifier_name => (1193,1197) #"next"
________________________________________________________________________arguments => (1197,1199) #"()"
________________________________________________________________________identifier_name => (1200,1205) #"value"
__smart_semicolon => (1206,1208) #";\n"
declaration => (1277,1324) #"function *compose() {\n    yield* generator();\n}"
__hoistable_declaration => (1277,1324) #"function *compose() {\n    yield* generator();\n}"
____generator_declaration => (1277,1324) #"function *compose() {\n    yield* generator();\n}"
______binding_identifier => (1287,1294) #"compose"
______formal_parameters => (1295,1295) #""
______generator_body => (1303,1323) #"yield* generator();\n"
________function_body__yield => (1303,1323) #"yield* generator();\n"
__________expression_statement__yield => (1303,1323) #"yield* generator();\n"
____________expression__in_yield => (1303,1321) #"yield* generator()"
______________assignment_expression__in_yield => (1303,1321) #"yield* generator()"
________________yield_expression__in => (1303,1321) #"yield* generator()"
__________________assignment_expression__in_yield => (1310,1321) #"generator()"
____________________conditional_expression__in_yield => (1310,1321) #"generator()"
______________________logical_or_expression__in_yield => (1310,1321) #"generator()"
________________________logical_and_expression__in_yield => (1310,1321) #"generator()"
__________________________bitwise_or_expression__in_yield => (1310,1321) #"generator()"
____________________________bitwise_xor_expression__in_yield => (1310,1321) #"generator()"
______________________________bitwise_and_expression__in_yield => (1310,1321) #"generator()"
________________________________equality_expression__in_yield => (1310,1321) #"generator()"
__________________________________relational_expression__in_yield => (1310,1321) #"generator()"
____________________________________shift_expression__yield => (1310,1321) #"generator()"
______________________________________additive_expression__yield => (1310,1321) #"generator()"
________________________________________multiplicative_expression__yield => (1310,1321) #"generator()"
__________________________________________unary_expression__yield => (1310,1321) #"generator()"
____________________________________________postfix_expression__yield => (1310,1321) #"generator()"
______________________________________________left_hand_side_expression__yield => (1310,1321) #"generator()"
________________________________________________call_expression__yield => (1310,1321) #"generator()"
__________________________________________________member_expression__yield => (1310,1319) #"generator"
____________________________________________________primary_expression__yield => (1310,1319) #"generator"
______________________________________________________identifier_reference__yield => (1310,1319) #"generator"
__________________________________________________arguments__yield => (1319,1321) #"()"
____________smart_semicolon => (1321,1323) #";\n"
expression_statement => (1326,1363) #"console.log(compose().next().value);\n"
__expression__in => (1326,1361) #"console.log(compose().next().value)"
____assignment_expression__in => (1326,1361) #"console.log(compose().next().value)"
______conditional_expression__in => (1326,1361) #"console.log(compose().next().value)"
________logical_or_expression__in => (1326,1361) #"console.log(compose().next().value)"
__________logical_and_expression__in => (1326,1361) #"console.log(compose().next().value)"
____________bitwise_or_expression__in => (1326,1361) #"console.log(compose().next().value)"
______________bitwise_xor_expression__in => (1326,1361) #"console.log(compose().next().value)"
________________bitwise_and_expression__in => (1326,1361) #"console.log(compose().next().value)"
__________________equality_expression__in => (1326,1361) #"console.log(compose().next().value)"
____________________relational_expression__in => (1326,1361) #"console.log(compose().next().value)"
______________________shift_expression => (1326,1361) #"console.log(compose().next().value)"
________________________additive_expression => (1326,1361) #"console.log(compose().next().value)"
__________________________multiplicative_expression => (1326,1361) #"console.log(compose().next().value)"
____________________________unary_expression => (1326,1361) #"console.log(compose().next().value)"
______________________________postfix_expression => (1326,1361) #"console.log(compose().next().value)"
________________________________left_hand_side_expression => (1326,1361) #"console.log(compose().next().value)"
__________________________________call_expression => (1326,1361) #"console.log(compose().next().value)"
____________________________________member_expression => (1326,1337) #"console.log"
______________________________________primary_expression => (1326,1333) #"console"
________________________________________identifier_reference => (1326,1333) #"console"
______________________________________identifier_name => (1334,1337) #"log"
____________________________________arguments => (1337,1361) #"(compose().next().value)"
______________________________________argument_list => (1338,1360) #"compose().next().value"
________________________________________assignment_expression__in => (1338,1360) #"compose().next().value"
__________________________________________conditional_expression__in => (1338,1360) #"compose().next().value"
____________________________________________logical_or_expression__in => (1338,1360) #"compose().next().value"
______________________________________________logical_and_expression__in => (1338,1360) #"compose().next().value"
________________________________________________bitwise_or_expression__in => (1338,1360) #"compose().next().value"
__________________________________________________bitwise_xor_expression__in => (1338,1360) #"compose().next().value"
____________________________________________________bitwise_and_expression__in => (1338,1360) #"compose().next().value"
______________________________________________________equality_expression__in => (1338,1360) #"compose().next().value"
________________________________________________________relational_expression__in => (1338,1360) #"compose().next().value"
__________________________________________________________shift_expression => (1338,1360) #"compose().next().value"
____________________________________________________________additive_expression => (1338,1360) #"compose().next().value"
______________________________________________________________multiplicative_expression => (1338,1360) #"compose().next().value"
________________________________________________________________unary_expression => (1338,1360) #"compose().next().value"
__________________________________________________________________postfix_expression => (1338,1360) #"compose().next().value"
____________________________________________________________________left_hand_side_expression => (1338,1360) #"compose().next().value"
______________________________________________________________________call_expression => (1338,1360) #"compose().next().value"
________________________________________________________________________member_expression => (1338,1345) #"compose"
__________________________________________________________________________primary_expression => (1338,1345) #"compose"
____________________________________________________________________________identifier_reference => (1338,1345) #"compose"
________________________________________________________________________arguments => (1345,1347) #"()"
________________________________________________________________________identifier_name => (1348,1352) #"next"
________________________________________________________________________arguments => (1352,1354) #"()"
________________________________________________________________________identifier_name => (1355,1360) #"value"
__smart_semicolon => (1361,1363) #";\n"
