declaration => (146,264) #"function factorial(n, acc = 1) {\n    \'use strict\';\n    if (n <= 1) return acc;\n    return factorial(n - 1, n * acc);\n}"
  hoistable_declaration => (146,264) #"function factorial(n, acc = 1) {\n    \'use strict\';\n    if (n <= 1) return acc;\n    return factorial(n - 1, n * acc);\n}"
    function_declaration => (146,264) #"function factorial(n, acc = 1) {\n    \'use strict\';\n    if (n <= 1) return acc;\n    return factorial(n - 1, n * acc);\n}"
      binding_identifier => (155,164) #"factorial"
      formal_parameters => (165,175) #"n, acc = 1"
        formal_parameter => (165,166) #"n"
          binding_element => (165,166) #"n"
            single_name_binding => (165,166) #"n"
              binding_identifier => (165,166) #"n"
        formal_parameter => (168,175) #"acc = 1"
          binding_element => (168,175) #"acc = 1"
            single_name_binding => (168,175) #"acc = 1"
              binding_identifier => (168,171) #"acc"
              initializer__in => (172,175) #"= 1"
                assignment_expression__in => (174,175) #"1"
                  conditional_expression__in => (174,175) #"1"
                    logical_or_expression__in => (174,175) #"1"
                      logical_and_expression__in => (174,175) #"1"
                        bitwise_or_expression__in => (174,175) #"1"
                          bitwise_xor_expression__in => (174,175) #"1"
                            bitwise_and_expression__in => (174,175) #"1"
                              equality_expression__in => (174,175) #"1"
                                relational_expression__in => (174,175) #"1"
                                  shift_expression => (174,175) #"1"
                                    additive_expression => (174,175) #"1"
                                      multiplicative_expression => (174,175) #"1"
                                        unary_expression => (174,175) #"1"
                                          postfix_expression => (174,175) #"1"
                                            left_hand_side_expression => (174,175) #"1"
                                              new_expression => (174,175) #"1"
                                                member_expression => (174,175) #"1"
                                                  primary_expression => (174,175) #"1"
                                                    literal => (174,175) #"1"
                                                      numeric_literal => (174,175) #"1"
                                                        decimal_literal => (174,175) #"1"
                                                          decimal_integer_literal => (174,175) #"1"
      function_body => (183,263) #"\'use strict\';\n    if (n <= 1) return acc;\n    return factorial(n - 1, n * acc);\n"
        statement__return => (183,197) #"\'use strict\';\n"
          expression_statement => (183,197) #"\'use strict\';\n"
            expression__in => (183,195) #"\'use strict\'"
              assignment_expression__in => (183,195) #"\'use strict\'"
                conditional_expression__in => (183,195) #"\'use strict\'"
                  logical_or_expression__in => (183,195) #"\'use strict\'"
                    logical_and_expression__in => (183,195) #"\'use strict\'"
                      bitwise_or_expression__in => (183,195) #"\'use strict\'"
                        bitwise_xor_expression__in => (183,195) #"\'use strict\'"
                          bitwise_and_expression__in => (183,195) #"\'use strict\'"
                            equality_expression__in => (183,195) #"\'use strict\'"
                              relational_expression__in => (183,195) #"\'use strict\'"
                                shift_expression => (183,195) #"\'use strict\'"
                                  additive_expression => (183,195) #"\'use strict\'"
                                    multiplicative_expression => (183,195) #"\'use strict\'"
                                      unary_expression => (183,195) #"\'use strict\'"
                                        postfix_expression => (183,195) #"\'use strict\'"
                                          left_hand_side_expression => (183,195) #"\'use strict\'"
                                            new_expression => (183,195) #"\'use strict\'"
                                              member_expression => (183,195) #"\'use strict\'"
                                                primary_expression => (183,195) #"\'use strict\'"
                                                  literal => (183,195) #"\'use strict\'"
                                                    string_literal => (183,195) #"\'use strict\'"
            smart_semicolon => (195,197) #";\n"
        statement__return => (201,225) #"if (n <= 1) return acc;\n"
          if_statement__return => (201,225) #"if (n <= 1) return acc;\n"
            expression__in => (205,211) #"n <= 1"
              assignment_expression__in => (205,211) #"n <= 1"
                conditional_expression__in => (205,211) #"n <= 1"
                  logical_or_expression__in => (205,211) #"n <= 1"
                    logical_and_expression__in => (205,211) #"n <= 1"
                      bitwise_or_expression__in => (205,211) #"n <= 1"
                        bitwise_xor_expression__in => (205,211) #"n <= 1"
                          bitwise_and_expression__in => (205,211) #"n <= 1"
                            equality_expression__in => (205,211) #"n <= 1"
                              relational_expression__in => (205,211) #"n <= 1"
                                shift_expression => (205,207) #"n "
                                  additive_expression => (205,207) #"n "
                                    multiplicative_expression => (205,207) #"n "
                                      unary_expression => (205,207) #"n "
                                        postfix_expression => (205,207) #"n "
                                          left_hand_side_expression => (205,207) #"n "
                                            new_expression => (205,207) #"n "
                                              member_expression => (205,207) #"n "
                                                primary_expression => (205,206) #"n"
                                                  identifier_reference => (205,206) #"n"
                                relational_operator__in => (207,209) #"<="
                                shift_expression => (210,211) #"1"
                                  additive_expression => (210,211) #"1"
                                    multiplicative_expression => (210,211) #"1"
                                      unary_expression => (210,211) #"1"
                                        postfix_expression => (210,211) #"1"
                                          left_hand_side_expression => (210,211) #"1"
                                            new_expression => (210,211) #"1"
                                              member_expression => (210,211) #"1"
                                                primary_expression => (210,211) #"1"
                                                  literal => (210,211) #"1"
                                                    numeric_literal => (210,211) #"1"
                                                      decimal_literal => (210,211) #"1"
                                                        decimal_integer_literal => (210,211) #"1"
            statement__return => (213,225) #"return acc;\n"
              return_statement => (213,225) #"return acc;\n"
                expression__in => (220,223) #"acc"
                  assignment_expression__in => (220,223) #"acc"
                    conditional_expression__in => (220,223) #"acc"
                      logical_or_expression__in => (220,223) #"acc"
                        logical_and_expression__in => (220,223) #"acc"
                          bitwise_or_expression__in => (220,223) #"acc"
                            bitwise_xor_expression__in => (220,223) #"acc"
                              bitwise_and_expression__in => (220,223) #"acc"
                                equality_expression__in => (220,223) #"acc"
                                  relational_expression__in => (220,223) #"acc"
                                    shift_expression => (220,223) #"acc"
                                      additive_expression => (220,223) #"acc"
                                        multiplicative_expression => (220,223) #"acc"
                                          unary_expression => (220,223) #"acc"
                                            postfix_expression => (220,223) #"acc"
                                              left_hand_side_expression => (220,223) #"acc"
                                                new_expression => (220,223) #"acc"
                                                  member_expression => (220,223) #"acc"
                                                    primary_expression => (220,223) #"acc"
                                                      identifier_reference => (220,223) #"acc"
                smart_semicolon => (223,225) #";\n"
        statement__return => (229,263) #"return factorial(n - 1, n * acc);\n"
          return_statement => (229,263) #"return factorial(n - 1, n * acc);\n"
            expression__in => (236,261) #"factorial(n - 1, n * acc)"
              assignment_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                conditional_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                  logical_or_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                    logical_and_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                      bitwise_or_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                        bitwise_xor_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                          bitwise_and_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                            equality_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                              relational_expression__in => (236,261) #"factorial(n - 1, n * acc)"
                                shift_expression => (236,261) #"factorial(n - 1, n * acc)"
                                  additive_expression => (236,261) #"factorial(n - 1, n * acc)"
                                    multiplicative_expression => (236,261) #"factorial(n - 1, n * acc)"
                                      unary_expression => (236,261) #"factorial(n - 1, n * acc)"
                                        postfix_expression => (236,261) #"factorial(n - 1, n * acc)"
                                          left_hand_side_expression => (236,261) #"factorial(n - 1, n * acc)"
                                            call_expression => (236,261) #"factorial(n - 1, n * acc)"
                                              member_expression => (236,245) #"factorial"
                                                primary_expression => (236,245) #"factorial"
                                                  identifier_reference => (236,245) #"factorial"
                                              arguments => (245,261) #"(n - 1, n * acc)"
                                                argument_list => (246,260) #"n - 1, n * acc"
                                                  assignment_expression__in => (246,251) #"n - 1"
                                                    conditional_expression__in => (246,251) #"n - 1"
                                                      logical_or_expression__in => (246,251) #"n - 1"
                                                        logical_and_expression__in => (246,251) #"n - 1"
                                                          bitwise_or_expression__in => (246,251) #"n - 1"
                                                            bitwise_xor_expression__in => (246,251) #"n - 1"
                                                              bitwise_and_expression__in => (246,251) #"n - 1"
                                                                equality_expression__in => (246,251) #"n - 1"
                                                                  relational_expression__in => (246,251) #"n - 1"
                                                                    shift_expression => (246,251) #"n - 1"
                                                                      additive_expression => (246,251) #"n - 1"
                                                                        multiplicative_expression => (246,248) #"n "
                                                                          unary_expression => (246,248) #"n "
                                                                            postfix_expression => (246,248) #"n "
                                                                              left_hand_side_expression => (246,248) #"n "
                                                                                new_expression => (246,248) #"n "
                                                                                  member_expression => (246,248) #"n "
                                                                                    primary_expression => (246,247) #"n"
                                                                                      identifier_reference => (246,247) #"n"
                                                                        additive_operator => (248,249) #"-"
                                                                        multiplicative_expression => (250,251) #"1"
                                                                          unary_expression => (250,251) #"1"
                                                                            postfix_expression => (250,251) #"1"
                                                                              left_hand_side_expression => (250,251) #"1"
                                                                                new_expression => (250,251) #"1"
                                                                                  member_expression => (250,251) #"1"
                                                                                    primary_expression => (250,251) #"1"
                                                                                      literal => (250,251) #"1"
                                                                                        numeric_literal => (250,251) #"1"
                                                                                          decimal_literal => (250,251) #"1"
                                                                                            decimal_integer_literal => (250,251) #"1"
                                                  assignment_expression__in => (253,260) #"n * acc"
                                                    conditional_expression__in => (253,260) #"n * acc"
                                                      logical_or_expression__in => (253,260) #"n * acc"
                                                        logical_and_expression__in => (253,260) #"n * acc"
                                                          bitwise_or_expression__in => (253,260) #"n * acc"
                                                            bitwise_xor_expression__in => (253,260) #"n * acc"
                                                              bitwise_and_expression__in => (253,260) #"n * acc"
                                                                equality_expression__in => (253,260) #"n * acc"
                                                                  relational_expression__in => (253,260) #"n * acc"
                                                                    shift_expression => (253,260) #"n * acc"
                                                                      additive_expression => (253,260) #"n * acc"
                                                                        multiplicative_expression => (253,260) #"n * acc"
                                                                          unary_expression => (253,255) #"n "
                                                                            postfix_expression => (253,255) #"n "
                                                                              left_hand_side_expression => (253,255) #"n "
                                                                                new_expression => (253,255) #"n "
                                                                                  member_expression => (253,255) #"n "
                                                                                    primary_expression => (253,254) #"n"
                                                                                      identifier_reference => (253,254) #"n"
                                                                          multiplicative_operator => (255,256) #"*"
                                                                          unary_expression => (257,260) #"acc"
                                                                            postfix_expression => (257,260) #"acc"
                                                                              left_hand_side_expression => (257,260) #"acc"
                                                                                new_expression => (257,260) #"acc"
                                                                                  member_expression => (257,260) #"acc"
                                                                                    primary_expression => (257,260) #"acc"
                                                                                      identifier_reference => (257,260) #"acc"
            smart_semicolon => (261,263) #";\n"
statement => (354,388) #"console.log( factorial(100000) );\n"
  expression_statement => (354,388) #"console.log( factorial(100000) );\n"
    expression__in => (354,386) #"console.log( factorial(100000) )"
      assignment_expression__in => (354,386) #"console.log( factorial(100000) )"
        conditional_expression__in => (354,386) #"console.log( factorial(100000) )"
          logical_or_expression__in => (354,386) #"console.log( factorial(100000) )"
            logical_and_expression__in => (354,386) #"console.log( factorial(100000) )"
              bitwise_or_expression__in => (354,386) #"console.log( factorial(100000) )"
                bitwise_xor_expression__in => (354,386) #"console.log( factorial(100000) )"
                  bitwise_and_expression__in => (354,386) #"console.log( factorial(100000) )"
                    equality_expression__in => (354,386) #"console.log( factorial(100000) )"
                      relational_expression__in => (354,386) #"console.log( factorial(100000) )"
                        shift_expression => (354,386) #"console.log( factorial(100000) )"
                          additive_expression => (354,386) #"console.log( factorial(100000) )"
                            multiplicative_expression => (354,386) #"console.log( factorial(100000) )"
                              unary_expression => (354,386) #"console.log( factorial(100000) )"
                                postfix_expression => (354,386) #"console.log( factorial(100000) )"
                                  left_hand_side_expression => (354,386) #"console.log( factorial(100000) )"
                                    call_expression => (354,386) #"console.log( factorial(100000) )"
                                      member_expression => (354,365) #"console.log"
                                        primary_expression => (354,361) #"console"
                                          identifier_reference => (354,361) #"console"
                                        identifier_name => (362,365) #"log"
                                      arguments => (365,386) #"( factorial(100000) )"
                                        argument_list => (367,385) #"factorial(100000) "
                                          assignment_expression__in => (367,385) #"factorial(100000) "
                                            conditional_expression__in => (367,385) #"factorial(100000) "
                                              logical_or_expression__in => (367,385) #"factorial(100000) "
                                                logical_and_expression__in => (367,385) #"factorial(100000) "
                                                  bitwise_or_expression__in => (367,385) #"factorial(100000) "
                                                    bitwise_xor_expression__in => (367,385) #"factorial(100000) "
                                                      bitwise_and_expression__in => (367,385) #"factorial(100000) "
                                                        equality_expression__in => (367,385) #"factorial(100000) "
                                                          relational_expression__in => (367,385) #"factorial(100000) "
                                                            shift_expression => (367,385) #"factorial(100000) "
                                                              additive_expression => (367,385) #"factorial(100000) "
                                                                multiplicative_expression => (367,385) #"factorial(100000) "
                                                                  unary_expression => (367,385) #"factorial(100000) "
                                                                    postfix_expression => (367,385) #"factorial(100000) "
                                                                      left_hand_side_expression => (367,385) #"factorial(100000) "
                                                                        call_expression => (367,385) #"factorial(100000) "
                                                                          member_expression => (367,376) #"factorial"
                                                                            primary_expression => (367,376) #"factorial"
                                                                              identifier_reference => (367,376) #"factorial"
                                                                          arguments => (376,384) #"(100000)"
                                                                            argument_list => (377,383) #"100000"
                                                                              assignment_expression__in => (377,383) #"100000"
                                                                                conditional_expression__in => (377,383) #"100000"
                                                                                  logical_or_expression__in => (377,383) #"100000"
                                                                                    logical_and_expression__in => (377,383) #"100000"
                                                                                      bitwise_or_expression__in => (377,383) #"100000"
                                                                                        bitwise_xor_expression__in => (377,383) #"100000"
                                                                                          bitwise_and_expression__in => (377,383) #"100000"
                                                                                            equality_expression__in => (377,383) #"100000"
                                                                                              relational_expression__in => (377,383) #"100000"
                                                                                                shift_expression => (377,383) #"100000"
                                                                                                  additive_expression => (377,383) #"100000"
                                                                                                    multiplicative_expression => (377,383) #"100000"
                                                                                                      unary_expression => (377,383) #"100000"
                                                                                                        postfix_expression => (377,383) #"100000"
                                                                                                          left_hand_side_expression => (377,383) #"100000"
                                                                                                            new_expression => (377,383) #"100000"
                                                                                                              member_expression => (377,383) #"100000"
                                                                                                                primary_expression => (377,383) #"100000"
                                                                                                                  literal => (377,383) #"100000"
                                                                                                                    numeric_literal => (377,383) #"100000"
                                                                                                                      decimal_literal => (377,383) #"100000"
                                                                                                                        decimal_integer_literal => (377,383) #"100000"
    smart_semicolon => (386,388) #";\n"
