declaration => (190,319) #"function f() {\n    let x = \'n\';\n    {\n        // okay, block scoped name\n        const x = \"sneaky\";\n    }\n\n    console.log(x);\n}"
  hoistable_declaration => (190,319) #"function f() {\n    let x = \'n\';\n    {\n        // okay, block scoped name\n        const x = \"sneaky\";\n    }\n\n    console.log(x);\n}"
    function_declaration => (190,319) #"function f() {\n    let x = \'n\';\n    {\n        // okay, block scoped name\n        const x = \"sneaky\";\n    }\n\n    console.log(x);\n}"
      binding_identifier => (199,200) #"f"
      formal_parameters => (201,201) #""
      function_body => (209,318) #"let x = \'n\';\n    {\n        // okay, block scoped name\n        const x = \"sneaky\";\n    }\n\n    console.log(x);\n"
        declaration => (209,222) #"let x = \'n\';\n"
          lexical_declaration__in => (209,222) #"let x = \'n\';\n"
            let_or_const => (209,212) #"let"
            binding_list__in => (213,220) #"x = \'n\'"
              lexical_binding__in => (213,220) #"x = \'n\'"
                binding_identifier => (213,214) #"x"
                initializer__in => (215,220) #"= \'n\'"
                  assignment_expression__in => (217,220) #"\'n\'"
                    conditional_expression__in => (217,220) #"\'n\'"
                      logical_or_expression__in => (217,220) #"\'n\'"
                        logical_and_expression__in => (217,220) #"\'n\'"
                          bitwise_or_expression__in => (217,220) #"\'n\'"
                            bitwise_xor_expression__in => (217,220) #"\'n\'"
                              bitwise_and_expression__in => (217,220) #"\'n\'"
                                equality_expression__in => (217,220) #"\'n\'"
                                  relational_expression__in => (217,220) #"\'n\'"
                                    shift_expression => (217,220) #"\'n\'"
                                      additive_expression => (217,220) #"\'n\'"
                                        multiplicative_expression => (217,220) #"\'n\'"
                                          unary_expression => (217,220) #"\'n\'"
                                            postfix_expression => (217,220) #"\'n\'"
                                              left_hand_side_expression => (217,220) #"\'n\'"
                                                new_expression => (217,220) #"\'n\'"
                                                  member_expression => (217,220) #"\'n\'"
                                                    primary_expression => (217,220) #"\'n\'"
                                                      literal => (217,220) #"\'n\'"
                                                        string_literal => (217,220) #"\'n\'"
            smart_semicolon => (220,222) #";\n"
        statement__return => (226,296) #"{\n        // okay, block scoped name\n        const x = \"sneaky\";\n    }"
          block_statement__return => (226,296) #"{\n        // okay, block scoped name\n        const x = \"sneaky\";\n    }"
            block__return => (226,296) #"{\n        // okay, block scoped name\n        const x = \"sneaky\";\n    }"
              declaration => (271,291) #"const x = \"sneaky\";\n"
                lexical_declaration__in => (271,291) #"const x = \"sneaky\";\n"
                  let_or_const => (271,276) #"const"
                  binding_list__in => (277,289) #"x = \"sneaky\""
                    lexical_binding__in => (277,289) #"x = \"sneaky\""
                      binding_identifier => (277,278) #"x"
                      initializer__in => (279,289) #"= \"sneaky\""
                        assignment_expression__in => (281,289) #"\"sneaky\""
                          conditional_expression__in => (281,289) #"\"sneaky\""
                            logical_or_expression__in => (281,289) #"\"sneaky\""
                              logical_and_expression__in => (281,289) #"\"sneaky\""
                                bitwise_or_expression__in => (281,289) #"\"sneaky\""
                                  bitwise_xor_expression__in => (281,289) #"\"sneaky\""
                                    bitwise_and_expression__in => (281,289) #"\"sneaky\""
                                      equality_expression__in => (281,289) #"\"sneaky\""
                                        relational_expression__in => (281,289) #"\"sneaky\""
                                          shift_expression => (281,289) #"\"sneaky\""
                                            additive_expression => (281,289) #"\"sneaky\""
                                              multiplicative_expression => (281,289) #"\"sneaky\""
                                                unary_expression => (281,289) #"\"sneaky\""
                                                  postfix_expression => (281,289) #"\"sneaky\""
                                                    left_hand_side_expression => (281,289) #"\"sneaky\""
                                                      new_expression => (281,289) #"\"sneaky\""
                                                        member_expression => (281,289) #"\"sneaky\""
                                                          primary_expression => (281,289) #"\"sneaky\""
                                                            literal => (281,289) #"\"sneaky\""
                                                              string_literal => (281,289) #"\"sneaky\""
                  smart_semicolon => (289,291) #";\n"
        statement__return => (302,318) #"console.log(x);\n"
          expression_statement => (302,318) #"console.log(x);\n"
            expression__in => (302,316) #"console.log(x)"
              assignment_expression__in => (302,316) #"console.log(x)"
                conditional_expression__in => (302,316) #"console.log(x)"
                  logical_or_expression__in => (302,316) #"console.log(x)"
                    logical_and_expression__in => (302,316) #"console.log(x)"
                      bitwise_or_expression__in => (302,316) #"console.log(x)"
                        bitwise_xor_expression__in => (302,316) #"console.log(x)"
                          bitwise_and_expression__in => (302,316) #"console.log(x)"
                            equality_expression__in => (302,316) #"console.log(x)"
                              relational_expression__in => (302,316) #"console.log(x)"
                                shift_expression => (302,316) #"console.log(x)"
                                  additive_expression => (302,316) #"console.log(x)"
                                    multiplicative_expression => (302,316) #"console.log(x)"
                                      unary_expression => (302,316) #"console.log(x)"
                                        postfix_expression => (302,316) #"console.log(x)"
                                          left_hand_side_expression => (302,316) #"console.log(x)"
                                            call_expression => (302,316) #"console.log(x)"
                                              member_expression => (302,313) #"console.log"
                                                primary_expression => (302,309) #"console"
                                                  identifier_reference => (302,309) #"console"
                                                identifier_name => (310,313) #"log"
                                              arguments => (313,316) #"(x)"
                                                argument_list => (314,315) #"x"
                                                  assignment_expression__in => (314,315) #"x"
                                                    conditional_expression__in => (314,315) #"x"
                                                      logical_or_expression__in => (314,315) #"x"
                                                        logical_and_expression__in => (314,315) #"x"
                                                          bitwise_or_expression__in => (314,315) #"x"
                                                            bitwise_xor_expression__in => (314,315) #"x"
                                                              bitwise_and_expression__in => (314,315) #"x"
                                                                equality_expression__in => (314,315) #"x"
                                                                  relational_expression__in => (314,315) #"x"
                                                                    shift_expression => (314,315) #"x"
                                                                      additive_expression => (314,315) #"x"
                                                                        multiplicative_expression => (314,315) #"x"
                                                                          unary_expression => (314,315) #"x"
                                                                            postfix_expression => (314,315) #"x"
                                                                              left_hand_side_expression => (314,315) #"x"
                                                                                new_expression => (314,315) #"x"
                                                                                  member_expression => (314,315) #"x"
                                                                                    primary_expression => (314,315) #"x"
                                                                                      identifier_reference => (314,315) #"x"
            smart_semicolon => (316,318) #";\n"
statement => (321,326) #"f();\n"
  expression_statement => (321,326) #"f();\n"
    expression__in => (321,324) #"f()"
      assignment_expression__in => (321,324) #"f()"
        conditional_expression__in => (321,324) #"f()"
          logical_or_expression__in => (321,324) #"f()"
            logical_and_expression__in => (321,324) #"f()"
              bitwise_or_expression__in => (321,324) #"f()"
                bitwise_xor_expression__in => (321,324) #"f()"
                  bitwise_and_expression__in => (321,324) #"f()"
                    equality_expression__in => (321,324) #"f()"
                      relational_expression__in => (321,324) #"f()"
                        shift_expression => (321,324) #"f()"
                          additive_expression => (321,324) #"f()"
                            multiplicative_expression => (321,324) #"f()"
                              unary_expression => (321,324) #"f()"
                                postfix_expression => (321,324) #"f()"
                                  left_hand_side_expression => (321,324) #"f()"
                                    call_expression => (321,324) #"f()"
                                      member_expression => (321,322) #"f"
                                        primary_expression => (321,322) #"f"
                                          identifier_reference => (321,322) #"f"
                                      arguments => (322,324) #"()"
    smart_semicolon => (324,326) #";\n"
